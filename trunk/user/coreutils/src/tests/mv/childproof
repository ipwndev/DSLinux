#!/bin/sh
# Ensure that cp/mv don't clobber a just-copied file.
# With fileutils-4.1 and earlier, this test would fail.

# Copyright (C) 2001, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  cp --version
  mv --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
tmp=childproof.$$
trap 'status=$?; cd "$pwd" && rm -rf $tmp && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir a b c || framework_failure=1
echo a > a/f || framework_failure=1
echo b > b/f || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework' 1>&2
  (exit 1); exit 1
fi

fail=0

cp a/f b/f c 2> /dev/null && fail=1
test -f a/f || fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test "`cat c/f`" = a || fail=1
rm -f c/f

# With --backup=numbered, it should succeed
cp --backup=numbered a/f b/f c || fail=1
test -f a/f || fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test -f c/f.~1~ || fail=1
rm -f c/f*

mv a/f b/f c 2> /dev/null && fail=1
test -f a/f && fail=1
test -f b/f || fail=1
test -f c/f || fail=1
test "`cat c/f`" = a || fail=1

# Make sure mv still works when moving hard links.
# This is where the same_file test is necessary, and why
# we save file names in addition to dev/ino.
rm -f c/f* b/f
touch a/f
ln a/f b/g
mv a/f b/g c || fail=1
test -f a/f && fail=1
test -f b/g && fail=1
test -f c/f || fail=1
test -f c/g || fail=1

touch a/f b/f b/g
mv a/f b/f b/g c 2> /dev/null && fail=1
test -f a/f && fail=1  # a/f should have been moved
test -f b/f || fail=1  # b/f should remain
test -f b/g && fail=1  # b/g should have been moved
test -f c/f || fail=1
test -f c/g || fail=1

(exit $fail); exit $fail
