#!/bin/sh
# Make sure we give a sensible diagnostic when a cross-device `mv'
# fails, e.g., because the destination cannot be unlinked.
# This is a bit fragile since it relies on the string used
# for EPERM: `permission denied'.

# Copyright (C) 2002, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  mv --version
fi

. $srcdir/../other-fs-tmpdir
. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

if test -z "$other_partition_tmpdir"; then
  (exit 77); exit 77
fi
t0="$t0 $other_partition_tmpdir"

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
touch k $other_partition_tmpdir/k || framework_failure=1
chmod u-w $other_partition_tmpdir || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

mv -f k $other_partition_tmpdir 2> out && fail=1
cat <<EOF > exp
mv: inter-device move failed: \`k' to \`$other_partition_tmpdir/k'; unable to remove target: Permission denied
EOF

# On some (less-compliant) systems, we get EPERM in this case.
# Accept either diagnostic.
cat <<EOF > exp2
mv: cannot move \`k' to \`$other_partition_tmpdir/k': Permission denied
EOF

if cmp out exp >/dev/null 2>&1; then
  :
else
  if cmp out exp2; then
    :
  else
    fail=1
  fi
fi
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
