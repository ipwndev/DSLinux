#!/bin/sh
# Exercise mv's file-descriptor-leak bug, reported against coreutils-5.2.1
# and fixed (properly) on 2004-10-21.

# Copyright (C) 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.


# This test is relatively expensive, and might well evoke a
# framework-failure on systems with a smaller command-line length
# limit so don't run it by default.
. $srcdir/../expensive

if test "$VERBOSE" = yes; then
  set -x
  mv --version
fi

. $srcdir/../other-fs-tmpdir
. $srcdir/../envvar-check
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

if test -z "$other_partition_tmpdir"; then
  (exit 77); exit 77
fi
t0="$t0 $other_partition_tmpdir"

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

b="0 1 2 3 4 5 6 7 8 9
a b c d e f g h i j k l m n o p q r s t u v w x y z
_A _B _C _D _E _F _G _H _I _J _K _L _M _N _O _P _Q _R _S _T _U _V _W _X _Y _Z"

for i in `echo $b`; do
  echo $i
  for j in $b; do
    echo $i$j
  done
done > .dirs
mkdir `cat .dirs` || framework_failure=1
sed 's,$,/f,' .dirs | xargs touch

last_file=`tail -n1 .dirs`/f
test -f $last_file || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

mv * $other_partition_tmpdir || fail=1
test -f $last_file/f && fail=1
rm .dirs

ls -A > ../out || fail=1
test -s ../out && fail=1

(exit $fail); exit $fail
