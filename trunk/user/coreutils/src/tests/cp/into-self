#!/bin/sh
# Confirm that copying a directory into itself gets a proper diagnostic.

# Copyright (C) 2001, 2002, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

# In 4.0.35 and earlier, `mkdir dir && cp -R dir dir' would produce this:
#   cp: won't create hard link `dir/dir/dir' to directory `'
# Now it gives this:
#   cp: can't copy a directory `dir' into itself `dir/dir'

if test "$VERBOSE" = yes; then
  set -x
  cp --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp;tmp=$t0/$$
trap 'status=$?; cd "$pwd" && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

mkdir dir || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework' 1>&2
  (exit 1); exit 1
fi

fail=0

# This command should exit nonzero.
cp -R dir dir 2> out && fail=1

cat > exp <<\EOF
cp: cannot copy a directory, `dir', into itself, `dir/dir'
EOF
#'

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
