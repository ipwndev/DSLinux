#!/bin/sh
# Make sure `chown 0 f; rm f' prompts before removing f.

# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,
# Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  rm --version
fi

. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp;tmp=$t0/$$
trap 'status=$?; cd "$pwd" && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework' 1>&2
  (exit 1); exit 1
fi

fail=0

# Skip this test if there is no /dev/stdin file.
ls /dev/stdin >/dev/null 2>&1 \
  || { (exit 77); exit; }

touch f
chmod 0 f
rm ---presume-input-tty f > out 2>&1 &
pid=$!

# Wait a second, to give a buggy rm (as in fileutils-4.0.40)
# enough time to remove the file.
sleep 1

# The file must still exist.
test -f f || fail=1

kill $pid > /dev/null 2>&1

# Note the trailing `x' -- so I don't have to have a trailing
# blank in this file :-)
cat > exp <<\EOF
rm: remove write-protected regular empty file `f'? x
EOF
#`

# Append an `x' and a newline.
echo x >> out

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
