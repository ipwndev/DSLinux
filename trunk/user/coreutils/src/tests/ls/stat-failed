#!/bin/sh
# Verify that ls works properly when it fails to stat a file that is
# not mentioned on the command line.

# Copyright (C) 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  ls --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir d || framework_failure=1
ln -s / d/s || framework_failure=1
chmod 600 d || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

ls -Log d > out 2> err
test $? = 1 || fail=1

cat <<\EOF > exp || fail=1
total 0
?????????? ? ?            ? s
EOF

sed 's/^l/?/' out | cmp - exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

# Ensure that the offsets in --dired output are accurate.
rm -f out exp
ls --dired -l d > out 2> /dev/null && fail=1

cat <<\EOF > exp || fail=1
  total 0
  ?????????? ? ? ? ?            ? s
//DIRED// 44 45
//DIRED-OPTIONS// --quoting-style=literal
EOF

sed 's/^  l/  ?/' out | cmp - exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
