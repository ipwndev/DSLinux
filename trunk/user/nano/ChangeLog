GNU nano 1.2.5 - 2005.05.15
- files.c:
  open_prevfile(), open_nextfile()
	- Translate the "New Buffer" string when displaying "Switched
	  to" messages on the statusbar. (DLR)
  input_tab()
	- Fix snprintf() call so that we don't segfault when trying to
	  complete a filename containing %'s. (Ulf Härnhammar)
- global.c:
  shortcut_init()
	- Move the "Cancel" shortcut up so that it's just after the "Get
	  Help" shortcut, for consistency with the other shortcut lists.
	  (DLR)
- nano.c:
  do_int_spell_fix()
	- Move the REVERSE_SEARCH flag toggling into the NANO_SMALL
	  #ifdef, since the tiny version of nano doesn't support reverse
	  searching.  Also, turn the USE_REGEXP flag off during spell
	  checking in order to avoid a potential segfault. (DLR)
  quote_length()
	- Fix problem where quoted justify wouldn't work if HAVE_REGEX_H
	  wasn't set. (David Benbennick)
  main()
	- Interpret the escape sequences Esc O F and Esc O H as End and
	  Home, respectively, as nanogetstr() does.  Also, don't
	  interpret Esc O z as a "NumLock glitch" value. (DLR)
	- Call setlocale() outside the ENABLE_NLS #ifdef, since UTF-8
	  support won't work properly if the locale isn't set, whether
	  NLS is enabled or not. (Junichi Uekawa)
- winio.c:
  blocking_wgetch()
	- New function used in place of blocking wgetch() calls.  If we
	  get ERR when using blocking input, it means that the input
	  source that we were using is gone.  In this case, call
	  handle_hupterm(), so that nano dies gracefully instead of
	  going into an infinite loop. (DLR, found by Jim Uhl)
  get_page_start()
	- For consistency, tweak so that scrolling always occurs when we
	  try to move onto the "$" at the end of the line, as opposed to
	  (a) when we move onto the "$" at the end of the line on the
	  first page and (b) when we move onto the character just before
	  the "$" on subsequent pages. (DLR)

GNU nano 1.2.4 - 2004.06.27
- General:
	- Translation updates (see po/ChangeLog for details).
	- Don't run handle_sigwinch() handler if we're reading in
	  or writing out a file.   Global variable jumpok controls
	  when to not run the winch handles, static resizepending
	  is set, handler in main to run handle_sigwinch() when set.
	  Should fix segfaults when nano is initially suspended while 
	  reading in a file (found by Mike Frysinger).
	- Port to the Tandem NonStop Kernel (nsr-tandem-nsk). (Tom
	  Bates; minor tweaks by DLR)
	- Fix memory corruption problems caused by assigning the
	  return value of statusq() to answer, since statusq() changes
	  the value that answer points to. (Christian Weisgerber)
- nano.c:
  handle_sigwinch()
	- Rework so that nano properly redraws the screen on systems
	  that don't have resizeterm() and/or wresize().  In curses, we
	  now leave and immediately reenter curses mode via endwin() and
	  refresh(), and then reinitialize all windows via
	  window_init().  In slang, the above routine will only work if
	  the resize made the window smaller, so we now leave and
	  immediately reenter screen management mode via
	  SLsmg_reset_smg() and SLsmg_init_smg(), and then reinitialize
	  all windows via window_init().  (DLR, adapted from code in
	  Minimum Profit 3.3.0 and mutt 1.4.2.1, respectively)
  main()
	- Don't call open_file with quiet flag set.  Fixes Debian bug 
	  #246956 (no warning when trying to open non-readable file).
	- Add an extra titlebar() call (useful when reading in a big 
	  file).
- nano.h:
	- Move the NANO_H include guard up before the first #include.
	  (DLR)
- configure.ac:
	- Remove the checks for resizeterm() and wresize(), as they're
	  no longer needed. (DLR)
- config.rpath:
	- Replace usage of egrep with grep -E, avoiding a XSI:ism (David
	  Weinehall)

GNU nano 1.2.3 - 2004.01.17
- General:
	- Translation updates (see po/ChangeLog for details).
	- Make sure the "historylog" option isn't included at all if
	  NANO_SMALL is defined. (DLR)
- files.c:
  read_file()
	- After we've read in a file and possibly converted it from
	  DOS/Mac format, set fileformat back to 0 to prevent erroneous
	  conversion messages when we read other files in. (DLR)
  do_browser()
  	- Allow '?' to open the help browser, for compatibility with
  	  Pico.  Also remove some of the Pico compatibility options in
  	  the file browser that don't work properly for current Pico.
  	  Backspace, 'l', 'q', and 'u' are invalid.  'd' deletes the
  	  highlighted file, and 'r' renames the highlighted file;
  	  neither of these are implemented. (DLR)
- nano.c:
  window_init()
	- If keypad() was TRUE before we pressed Meta-X (as Meta-X
  	  apparently turns it off under both ncurses and PDCurses), set
  	  it to TRUE afterwards. (DLR)
  do_suspend()
        - Use handle_hupterm() to handle SIGHUP and SIGTERM so we can
          properly deal with them while nano is suspended. (DLR; problem
          found by David Benbennick)
- proto.h:
	- Surround the do_prev_word() and do_next_word() prototypes with
	  NANO_SMALL #ifdefs, since the actual functions aren't included
	  in tiny mode. (DLR)
- search.c:
  findnextstr(), do_replace_loop()
	- Fix potential infinite loops and other misbehavior when doing
	  beginning-of-line or end-of-line regex replacements ("^", "$",
	  and "^$").  Add a no_sameline parameter to findnextstr(), and
	  set it in the calls in do_replace_loop() when such regexes are
	  found, so that such regexes are only found once per line.
	  Also change length_change from a long to an int; size_t is
	  unsuitable due to its being unsigned. (DLR; found by Mike
	  Frysinger and DLR, match_len by David Benbennick)  David
	  Benbennick: Add a few minor cleanups to do_replace_loop(), and
	  fix segfault when doing a regex replace of a string that
	  matches inside a line (e.g. replace the "b" in "abc" with
	  anything).
- winio.c:
  titlebar()
	- Fix problem with the available space for a filename on the
	  titlebar's being short by one. (DLR)
  do_credits()
	- Update the copyright years to "1999-2003", to match those
	  given in the rest of the code. (DLR)
- nanorc.sample:
	- Remove duplicate "historylog" entry. (DLR)
- AUTHORS:
	- Updated to show 1.2/1.3 maintainers.
- THANKS:
	- Added Danilo Segan for the Serbian translation.

- 1.3 tree forks here

GNU nano 1.2.2 - 2003.08.11
- General:
	- Translation updates (see po/ChangeLog for details).
	- Change uncast nrealloc()s assigned to char pointers/arrays to
	  charealloc()s, and cast all other nrealloc()s and all
	  nmalloc()s. (David Benbennick and DLR)
	- Remove gettext marks from all debug messages. Good for developers,
	  better for translators. (Jordi)
	- Add translator comments on strings that should be short, like in
	  status bar strings, etc. (Jordi)
- utils.c:
  align()
	- Tweak to avoid a potential problem when strp is non-NULL but
	  *strp is NULL. (David Benbennick)
  nstricmp(), nstrnicmp()
	- Add these functions, equivalent to strcasecmp() and
	  strncasecmp(), and convert nano to use them when strcasecmp()
	  and/or strncasecmp() are unavailable. (DLR)
- winio.c:
  do_help()
	- Get rid of keypad_on() call for bottomwin, which should not be
	  needed (DLR).
  nanogetstr()
	- Fix problem with search history where a temporary string
	  added at the bottom of the history (but which was not in the
	  history) would not be preserved after scrolling down to the
	  blank bottom entry and then scrolling back up. (DLR)
	- Fix problem where pressing down,up,down does not blank the
	  search prompt but keeps the previous search (DLR).
	- Handle Alt-[-F and H (DLR, fixed home and end not working with
	  -K in statusbar).  
- configure.ac:
	- Change the program used to detect a broken regexec() function
	  so that it works properly, using information found at
	  http://sources.redhat.com/ml/libc-hacker/2001-06/msg00015.html.
	  (DLR)
- nanorc.sample:
	- Revised comment explaining the non-escaping of quotes to cover
	  non-escaping of all shell-interpreted characters. (DLR)
	- Fixes to the descriptions and examples in the comments, and
	  changes to some default values. (David Benbennick and DLR)
	- Add regexes for Perl syntax. (Richard Smith, tweaked for
	  greater efficiency by David Benbennick)
	- Add regexes for Java source syntax. (David Benbennick)
	  Regex for C++-style comments (colored the same way as C-style
	  comments) added by DLR.
- THANKS:
	- Added Laurentiu Buzdugan, for Romanian.
	- Added Geir Helland, for Norwegian Bokmål.
- TODO:
	- Move the items for nano 1.2 to the "Old Requests" section,
	  and mark color syntax highlighting as done. (David Benbennick)
- faq.html:
	- Added question about nano's not showing color when it's
	  compiled with color support. (DLR; suggested by Jordi)
- nano.1, nanorc.5:
	- Formatting improvements by Jean-Philippe Guérard.
	- Minor fixes by DLR.
- nano.1.html, nanorc.5.html:
	- Regenerated from nano.1 and nanorc.5. (DLR)

GNU nano 1.2.1 - 2003.04.19
- General:
	- Translation updates (see po/ChangeLog for details).
	- Work around broken regexec() on some systems that segfaults
	  when passed an empty string.  New function regexec_safe().
	  (David Benbennick)
	- Fix various bugs with search string history logging: don't
	  print a broken error message and freeze if ~/.nano_history is
	  unreadable, actually show an error message in save_history()
	  if ~/.nano_history is unwritable, and prevent ~/.nano_history
	  from being completely overwritten by save_history() if it's
	  unreadable but writable. (David Benbennick)
	- Only unset KEEP_CUTBUFFER in main() when we do something other
	  than cut text in the main input loop, instead of unsetting it
	  all over the place (which, as written, didn't handle cases
	  like a cut followed by M-Space properly).  Also, instead of
	  checking for keyhandled's not being set inside the for loops,
	  do it in if blocks surrounding the for loops to increase
	  efficiency. (David Benbennick)  DLR: Also unset KEEP_CUTBUFFER
	  if we hit a shortcut key other than the one for cutting text.
	- Make it so a marked cut immediately followed by an unmarked
	  cut tacks the latter's text onto the end of the former's text
	  instead of putting it on a new line, as Pico does. (DLR)
	- Convert instances of "(char *)nrealloc()" to the macro
	  charealloc(), which does the same thing. (DLR)
	- Change justify_mode from a boolean int to a flag (DLR).
- cut.c:
  do_cut_text()
	- Tweak where KEEP_CUTBUFFER is set so that a marked cut
	  immediately followed by an unmarked cut preserves the
	  cutbuffer between the two. (David Benbennick)  DLR: Also
	  properly set KEEP_CUTBUFFER in tiny mode.
  do_uncut_text()
	- If we're about to uncut on the magicline, always make a new
	  magicline in advance, as Pico does. (DLR)
- global.c:
  shortcut_init()
	- Simplify the #ifdef used to enable file insertion in view mode
	  if multibuffer support has been compiled in. (DLR)
- nano.c:
  justify_format()
  	- If we shave spaces off the end of the line, make sure totsize
  	  is properly updated. (DLR; much simplified by David
  	  Benbennick)
- nano.h:
	- Simplify #ifdefs relating to HAVE_STRCASECMP and
	  HAVE_STRNCASECMP. (David Benbennick)
- search.c:
  goto_abort()
	- Removed, with all instances replaced with display_main_list(),
	  since with the removal of all the scattered calls to
	  SET(KEEP_CUTBUFFER), that function was all that was left of
	  it. (DLR)
  do_find_bracket()
	- If a matching bracket wasn't found, call update_line() after
	  setting current and current_x back to their original values,
	  in case current_x's original value is greater than the width
	  of the screen. (DLR)
- winio.c:
  nanogetstr()
	- Remove a few unnecessary breaks occurring immediately after
	  gotos, and properly interpret the up and down arrow keys when
	  ALT_KEYPAD is set. (DLR)
- configure.ac:
	- Enable autodetection of broken regexec(). (DLR) Re-added 
	  regex.h check to ensure compile under Debian w/autoconf 1.6.
- README:
	- Update obsolete 1.1.x information.
- TODO:
	- Fix typo. (David Benbennick)
- faq.html:
	- Update RPM links for nano 1.2.x. (DLR)

GNU nano 1.2.0 - 2003.02.19
- General:
	- Translation updates (see po/ChangeLog for details).
- files.c:
  read_file()
	- If the file we're loading has already been detected as a DOS
	  or Mac formatted file, don't turn on NOCONVERT if we find
	  binary chars in it.  This is because if it's detected as
	  DOS/Mac format, at least one line has already been converted, 
	  so setting NOCONVERT (which is supposed to signal that none 
	  of the file should be converted) makes no sense. (DLR)
- nano.c:
  justify_format()
	- Fix ugly behavior when wrapping spaces at the end of long
	  words (David Benbennick).
- nanorc.5:
	- Fix formatting error and update copyright year (Jordi).
	- Several enhancements (David Benbennick).

GNU nano 1.1.99pre3 - 2003.02.13
- General:
	- Translation updates (see po/ChangeLog for details).
	- Fix globals and externs such that nano will compile with
	  DISABLE_SPELLER (David Benbennick).
	- Fix unreasonable fill values by wrapping at length 0 instead
	  of erroring out, and don't start up if the window size is too
	  small but fill is set reasonably.  Changes to 
	  nano.c:global_init(), window_init(), and handle_sigwinch().
	  New macro MIN_EDITOR_COLS replaces MIN_FILL_LENGTH
	  (David Benbennick).
	- Change ngettext macro to P_(), to avoid a clash with the
	  reserved C __ identifier (Jordi).
	- Memory leak fixes for files.c:do_insertfile(),do_browser(),
	  nano.c:do_spell(), and search.c:do_replace() (David
	  Benbennick).
	- Remove do_preserve_msg, as using -p still gives Pico-style
	  string behavior, so an annoying message every invocation is
	  probably unneeded (all cheer).
	- Change resetpos function to be global (now called
	  resetstatuspos.  Fixes annoying but small odd problem with
	  cursor placement when inserting a file.  This needs to be done
	  better in 1.3 (originally by David Lawrence Ramsey).  Added
	  this issue to TODO.
- files.c:
  cwd_tab_completion()
	- Memory leak fix (David Benbennick).
  intput_tab()
	- Fix assumption that matches is null terminated (David
	  Benbennick).
  load_history()
	- Fix segfault on loading huge strings from history file
	  (David Benbennick).
  load_history(), save_history()
	- Changed to look at $HOME before getpwuid(geteuid()), see
	  details in comment for rcfile.c:do_rcfile().
  real_dir_from_tilde()
	- Change check for the running user's home dir to use
	  getpwuid(geteuid()) rather than a getpwent() loop
 	  (suggested by Jordi).
- nano.c:
  breakable()
	- Fix incorrect return value on short lines (David Benbennick).
  do_help()
	- Fix line lengths not being computed properly, causes display
	  glitches most noticeable with < 20 rows.  New function
	  nano.c:line_len(). (David Benbennick).
  do_justify()
	- Add regfree() to quote regex (David Benbennick).
	- Only copy previous indent if AUTOINDENT is set (David
	  Benbennick).
  do_suspend()
	- Fix untranslated message (David Benbennick).
  do_wrap()
	- Fix isspace() call to operate on int.
  help_init()
	- Fix crashing in do_help when COLS < 23 (David Benbennick).
  main()
	- Fix nano not compiling with ENABLE_RCFILE and DISABLE_TABCOMP
	  (David Benbennick).
	- Silence annoying compiler messages about clobbering and 
	  uninitialized variables by moving variable inits to the top
	  of main() and re-initializing them after the sigsetjmp().
- rcfile.c:
  colortoint()
	- Don't bomb after invalid color and print bad color name
	  (David Benbennick).
  colortoint, parse_colors()
	- Don't add strings with invalid fg colors at all.
  do_rcfile()
	- Revert (somewhat) previous behavior of looking at 
	  $HOME, and only run getpw* if it is NULL.  Most *nix programs
	  seem to only care about $HOME, and at the user-level 
	  getpw* may not be reliable (and its slower).
- search.c:
  do_gotoline()
	- Only goto_abort() if we *didnt* abort the command, making
	  the function seem horribly misnamed ;-) (David Benbennick).
- winio.c:
  browser_init(), striponedir(), do_browse_from()
	- Various memory leak fixes (David Benbennick).
  do_yesno(), do_help()
	- Add defined(NCURSES_MOUSE_VERSION) to macro so systems that
	  don't understand MEVENT will compile.
  nanogetstr()
	- Remove unnecessary reset of x since it is now handled
	  elsewhere (David Lawrence Ramsey).
  statusq()
	- Always blank the statusbar on exit (David Benbennick).
- nano.1, nano.1.html:
	- Add initialization file comments, change some options from 
	  bracketed to underlined to emphasize that they are not 
	  optional.
	- Add SEE ALSO section (Jordi).
	- Moved nano.1 color and syntax sections to nanorc, pointed
	  nano.1 to nanorc.5 for initialization file.  Changed 
	  nanorc.5 variables to be italics to match nano.1.  Added 
	  nanorc.5.html to CVS tree.
- nanorc.5:
	- Add nanorc manpage, with descriptions of all available commands
	  (Jordi).
- nanorc.sample:
	- Make nanorc entry less tolerant of invalid colors.
- nano.spec.in:
	- Change default flags to --enable-all.
- THANKS:
	- Add Kalle Kivimaa and Kalle Olavi Niemitalo, for Finnish (Jordi).
- UPGRADE:
	- Add upgrading information document for 1.0 users (Jordi).

GNU nano 1.1.99pre2 - 2003.02.03
- General:
	- Changed some translatable debug messages to use %s 
	  instead of the function name, and removed gettext from 
	  two strings that had no actual words in them that
	  should be translated.	 Suggested originally by
	  Christian Rose.
	- Fix subexpression replacement to work consistently.
	  Affects search.c:replace_regexp() and 
	  utils.c:strstrwrapper() (David Benbennick).
	- Fix cursor position being saved when escaping out 
	  of nanogetstr with keys like ^Y and ^V.  New arg
	  resetpos to nanogetstr(), added static int
	  resetpos in statusq() (bug found by DLR).
	- Fix constant curos updates from obliterating other
	  system messages, and fix statusbar message length.
	  Affects files.c:load_open_file(), nano.c:main(), 
	  search.c:findnextstr(), winio.c:statusbar() and 
	  do_cursorpos() (David Benbennick).
	- Fix nano crashing when searching/replacing an invalid
	  regex (try "^*").  Changed regexp_init() to return 
	  1 or 0 based on regcomp()'s return value and search_init 
	  to exit with an error message (sorry Jordi!).  Added 
	  another check when using last_search instead of answer.
	- Move regcomp into rcfile.c rather than each display refresh
	  of winio.c.  New function rcfile.c:nregcomp().
	  This fixes much of nano's resource hogging behavior
	  in syntax higlighting. (David Benbennick).
	- Fix justify failing for certain lines, new function 
	  nano.c:breakable() (David Benbennick).
	- Fix screen getting trashed on signals nano can catch
	  (TERM and HUP).  New global variable curses_ended, 
	  changes to winio.c:statubar() and nano.c:die()
	  (David Benbennick).
- cut.c:
  do_cut_text()
	- Fix incorrect cursor location when cutting long lines
	  (David Benbennick).
- files.c:
	- Set a default PATH_MAX for getcwd() etc calls (David 
	  Benbennick).
  do_browse_from()
	- Fix path checking to fix bad paths, escaping 
	  the operating directory, new function readable_dir() (David 
	  Benbennick).
  do_browser()
	- Fix incorrect path check for check_operating_dir() 
	  (David Benbennick).
	- Fix goto directory operating dir check and tilde expansion
	  (David Benbennick).
	- Even more checks and operating dir fixes (David Benbennick).
  do_insertfile()
	- Add some more checks and fix recursion when toggling 
	  multibuffer (David Benbennick).
  open_file()
	- Fix FD leak with file load error (David Benbennick).
  add_open_file()
	- Revert the fix for the supposed minor logic error from before;
	  it was keeping some updates from happening when they should,
	  which was leading to segfaults with both multibuffer and view
	  mode on. (DLR; found by David Benbennick)
  save_history()
	- Fix nrealloc return value being ignored (David Benbennick).
	- Fix off-by-one bug causing write to unallocated memory 
	  (David Benbennick).
- global.c:
  thanks_for_all_the_fish()
	- Fix compiling with DEBUG and multibuffer (David Benbennick).
- nano.c:
  do_char()
	- Remove unneeded check_statblank() (David Benbennick).
  do_int_spell_fix(), do_int_speller()
	- Fix crashes with mark position, current_x position, 
	  and edit_update args (David Benbennick).
  do_justify()
	- Unset KEEP_CUTBUFFER so nano won't crash with subsequent
	  ^K cuts and justifies (David Benbennick).
  do_mouse()
	- Fix the mouse code to work with lines longer than COLS and
	  with the proper positioning, including special characters
	  (David Benbennick).
  do_preserve_msg():
	- Unsplit error message into a single fprintf call (Jordi).
  main()
	- Call load_file with arg 0 for insert, as we aren't really
	  doing an insert, allows new_file() to run if we open a 
	  non-file at startup.
  usage()
  	- Remove gettext markings from -p/--preserve (Jordi).
	- Revamp -H option message to fit in 80 column terminal.
  window_init()
	- Fix leaking *WINDOWs (no pun intended) (David Benbennick).
- search.c:
  do_search(), do_replace_loop()
	- Fix edit_update call to use CENTER instead of current_x
	  (related to David Benbennick's fixes for spelling).
  do_replace_loop()
	- Fix various bugs having to do with replace string length
	  and positioning (David Benbennick).
  edit_refresh()
	- Fix cursor being above as well as below the current screen
	  (David Benbennick).
- winio.c:
  bottombars()
	- Change strcpy of gettext() "Up" string to strncpy of max
	  width 8, to stop stupid strcpy crash.
  do_yesno()
	- Fix mouse interaction bugs with yes/no prompt (David Benbennick).
- nanorc.sample:
	- Change comment to say magenta instead of purple.

GNU nano 1.1.99pre1 - 2003.01.17
- General:
	- New date format for NEWS and ChangeLog.
	- Completely removed PICO_MODE, as with the search/replace
	  history patch we should have the extended functionality we can
	  without being incompatible with Pico.  Removed all code for
	  different search/replace string editing and alternate shortcut
	  list.  I'm sure I won't even have to ask for feedback on this
	  one :-)
	- Add in Pico's -p flag, (-p, --preserve).  To preserve the XON
	  and XOFF keys (^Q and ^S).  Add warning if we invoke -p and
	  add checks for using --preserve (to skip warning) and --pico
	  (to force showing it).   New flag PRESERVE, function
	  do_preserve_msg(), changes to main(), signal_init().
	- Search history and replace history up/down cursor arrows,
	  w/history tab completion, not available w/NANO_SMALL.  Changes
	  to statusq(), others (Ken Tyler).  Added shortcut to
	  search/replace shortcuts so people will know it's there,
	  forced KEY_UP and KEY_DOWN defs in nano.h (Chris, in case
	  blame needs to be placed later).  Minor fixes by DLR: allow ^P
	  and ^N as alternatives to the up and down arrows, make sure
	  the "Up" shortcut is displayed properly in the help menu,
	  remove a few bits of unneeded and/or warning-generating code,
	  and fix some missing statusq() prompts with --enable-tiny.
	- Added search/replace history log.  Flag -H, --historylog.
	  Flags HISTORY_CHANGED and HISTORYLOG (only room for one more 
	  flag!), added entries in nanorc.sample, new functions 
	  log_history and save_history (Ken Tyler).
	- Translation updates (see po/ChangeLog for details).
	- Forward-ported Chris' --disable-wrapping-as-root option from
	  1.0.9.  Per Jordi's suggestions, have it override
	  $SYSCONFDIR/nanorc but not ~/.nanorc. (DLR)
	- Change all references to /etc/nanorc in the documentation to
	  $SYSCONFDIR/nanorc. (DLR)
	- Minor cosmetic tweaks to the ngettext() macro, and fix to
	  properly detect systems lacking ngettext() and correctly
	  compile on them; the previous fix didn't work. (DLR)
	- Fix problems with some code sections' not being #ifdef'ed out
	  when they should be, or being #ifdef'ed out improperly. (David
	  Benbennick and DLR)
	- Change FOLLOW_SYMLINKS to NOFOLLOW_SYMLINKS, and rework the
	  associated logic accordingly, throughout the code. (David
	  Benbennick)
	- Rework #ifdefs to not include mouse_init() at all if
	  DISABLE_MOUSE is defined or NCURSES_MOUSE_VERSION isn't. (DLR)
	- For consistency, change many references of (!x) to (x == NULL)
	  and (x) to (x != NULL). (DLR)
	- Define KEY_IC properly (and KEY_DC more portably) when slang
	  support is enabled, and remove the hack to work around the
	  former's not being defined. (David Benbennick and DLR)
	- Miscellaneous tweaks to update_color() calls, to make sure
	  they're called at the right times and that refreshes are done
	  afterwards only when needed. (David Benbennick)
	- Renamed [have_]past_editbuff [have_]search_offscreen. (DLR)
	- Add the "preserve" option to the nanorc file, to match
	  nanorc.sample. (DLR)
	- Fixed awful scrolling in do_int_speller.  Problem was 
	  findnextstr() calling edit_update(), though screen updating 
	  is not its business.  Added checks in do_search() and 
	  do_replace_loop() to do the checks.  It really should not be 
	  done here, as some function in winio.c should handle this, 
	  but I can't seem to find a good place to put this check.
	- Updated all copyright notices to say 2003 rather than 2002, as
	  nearly all the source files have been worked on this year
	  (DLR).
- configure.ac:
	- Added tr and eu to ALL_LINGUAS (Jordi).
	- Fix now inaccurate description of --enable-tiny's effects; it
	  no longer disables NLS support. (DLR)
	- Fix typo. (David Benbennick)
	- Check for strcasecmp() and strncasecmp(), since they are
	  apparently only standard under BSD. (DLR)
	- Small cleanups. Add copyright header, add autopoint support and
	  define bug report address and full package name in AC_INIT. Move
	  ALL_LINGUAS to po/LINGUAS, recommended place for gettext 0.11.
	- Added --enable-all option to compile in all the extra stuff 
	  we'd normally need extra flags for.
- color.c:
  update_color():
	- Remove an unneeded edit_refresh() call after do_colorinit().
	  (David Benbennick)
- cut.c:
  do_cut_text()
	- Fix a memory corruption problem caused by accessing edittop
	  after it was freed but before it was reset to a sane value
	  from current. (David Benbennick)
  do_uncut_text()
	- If uncutting more than one line of unmarked text at editbot,
	  don't center the screen, since Pico doesn't. (DLR)
	- If uncutting previously unmarked text, uncut to end if we're
	  not at the beginning of the line, and set placewewant to 0 if
	  we are.  This matches Pico's behavior. (DLR)
- files.c:
  load_file()
	- Remove unneeded wmove() call. (David Benbennick)
  read_line()
	- Miscellaneous cleanups. (David Benbennick)
  open_file()
	- If we're in multibuffer mode and there's an error opening the
	  file in read-only mode, display the error message on the
	  statusbar regardless of the value of quiet. (DLR)
  read_file()
	- Miscellaneous cleanups. (David Benbennick)
	- Fix len's being off by one when reading in Mac-format files,
	  exposed by one of David Benbennick's cleanups. (DLR)
	- If NO_CONVERT isn't set when we first enter, and it gets set
	  while reading in the file, unset it again afterwards. (DLR)
  do_insertfile()
	- If we're in multibuffer mode and there's an error opening the
	  file that we're trying to insert, close the new buffer that we
	  made to hold it and reload the buffer we had open before.
	  (DLR)
  add_open_file()
	- Fix minor logic error when determining when to resave fileage
	  and filebot. (DLR)
  load_open_file()
	- If switching between files when CONSTUPDATE is set, only force
	  a cursor position display update if DISABLE_CURPOS isn't set.
	  This will ensure that the "Switching to [file]" messages are
	  shown. (DLR)
  write_file()
	- Change lineswritten from a long to an int, to match
	  filestruct->lineno. (DLR; mismatch found by David Benbennick)
  real_dir_from_tilde()
	- Since this is needed for proper interpretation of paths
	  containing tildes and not just for tab completion, include and
	  use it regardless of whether tab completion is disabled.
	  (David Benbennick and DLR)
  input_tab()
	- Variable name change: matchBuf -> matchbuf. (DLR)
  diralphasort()
	- Remove the HAVE_STRCASECMP #ifdef block; see the changes to
	  configure.ac and nano.h for why. (DLR)
- global.c:
  thanks_for_all_the_fish()
	- Miscellaneous cleanups. (David Benbennick)
- move.c:
  do_page_down()
	- If there's a page or less of text, do an edit_update() if the
	  mark is on; otherwise, the highlight won't be displayed. (DLR)
- nano.c:
	- Added free_history() list calls clean up, added init of list
	  headers, and modified statusq() calls (Ken Tyler).
  do_prev_word()
	- Make the assert match that in do_next_word(). (DLR)
  do_enter()
	- If smooth scrolling is on, and Enter is pressed on the
	  magicline, don't center the screen. (DLR)
  do_justify()
	- Fix memory corruption problem triggered when edittop and
	  current->next pointed to the same value and current->next was
	  destroyed during justification. (DLR)
	- Center the screen when justification moves the cursor entirely
	  off the bottom of the screen, instead of when it moves the
	  cursor near the bottom of the screen, to more closely match
	  Pico's behavior. (DLR)
  version()
	- Remove obsolete reference to --enable-undo. (David Benbennick)
	- Move up check for --disable-nls as it's independent of 
	  --enable-tiny now (DLR).
  do_int_speller()
	- Make internal spell program use sort -f and uniq to create a
	  less redundant word list.  [The only reason this is going in
	  during feature freeze is because the int speller is useless as
	  is and should either be improved or removed.  I chose
	  improved].
	- Change all child error checks to use one goto (gasp!) called 
	  close_pipes_and_exit, so we don't leak FDs.
	- Fix FD leaks which occur outside of errors (David Benbennick).
  do_int_speller(), do_alt_speller()
	- Programs now return char *, NULL for successful completion,
	  otherwise the error string to display.  This allows us to give
	  more useful feedback to the user when spell checking fails.
  ABCD()
	- Renamed abcd(). (DLR)
  main()
	- Remove an unneeded do_colorinit() call, do major cleanups, and
	  allow loading of multiple files on the command line when
	  multibuffers are used. (David Benbennick)
- nano.h:
	- Make sure NO_RCFILE and COLOR_SYNTAX aren't set to the same
	  value. (DLR; discovered by Ken Tyler)
	- If strcasecmp() and/or strncasecmp() aren't available, use
	  strcmp() and/or strncmp() instead. (DLR)
- proto.h:
	- Fix the #ifdef block for DISABLE_TABCOMP's being undefined
	  so that functions only used with tab completion are properly
	  #ifdef'ed out. (DLR)
- search.c:
  do_gotoline()
	- Don't call blank_statusbar_refresh() so if there's an error
	  returned in multibuffer mode, we can actually see it.
  do_search()
	- Remove erroneously introduced near-duplicate call to
	  update_history(). (DLR)
  print_replaced()
	- Remove and replace with an equivalent ngettext() call. (DLR)
  do_replace_loop()
	- Fix bug where if text on the magicline was replaced (which can
	  be done via a regexp replace of "^$" with something other than
	  ""), a new magicline wouldn't be created. (DLR)
	- Remove check for answer being a blank string, presumed to be
	  a PICO_MODE holdover, but it stops us from doing a blank 
	  spelling replacement.
  do_replace()
	- For greater Pico compatibility, when an attempt to replace a
	  string results in 0 replacements due to the string's not being
	  found, display "[string] not found" instead of "Replaced 0
	  occurrences". (DLR)
- utils.c:
  is_cntrl_char()
	- Rework to fix a problem with displaying certain high-bit
	  characters. (David Benbennick; reported by Andrzej Marecki)
  align()
	- Don't just assert that the string passed in isn't NULL; check
	  that it isn't and only do the alignment when it isn't. (David
	  Benbennick)
  nmalloc(), nrealloc()
	- If the size passed to nmalloc() or nrealloc() is zero, don't
	  die with an erroneous out-of-memory error.  Also, change
	  their dying messages to "nano is out of memory!". (David
	  Benbennick)
  charalloc()
	- Removed and redefined as a macro that calls nmalloc(). (David
	  Benbennick)
- winio.c:
  nanogetstr()
	- Tweak to make the cursor stay in the same place if we hit a
	  prompt-changing toggle while it's in the middle of the string.
	  Reset it to -1 (so next time we come here, it'll be set to the
	  end of the string) if we leave the prompt via Enter or Cancel.
	  Also fix minor problem with search history where the current
	  search item could be at the bottom of the history twice in a
	  row under certain conditions. (DLR)
	- Remove parens in NANO_CONTROL_I check so nano won't complain if
	  just NANO_SMALL is defined (David Benbennick).
  edit_refresh()
	- Miscellaneous cleanups that fix a bug where the screen
	  isn't updated after uncutting chunks of upwardly marked cut
	  text that are over a page in length. (David Benbennick)
  do_credits()
	- Add David Benbennick to credits. (DLR)
- nanorc.sample:
	- Added comment to explain the non-escaping of quotes in
	  color regexes, based on info provided by David Benbennick.
	  (DLR)
	- Added some examples for groff and the nanorc courtesy of 
	  Robert D. Goulding.
	- Added double hash marks to comment lines, so people who 
	  uncomment the beginning of every line won't get syntax errors.
- faq.html:
	- Miscellaneous fixes and updates for typos, broken links, and
	  slashes at the end of directories.  It is now fully compliant
	  with HTML 4.01 Transitional. (DLR and David Benbennick)
	- Added docs about the new unified search string interface and 
	  search histories, and added --enable-all into configure docs.
- nano.texi:
	- Typo fixes and updates. (David Benbennick)
	- Updates for the most recent and not so recent changes.
- nano.1, nano.1.html
	- Updated for the --preserve and --historylog options.
- TODO
	- Added some wishlist stuff.
- THANKS:
	- Added Doruk Fisek and Peio Ziarsolo (Jordi).

GNU nano 1.1.12 - 10/24/2002
- General:
	- Translation updates (see po/ChangeLog for details).
	- Remove malloc.h, as it's unneeded and just causes annoyances on
	  *BSD systems.  Added stdlib.h to global.c.
	- Added Meta-Y toggle to disable/enable color syntax highlighting
	  completely.  This may eventually be per-buffer, but that's too
	  complicated for a feature freeze.
	- Disable VSTOP keystroke.  Stops people accidentally locking up
	  nano (suggested by David Benbennick).
	- Pluralize messages with ngettext() where needed. (David
	  Benbennick)  Tweaked to compile on systems lacking ngettext()
	  by DLR (problem found by Ken Tyler).
	- Update nano.1 and nano.1.html to show that nano now does an
	  emergency save on receiving SIGHUP or SIGTERM. (DLR)
	- Don't include "nowrap" in the long options if
	  DISABLE_WRAPPING is defined. (DLR)
- files.c:
  read_file()
	- Minor efficiency fixes, some of which fit in with the change
	  to ngettext() usage mentioned above. (David Benbennick)
  do_browser()
	- Make sure the value of path is mallocstrcpy()ed into retval
	  and not just assigned to it, to avoid memory corruption
	  problems. (DLR)
- nano.c:
  version()
	- If ENABLE_NLS isn't defined, display "--disable-nls"
	  (suggested by Ken Tyler). (DLR)
  justify_format()
	- Make sure the double space maintained after sentence-ending
	  punctuation is done when that punctuation is immediately
	  followed by a bracket-type character, so justifying e.g.
	  sentences in parentheses works properly. (David Benbennick)
  handle_hup()
	- Renamed handle_hupterm() to show that it now handles SIGTERM
	  as well as SIGHUP. (DLR)
  signal_init()
	- Do an emergency save on receiving either SIGHUP or SIGTERM,
	  not just SIGHUP. (David Benbennick)
  main()
	- Fix a problem where control key commands were printed
	  literally instead of interpreted after a failed search of a
	  one-line file. (David Benbennick)
- proto.h:
  handle_hup()
	- Renamed handle_hupterm(); see above for why. (DLR)
- winio.c:
  edit_add()
	- Fix a potential infinite loop occurring with certain
	  zero-length regexes. (David Benbennick)

GNU nano 1.1.11 - 10/01/2002
- General:
	- Translation updates (see po/ChangeLog for details).
	- Upgraded to gettext 0.11.5 (Jordi).
	- Updated nano.1, nano.1.html, and nano.texi to fix an
	  inaccuracy in the description of -Q/--quotestr. (DLR)
	- Set REG_EXTENDED in all regcomp() calls. (DLR)
	- Minor cosmetic code cleanups. (DLR)
	- Changed do_insertfile to (a) report multibuffer status at the
	  prompt and allowing it to be toggled, taking into account the
	  need to keep the translatable strings, and (b) added a
	  variable inspath to keep track of what the string was before
	  toggling.  I'm sure there's bugs, have at it.
 	- Make sure all functions have prototypes in proto.h, and swap
 	  some functions around to put similar functions closer
 	  together (for this, rename clear_bottombars() to
 	  blank_bottombars()). (DLR; suggested by David Benbennick)
	- More changes of char *'s to const char *'s when possible.
	  (David Benbennick)
	- Fix various minor memory leaks in files.c. (David Benbennick)
	- Fix minor problems with the operating directory code: set the
	  operating directory properly if it's specified only in a
	  nanorc file, and handle an operating directory of "/"
	  properly.  New function init_operating_dir() to handle
	  setting it both on the command line and in the nanorc file.
	  (David Benbennick)
	- Major rewrite of color and screen update routines to fix
	  minor bugs and increase efficiency.  New function
	  set_colorpairs() for the former. (David Benbennick)
- configure.ac:
	- Added pt_BR to ALL_LINGUAS (Jordi).
	- Changed --enable-color warning to be slightly less severe.
 	- Put the configure options in more or less alphabetical order,
 	  and remove --enable-undo, since it doesn't do anything. (DLR)
- files.c:
  open_file()
	- String change: "File "x" is a directory" -> ""x" is a
	  directory". (Jordi)
  do_insertfile()
	- Disallow multibuffer toggling at the "Insert File" prompt if
	  we're in both view and multibuffer mode, so as to keep proper
	  integration between the two, and make sure the toggle
	  actually works all the time otherwise.  Also, make sure
	  TOGGLE_LOAD_KEY isn't referenced when NANO_SMALL and
	  ENABLE_MULTIBUFFER are both defined. (DLR)
  open_prevfile_void(), open_nextfile_void()
	- Return the return values of open_prevfile() and
	  open_nextfile(), respectively, instead of (incorrectly)
	  calling them and returning 0. (DLR)
  real_dir_from_tilde()
	- Rework to use getpwent() exclusively and end reliance on
	  $HOME.  Adapted from equivalent code in do_rcfile(). (DLR)
  input_tab()
	- Most likely fixed the check marked with FIXME, so that tab
	  completion works properly when we're trying to tab-complete a
	  username and the string already contains data. (DLR)
- global.c:
  shortcut_init()
	- Disable the new multibuffer toggle at the file insertion
	  prompt when NANO_SMALL and ENABLE_MULTIBUFFER are both
	  defined. (DLR)
  thanks_for_all_the_fish()
	- Make sure the reference to help_text is #ifdefed out when
	  --disable-help is used. (DLR) 
- move.c:
  page_up()
	- Fix bug where current is moved up two lines when the up arrow
	  is pressed on the top line of the edit window; this causes a
	  segfault is the top line in the edit window is the second
	  line of the file, as the line current ends up on doesn't
	  exist. (Jeff DeFouw)
  do_down()
	- Fix bug where, if the last line in the edit window is the
	  line before the magicline, and smooth scrolling is turned
	  off, pressing the down arrow on that last line centers the
	  cursor without updating the edit window. (Jeff DeFouw)
- nano.c:
  version()
	- Put the listed configure options in more or less alphabetical
	  order. (DLR)
  open_pipe()
	- If we're in view mode here (in which case we're also in
	  multibuffer mode), don't set the modification flag. (DLR)
  do_next_word(), do_prev_word()
  	- If we're on the last/first line of the file, don't center the
  	  screen; Pico doesn't in the former case. (DLR)
  do_backspace()
	- Rework to call edit_refresh() regardless of the value of
	  current_x if ENABLE_COLOR is defined, so that multiple-line
	  color regexes are properly updated onscreen as they are in
	  do_delete(). (DLR)
  do_delete()
	- Rework to only call edit_refresh() unconditionally if
	  ENABLE_COLOR is defined; if it isn't, and we're not deleting
	  the end of the line, only call update_line(). (DLR)
  do_wrap()
	- Make sure wrapping is done properly when the number of
	  characters on the line is exactly one over the limit. (David
	  Benbennick)
	- Restore the previous wrapping point behavior (pre 1.1.10)
	  (David Benbennick).  Minor fix by DLR to prevent spaces from
	  being added to the ends of lines ending in spaces or lines
	  ending in tabs (the latter case found by David Benbennick).
  do_alt_speller()
  	- Readd DLR's fix to preserve marking when using the alternate
  	  spell checker; it was accidentally dropped. (David
  	  Benbennick)
  do_justify()
	- Fix cosmetic problems caused when justifying on the
	  magicline, and a minor problem where the cursor would
	  sometimes be moved to the wrong line after justification.
	  (David Benbennick)
  main()
	- When searching through the main shortcut list looking for a
	  shortcut key, stop searching after finding one; this avoids a
	  rare segfault. (DLR)
- nano.h:
	- Change search toggles for case sensitive searching and regexp
	  searching to M-C and M-R, respectively. (DLR; suggested by
	  Chris)
	- Add support for HP-UX's curses, which doesn't seem to support
	  KEY_HOME and KEY_END.
- nanorc.sample:
	- Fix the c-file regex for all caps words to be extended regex
	  format ({} instead of \{\}) (found by DLR).
	- Add a better string matching sequence that includes escaped
	  quotes (thanks to Carl E. Lindberg, who doesn't even know he
	  helped ;-).  Some unneeded \'s in that sequence removed, and
	  a new sequence to handle multi-line quotes added, by David
	  Benbennick.
	- Add some examples for HTML and TeX files (David Benbennick).
- rcfile.c:
  parse_colors()
	- Stop infinite loop when syntax doesn't begin with " char.
- utils.c:
  charalloc()
	- Switch from using calloc() to using malloc(). (David
	  Benbennick)
- faq.html:
	- Typo fix. (DLR)
- AUTHORS:
	- Add David Benbennick. (Jordi and Chris)
- TODO:
	- Add entry in the 1.4 section for Pico's paragraph searching
	  ability (at the search prompt, ^W goes to the paragraph's
	  beginning, and ^O goes to the paragraph's end). (DLR)

GNU nano 1.1.10 - 07/25/2002
- General:
	- Translation updates (see po/ChangeLog for details).
	- Upgraded to gettext 0.11.2 (Jordi).
	  Removed intl/ entirely, and a few more tweaks by gettextize.
	- i18nized a few strings used in DEBUG mode. (DLR)
	- Some chars being assigned 0 are now assigned '\0'. (DLR)
	- Put header file #includes in a more consistent order. (DLR)
	- Remove some unneeded blank lines and spaces, and make some
	  spacing more consistent. (DLR)
	- When possible, use iscntrl() to determine whether a character
	  is a control character or not. (DLR)
	- Miscellaneous typo fixes. (DLR)
	- Many fixes to the help browser and shortcut lists: efficiency
	  updates, consistency fixes, help text fixes and improvements,
	  and spacing improvements. (David Benbennick)
	- Make some functions use const variables when possible, and
	  also make them static when necessary. (David Benbennick, 
	  necessary redefined by Chris ;-)
	- Add Carl Drinkwater's backup file option (-B or --backup on the
	  command line, M-B in nano's global shortcuts). If the original
	  file is unchanged from when it was loaded, it is backed up to
	  filename~; if the original file has been changed or deleted
	  since it was originally loaded, it isn't backed up.  The backup
	  file retains the permissions, owner/group, and
	  access/modification times of the original file.  This option is
	  disabled when --enable-tiny is used.  It will not back up
	  temporary files.  Minor fixes to it by David Benbennick and
	  DLR.  Changes to open_file(), add_open_file(),
	  load_open_file(), write_file(), and do_writeout().
	- Add \n's to the ends of "filename is %s" debugging strings.
	  (Carl Drinkwater)
	- Add the long option --quotestr as an alternative for -Q, and
	  --regexp as an alternative for -R; they were listed in nano's
	  usage information, but weren't actually in nano.  Also, display
	  "-?" as an alternative for "-h" in nano's usage information,
	  put the command line options in a more consistent (i.e. mostly
	  alphabetical) order in nano, put the long options in a more
	  consistent order in rcfile.c and nanorc.sample, don't include
	  rcfile options if their equivalent command line options are
	  disabled, and remove obsolete relative option from
	  nanorc.sample. (DLR)
	- Change "File Name to Append/Prepend" to "File Name to
	  Append/Prepend to".  The original prompt could confusingly
	  imply that we are appending/prepending another file to the
	  current file, when we are actually appending/prepending the
	  current file to another file. (DLR)
	- Put nano.1, nano.1.html, and nano.texi up to date, and fix a
	  few inconsistencies in them. (DLR)
	- Typo fixes for the ChangeLog. (David Benbennick and DLR)
	- Complete rewrite of justification code to fix some bugs and
	  improve its functionality. (David Benbennick)
	- If a variable isn't going to be used in tiny mode, #define it
	  out when possible. (David Benbennick)
	- Major reworking of the cutting/screen-updating code in cut.c,
	  some functions in utils.c, the cursor placement code in
	  winio.c, and many, many other areas to increase efficiency.
	  (David Benbennick)
	- Rework handling of prompts when there's a list of partial
	  filename matches on the screen: remove kludgy case-by-case
	  handling (which didn't even handle every case), and have
	  statusq() handle it directly for all cases. (David Benbennick
	  and DLR)
	- Fix some warnings and errors that show up when using gcc's
	  -pedantic option. (DLR)
	- Add a comment to nanorc.sample warning that an out-of-range
	  negative value for fill can make nano die complaining that
	  the screen is too small (which may not be immediately
	  obvious). (DLR)
	- There were some opendir() calls in files.c without
	  corresponding closedir() calls; add them. (DLR)
	- Move align() and null_at() from nano.c to utils.c, and move
	  the openfilestruct handling functions from nano.c to files.c.
	  (DLR)
	- In color.c, start the "#ifdef ENABLE_COLOR" block after
	  including all the header files, as rcfile.c does; this fixes
	  a warning about ANSI C'S inability to handle blank files.
	  (DLR)
	- Add new function is_cntrl_char() as a wrapper for iscntrl();
	  this is needed to treat ASCII 0x80-0x9f as control characters
	  consistently.  (Without this, they will only be treated as
	  such when gettext is used; when it isn't used, they will be
	  printed as-is and be interpreted as commands by xterm, which
	  will corrupt the display.) (DLR)
	- Add command line option -I/--ignorercfiles to ignore
	  $SYSCONFDIR/nanorc and ~/.nanorc. (Carl Drinkwater).   Fix to
	  parsing getopt args (DLR).
	- Fix minor bugs with importing certain text files in Mac
	  format. (DLR)
- files.c:
  append_slash_if_dir(), input_tab()
	- Changed variable names: lastWasTab -> lastwastab, matchBuf ->
	  matchbuf. (DLR)
  check_operating_dir()
	- Memory leak fix. (David Benbennick)
  check_writable_directory()
	- Optimizations (David Benbennick).
  cwd_tab_completion()
	- Changed a variable name: dirName -> dirname. (DLR)
  do_browser()
	- Optimizations and mouse selection fixes (David Benbennick).
  do_writeout()
	- Fix problem with formatstr's being defined as NULL when
	  --enable-tiny is used.  Since formatstr isn't ever used in tiny
	  mode, don't bother even creating the variable. (David
	  Benbennick and DLR)
  do_insertfile()
	- Memory leak fix (accidentally dropped 1st time). 
	  (David Benbennick).
  get_full_path()
	- Memory leak fix.  Also, make it properly interpret ~/ notation
	  so, among other things, the option "--operatingdir ~" works.
	  (David Benbennick)
	- More optimizations (David Benbennick).
  new_file()
	- Make sure current_x is zero; this fixes a problem where the
	  current cursor position wasn't reset when reading in a file in
	  multibuffer mode. (David Benbennick)
	- Use make_new_node rather than setting up fileage by hand 
	  (David Benbennick).
  read_file(), read_line()
	- Rework to properly handle nulls in the input file, fix
	  detection of binary files to properly mark a file as binary if
	  the only binary characters it contains are ASCII 127's, and
	  after reading the last line of a file that doesn't end in a
	  newline, increment totsize.  Remove previous kludge to set
	  totsize properly. (DLR)
  write_file()
	- Rework to properly handle nulls in the input file.  When
	  appending/prepending, don't change the current file's name to
	  the name of the file it's being appended/prepended to.  When
	  writing a marked selection to a file, save and restore totsize
	  so it isn't decreased by the size of the selection afterward.
	  (DLR)
	- Optimizations (David Benbennick).
- global.c:
  free_toggles()
	- Only include if we're not using tiny mode. (David Benbennick)
  toggle_init()
	- Remove global entries for search toggles, as they aren't really
	  global. (DLR)
	- Don't reinititialize the toggles if they've already been
	  initialized; it's unnecessary and even causes a segfault in
	  do_toggle() if Pico emulation mode is the toggle in question.
	  Don't free the toggles here, either; it's unnecessary after the
	  above change. (David Benbennick)
	- If wrapping is disabled, don't include the toggle for it.
	  (DLR)
  shortcut_init()
	- Rework IFHELP macro (David Benbennick).
- move.c
  page_down(), page_up()
	- Put sanity checks for current_x back in, to avoid rare
	  segfaults (oops). Now, however, they are only called when
	  placewewant is zero instead of being called unconditionally;
	  see changes to winio.c:actual_x_from_start() below. (DLR)
- nanorc.sample:
	- Put in much less crappy example regex rules for c-file.
- nano.c:
  clear_filename()
	- Remove this function, as it has unneeded functionality, is
	  short enough to be inlined, and is only called in two spots
	  anyway. (DLR)
  die()
	- Rework slightly to remove redundant printing of last message
	  and print all messages after resetting the terminal. (DLR)
  do_backspace()
	- Make sure placewewant is set properly, and that the mark is
	  moved backwards. (David Benbennick)
  do_char()
	- Fix a problem where, if ENABLE_COLOR wasn't used, typing
	  characters on a marked line before the beginning of the mark
	  would make the highlight short by one. (David Benbennick)
  do_cont()
	- Handle the case where the window was resized while we were
	  stopped. (David Benbennick)
  do_delete()
	- Make sure placewewant is set properly, to match Pico's
	  behavior. (DLR)
  do_int_spell(), do_alt_spell()
	- Rework to save the marked selection before doing spell checking
	  and restore it afterward. (DLR)
  do_next_word(), do_prev_word()
	- Fix a problem where highlighting isn't done properly after
	  calling either of these, and another problem where the cursor
	  would move back too far in certain cases with do_prev_word().
	  (David Benbennick)
  do_toggle()
	- Since the search mode toggles aren't global anymore, we don't
	  need to explicitly block them here anymore (which will end up
	  blocking the global backup mode toggle, which is the same as
	  the backwards search toggle). (DLR)
  do_wrap()
	- fill fixes and 'two short word wrap' bug (David Benbennick).
  global_init()
	- Call die_too_small() when fill is 0. (DLR)
  handle_sigwinch()
	- Make sure we adjust fill when the window is resized. (David
	  Benbennick)
	- Call die_too_small() when fill is 0. (DLR)
  help_init()
	- Since the return value of snprintf() isn't well defined, use
	  sprintf() instead. (David Benbennick)
  main()
	- Rework to blank out filename manually before doing anything
	  with it, instead of calling clear_filename() in two places.
	  Make startline an int instead of a long, since it's supposed to
	  hold a line number. (DLR)
	- Properly handle multiple -r settings on the command line. (Carl
	  Drinkwater)
	- Fix a bug that prevented file insertion via the Insert key
	  from working at all when --enable-multibuffer wasn't used
	  (oops). (DLR)
	- Adapt David Benbennick's fix to get fill to accept negative
	  numbers properly in parse_rcfile() (see below) to the
	  handlers for the -r and -T options as well, so that -r/-T 0
	  can be treated separately from -r/-T string. (DLR)
	- Fix so that Esc-Esc-Space is properly treated as Ctrl-Space.
	  (DLR)
  usage()
	- List the options that are ignored for the purpose of Pico
	  compatibility, and make some minor consistency fixes. (DLR)
- nano.h:
	- Fix some space/tab formatting for flags (DLR).
- proto.h:
	- Remove external declaration of the global int fill, since
	  it's now static. (DLR)
- rcfile.c:
  parse_rcfile()
	- Add David Benbennick's fix that allows fill to accept
	  negative numbers properly.  Specifically, use strtol() there
	  instead of atoi() so that errors can be detected.  Also
	  adapted for tabsize by DLR.
  parse_next_regex(), colortoint()
	- Only include if ENABLE_COLOR is defined. (DLR)
- search.c:
  search_init()
	- Since the search mode toggles aren't global anymore, rework the
	  part of this function referencing them so that they still work.
	  (DLR)
	- Remove unneeded toggles variable. (David Benbennick)
	- Fix a problem where the first character of buf was overwritten
	  if the last search string was one third the number of columns
	  plus one. (David Benbennick)
  findnextstr()
	- Update the current line at current_x if we don't find a match.
	  Also, pass current_x_find to strstrwrapper() so we know whether
	  we're at the beginning of a string or not (see changes to
	  strstrwrapper() below), and reset it between lines. (DLR)
  do_gotoline():
	- Make sure placewewant is zero after we go to a line. (David
	  Benbennick)
  do_gotopos()
	- Simplify the sanity check to only put x within the range of the
	  current line; don't call actual_x() anymore. (DLR)
- utils.c:
	- Add sunder() and unsunder().  These functions convert nulls
	  other than the terminating null in strings to newlines and
	  back; they're used to handle null characters in files properly.
	  (DLR)
  lowercase()
	- Remove, since it isn't actually used anywhere. (David
	  Benbennick)
  strstrwrapper() 
	- Set REG_NOTBOL when we're not at the beginning of a
	  string, to avoid false positives when searching for regular
	  expressions prefixed with ^. Make it take a new parameter,
	  line_pos, to determine where we are in the string. (DLR)
  check_wildcard_match()
	- Changed variable names: retryPat -> retrypat, retryText ->
	  retrytext. (DLR)
- winio.c:
  actual_x_from_start()
	- Overhaul to make cursor placement more like that of Pico: add
	  sanity check for i, and then place i as close to the value of
	  xplus column as possible.  This change is most noticeable when
	  moving down through binary files. (DLR)
  do_credits()
	- Fix for the i18ned credits so it will compile with -pedantic
	  (DLR & Chris).
  do_help()
	- Add support for the handled keyboard escape sequences in the
	  help menu, as they are needed with some terminals (e.g. xterm
	  with TERM=ansi). (DLR)
  edit_refresh()
	- Turn on leaveok() so the cursor doesn't bounce around the 
	  screen while we're updating it (most noticeable when using
	  color syntax over a very slow connection).
  do_replace_highlight()
	- When using regexps, make sure the highlight is the length of
	  the search result and not the regexp string. (DLR)
  nanogetstr()
	- After the user presses Enter at the prompt, refresh the edit
	  window in case there's a list of possible filename matches
	  (left over from attempted tab completion) on it. (DLR)
  statusbar()
	- Limit statusbar display to the number of columns less four, and
	  don't allow it to go over its original row. (David Benbennick)
  titlebar()
	- Tweak text spacing and printing so that the titlebar text looks
	  better on smaller terminals. (Carl Drinkwater)
  update_line()
	- When marking control characters, make sure the mark moves
	  forward by two characters instead of one.  Rework control
	  character display routine to display newlines within the line
	  (which should never occur under normal circumstances; they will
	  only be there if the line had nulls in it and was unsunder()ed
	  beforehand) as ^@'s. (DLR)
	- Fix to properly treat ASCII 128-159 as control characters.
	  (DLR)
- configure.ac:
	- Added ms to ALL_LINGUAS (Jordi).
	- Merged acconfig.h in (Jordi).
	- Fixed so that --enable-debug defines DEBUG and undefines
	  NDEBUG. (Carl Drinkwater)
- THANKS:
	- Completed a bit (Jordi).
	- Fixed David Benbennick's email address. (David Benbennick)
	- Typo fix. (DLR)

GNU nano 1.1.9 - 05/12/2002
- General:
	- Typos n misspellings all over the place (David Benbennick).
	- Allow --tiny and --multibuffer to cooperate (who the heck
	  would want this is beyond me but ;-).  Changes to 
	  configure.ac, global.c, ,  (David Benbennick).
	- Change to openfilestruct for multibuffer mode by DLR.
	  New functions nano.c:make_new_opennode(), free_openfilestruct(), 
	  delete_opennode(), unlink_opennode(), splice_opennode(),  
	  new struct openfilestruct in nano.h. 
	- Preliminary prepend code.  This may be a bad idea, but I've
	  been wanting it for awhile now and we'll see how bad it messes
	  everything up.  Changes to files.c:do_writeout(), write_file().
	  Fixes for O_CREAT & append compatibility by David Benbennick.
	- Change from read() and write() to file streams by Jay Carlson.
	  Allows OS to implement read and write ahead rather than making
	  us do it.  Hopefully merged properly.
	- More cleanups with DISABLE flags, better free_shortcutage and
	  free_toggle, and get rid of unnecessary variable decls with 
	  NANO_SMALL in shortcut_init() by David Benbennick.
	- Added "syntax" command to .nanorc file, to allow multiple 
	  syntaxes.  New function color.c:update_color(), calls in various
	  files.c places, syntaxtype struct, global variables syntaxes,
	  syntaxfile_regexp and synfilematches.  Global flag -Y ,--syntax
	  to specify the type on the command line, if there's no good 
	  filename regex to use.  Global variable syntaxstr.
	- Changed many strcmp()s and strcpy()s to their equivalent
	  '\0' counterparts (David Lawrence Ramsey).
	- Many changes to allow marked cutting to work with multiple
	  file buffers: changes to openfilestruct type in nano.h and
	  files.c (David Lawrence Ramsey).
	- Changed NANO_SMALL to ENABLE_NLS for gettext disabling 
	  (David Benbennick).
	- Move next_key and pev_key definitions out of main() and into
	  global.c where they belong (David Benbennick).
- color.c:
  update_color()
	- Add regfree call here to avoid memory leaks.
- configure.ac:
	- Define NDEBUG to silence asserts (David Benbennick).
- files.c:
  get_next_filename()
	- Optimizations (David Benbennick).
- global.c:
  shortcut_init()
	- Add missing free_shortcutage()s (David Benbennick).
  thanks_for_all_the_fish()
	- Only defined when using DEBUG, makes sense (David Benbennick).
- nano.c:
  die_save_file()
	- Add missing free (David Benbennick).
  do_justify()
	- Optimizations (David Benbennick).
  do_wrap()
	- Complete rewrite (David Benbennick).
  help_init()
	- A little less readable, a lot shorter :-) (David Benbennick).
	- Fix Meta-A not getting capitalized, and convert the ASCII
	  #s to their character equivalent.
  main()
	- Changed charalloc(), strcpy()s to mallocstrcpy()s.
- nano.h:
	- NANO_ALT_COMMAND and NANO_ALT_PERIOD were reversed (lol)
	  (David Benbennick).
- nano.spec.in:
	- Don't put Chris' name as the Packager in the distribution
	  by default (Im an idiot).
	- Fixed Source line (David Lawrence Ramsey).
- nano.1:
	- Changed references to Debian GNU/Linux to Debian GNU (Jordi).
- nano.1.html:
	- Updated for -Y option (David Lawrence Ramsey).
- rcfile.c:
	- Made some rc file errors less fatal.
	- Added in my patch for getpwent instead of relying on $HOME
	  (David Lawrence Ramsey).
- winio.c:
  edit_add()
	- Changed some syntax highlight computations for the sake of COLS.
	- Add in the necessary regfree() calls to stop nano from leaking
	  memory like a sieve when using color syntax highlighting :-)
  bottombars(), onekey()
	- Cleanups (David Benbennick).
- po/gl.po:
	- Galician translation updates (Jacobo Tarrio).
- po/de.po:
	- German translation updates (Michael Piefel).
- po/fr.po:
	- French translation updates (Jean-Philippe Guérard).
- po/ca.po, po/es.po:
	- Catalan and Spanish translation updates (Jordi).
- po/sv.po:
	- Swedish translation updates (Christian Rose).
- po/nl.po:
	- Dutch translation updates (Guus Sliepen).
- po/it.po:
	- Italian translation updates (Marco Colombo).
- po/ru.po, po/uk.po:
	- Russian and Ukrainian translation updates (Sergey A. Ribalchenko).
- po/id.po:
	- Indonesian translation updates (Tedi Heriyanto).
- po/sv.po:
	- Swedish translation updates (Christian Rose).
GNU nano 1.1.8 - 03/30/2002
- General
	- Type misalignments and mem leaks in renumber_all, do_justify
	  and do_spell (Rocco & Steven Kneizys).
	- New "External Command" code, originally by Dwayne Rightler,
	  various fixes and changes by Chris, Rocco and David Benbennick. 
	  New function nano.c:open_pipe() and signal handler cancel_fork(), 
	  changes to do_insertfile(), new list extcmd_list, cmd is 
	  ^X after ^R.
	- Added separate regex variable (color_regex and colormatches)
	  so that color syntax and regex search/replace can coexist.
	- Added new nano.spec file from Brett <brett@bad-sports.com>, 
	  added because maintaining the spec file is getting to be a large 
	  hassle ;)
- files.c:
  check_writable_directory()
	- Stat full_path, not path (Steven Kneizys).
  open_pipe()
	- I18nize the pipe error (DLR).
  do_insertfile()
	- Handle cancel from ExtCmd properly (David Benbennick).
  read_file()
	- Abort if we read a file of 0 lines (num_lines == 0), fixes BUG #70.
	- Reverse tests to stop segfault on editing a new file of 0 
	  lines (David Benbennick)
	- Change input var to one char instead of array (David Benbennick).
	- Move NO_CONVERT check up so chars get read in properly (DLR).
- nano.c:
  do_justify()
	- More fixes for indented justify (David Benbennick).
  do_int_speller()
	- Fix zombie processes and spelling buffer issues (Rocco Corsi).
  help_init()
	- Capitalize Meta altkeys.
	- Various fixes and string changes.
  main()
	- Put NANO_SMALL defines around toggle pointer (noticed by Jordi);
  usage()
	- Rewritten to encompass systems with and without GETOPT_LONG.
	  New function print1opt does most of the dirty work, stops
	  duplication of effort and eases translator's jobs.  Also
	  breaks all the current translations ;-)
- proto.h:
	- Missing externs (Rocco).
- rcfile.c:
  do_rcfile()
	- Reset lineno between system and local .nanorc file.
	- Fix errno->strerror(errno) mismatch.
  parse_rcfile()
	- Don't use i for both for loop and atoi(), fixes lots of 
	  potential crashes, 1st reported by Jean-Philippe Guérard.
  rcfile_error()
	- Don't print out the file name if we haven't opened the file
	 yet (lineno == 0).
- search.c:
  search_init()
	- Fix a missing free (Rocco).
  do_gotoline() 
	- Set placewewant if we actually move to a different line.
- utils.c:
  stristr() 
	- Defined regardless of NANO_SMALL (noticed by Jordi).
  nperror()
	- New wrapper for perror (David Benbennick).
- winio.c:
  do_credits()
	- Add Thomas Dickey.
  do_cursorpos()
	- Make col numbering start from 1 (suggested by Andrew Ho).
  update_line(), xpt()
	- Add check for 127 (DLR).
- po/sv.po:
	- Swedish translation updates (Christian Rose).
- po/de.po:
	- German translation updates (Michael Piefel).
- po/id.po:
	- Indonesian translation updates (Tedi Heriyanto).
- po/it.po:
	- Serious typo.
- po/ca.po, po/es.po:
	- Catalan and Spanish translation updates (Jordi).
	- Typo (DLR).
- po/fr.po:
	- French translation updates (Jean-Philippe Guérard).
- po/gl.po:
	- Galician translation updates (Jacobo Tarrio).
- po/uk.po, po/ru.po:
	- Russian and Ukrainian translation updates (Sergey A. Ribalchenko).
- po/pl.po:
	- Polish translation updates (Wojciech Kotwica).
- po/fr.po:
	- French translation updates (Jean-Philippe Guérard).
- po/it.po:
	- Italian translation updates (Marco Colombo).
- po/da.po:
	- Danish translation updates (Keld Simonsen).
	  
GNU nano 1.1.7 - 03/05/2002
- General
	- malloc->calloc, etc cleanups (DLR).
	- New option, noconvert (-N, --noconvert) to completely stop
	  the translation of files from DOS or Mac format (DLR).
	- New functions check_writable_directory() and safe_tempnam()
	  to get around the tempnam warning. More improvements (DLR)  
	  Still needs testing.
	- Added DOS and Mac format options to write file routine.
	  Changes to shortcut_init() and do_writeout().	
	- Removed stupid static definitions of toggles and shortcut
	  lists.  Many changes to shortcut_init(), toggle_init(),
	  statusq(), nanogetstr(), main(), and many other places.
	- Multibuffer mode now allows multiple empty filenames.  
	  Changes to add_open_files(), removed open_file_dup_search(),
	  open_file_dup_fix(), etc (DLR).
	- New code to handle multiple .save files.  Changes to 
	  die_save_file(), new function files.c:get_next_filename()
	  and utils.c:num_of_digits(). (Dwayne Rightler, DLR & Chris)
	- Many malloc() cleanups and files.c tweaks by Steven Kneizys,
	  new functions utils.c:free_shortcutage() (got to love that
	  name!) & free_toggles(), and big cleanup program 
	  thanks_for_all_the_fish() (originally 
	  thanks_for_the_memories()).  Mods to shortcut_init() by Chris.
	- Preliminary quoting support for justify.  New arg -Q, --quotestr,
	  changes to do_justify(), global variable quotestr().
- Makefile.am:
	- Add SYSCONFDIR to DEFS, so we can have an $SYSCONFDIR/nanorc.
	- Change localedir line to 1.0's version.
	- Moved m4/ stuff to its own m4/Makefile.am.
- m4/aclocal_inc.m4:
	- New macro AM_ACLOCAL_INCLUDE, tells configure.ac where to look for
	  macros (Gergely Nagy).
- configure.in:
	- Renamed to configure.ac.
- configure.ac:
	- Moved to autoconf 2.52 (Jeff Bailey).
	- Added call to AM_ACLOCAL_INCLUDE.
- files.c:
  read_byte()
	- Added check for control characters (indicative of a binary 
	  file), set NO_CONVERT if found (fixes by DLR).
 do_insertfile()
	- Added support for -o in prompt (Steven Kneizys).
- global.c:
	- Move openprev and opennext functions to shortcuts, they really
	  aren't toggles (DLR).
- rcfile.c:
  parse_next_regex()
	- Allow " symbol to be in regex without leading \ by checking
	  for *ptr+1 is not the end of the regex.
  do_rcfile()
	- Parse rcfile in $SYSCONFDIR as well (Dwayne Rightler).
- nano.1:
	- Added Noconvert option to man page (DLR).
- nano.c:
  justify_format(), do_justify()
        - Various fixes for starting blank spaces, spaces after
          punctuation, & segfault with quoting strings (David Benbennick).
  do_justify()
	- Don't continue to justify string if it's indented more 
	  (quoting wise) than the beginning of the justification.
  help_init()
	- Added message re: having multiple blank buffers (DLR).
  main()
	- Add 407 as equiv of 26, this seems to be sent when using
	  ^Z in linux console with keypad() enabled.
- rcfile.c:
	- Get rid of unneeded relativechars from rcopts (DLR).
- search.c
  do_replace(), findnextstr()
	- Fixes for various search issues (Ken Tyler)
- winio.c:
  do_cursorpos()
	- Rewritten to show col place as well as character place, without
	  needing an entirely separate flag.
  bottombars(), onekey()
	- Make bottom list dynamic with screen size (Guus Sliepen & Chris).
	- More cleanups w/width of shortcut.
- utils.c:
  strcasestr(),revstrcasestr()
	- Renamed to stristr and revstristr since strcasestr has not
	  been confirmed to be detected properly on various Linux
	  systems.
  strstrwrapper()
	- NANO_SMALL test was backwards (Ken Tyler).
- winio.c:
  strlenpt()    
        - Changed main function to strnlenpt() for new justify changes,
          original function now just a stub.
- nanorc.sample
	- Mention unset in the sample nanorc.
- po/ca.po, po/es.po:
	- Catalan and Spanish translation updates (Jordi).
- po/sv.po:
	- Swedish translation updates (Christian Rose).
- po/fr.po:
	- French translation updates (Jean-Philippe Guérard).
- po/nn.po:
	- Norwegian nynorsk translation updates (Kjetil Torgrim Homme).
- po/de.po:
	- German translation updates (Michael Piefel).
- po/it.po:
	- Italian translation updates (Marco Colombo).
- po/cs.po:
	- Partial Czech translation updates (Vaclav Haisman).
- po/hu.po:
	- Hungarian translation updates, or to be precise, rewrite
	  (Gergely Nagy).
- po/uk.po, po/ru.po:
	- Russian and Ukrainian translation updates (Sergey A. Ribalchenko).
- po/da.po:
	- Danish translation updates (Keld Simonsen).
- po/nb.po:
	- Norwegian bokmål translation updates (Stig E Sandoe).
- po/nl.po:
	- Dutch translation updates (Guus Sliepen).
- po/pl.po:
	- Polish translation updates (Wojciech Kotwica).

nano-1.1.6 - 01/25/2002
- General
	- Add Meta-A as alternate keystroke for ^^ for people with
	  non-US keyboards.
	- Add Alt-G (NANO_ALT_GOTO_KEY) as alternate for goto dir in 
	  browser.
	- Better partial word checking code. New function 
	  search.c:is_whole_word(), changes to findnextstr(), 
	  and nano.c:do_int_spell_fix() (Rocco Corsi).
	- Added multiple-line regex support.  Format in .nanorc is
	  start="regex" end="regex".  Cleaned up nanorc:parse_colors(),
	  added parse_next_regex(), changes to edit_add in winio.c(), 
	  changes to colortype, cleaning up some old cruft. 
	- Upgrade to gettext 0.10.40, probably broke everything again :)
	- Upgraded to and then downgraded from automake 1.5, as there 
	  are severe security implications.
- color.c:
  do_colorinit()
	- Moved some comments and braces around so color can work 
	  w/slang (DLR).
- global.c:
  shorcut_init()
	- Replace hard coded ALT_G and ALT_H values in the replace
	  and goto shortcuts with their macro counterparts NANO_ALT_*_KEY.	
- nano.c:
  usage()
  	- Remove extra \n in --keypad description (Jordi).
  main()
	- Check that alt value is an alpha char before comparing to 
	  val - 32, fixes Alt-R calling doprev instead of replace.
  do_char()
	- Run edit_refresh() if ENABLE_COLOR is defined so adding
	  multi-liners will update (e.g. /* in C).
  do_int_spell_fix()
	- Temporarily unset REVERSE_SEARCH if it's set (Rocco Corsi).
  do_suspend()
	- Call tcsetattr() to restore the old terminal settings, so
	  tcsh can use ^C after suspend for example (fixes BUG #68).
  do_wrap()
	- Move "right" increment to part where new line is created, 
	  should change (fix?) some wrapping problems with autoindent.
  version()
  	- Show --enable-multibuffer independently of --enable-extra being
	  compiled in (Jordi).
- nano.h:
	- Changed color struct slightly, because of previous issue with
	  applying color painting in order, the "str" portion was 
	  useless.  Renamed "val" in colortype to "start", added "end"
	  for multi-line color strings.
- rcfile.c:
  General
	- Took silly variables being passed everywhere like lineno and
	  filename and made them static variables.
	- Re-indented.
	- Added stdarg.h to includes.
  rcfile_error()
	- Now automatically prepends the "error in line blah at foo"
	  message to error messages.
  parse_colors()
	- Added section for computing "end" section.
  parse_next_word()
	- Added support for "\ ", in word parsing.
- search.c:
  do_search()
	- Check position of cursor and return value of findnextstr and
	  tell user if search string only occurs once (Rocco & Chris).
  findnextstr()
	- Fix off by one in check for wrap around (Rocco Corsi).
- winio.c:
  edit_refresh()
	- Rename lines to nlines to fix AIX breakage (reported by
	  Dennis Cranston, re-reported by arh14@cornell.edu).
  edit_add()
	- Refuse to honor regex matches of 0 characters when applying
	  color highlighting, and say so on the statusbar.  Otherwise
	  we go into an infinite loop, the error message should clue
	  users into the fact that their regex is doing something bad.
- THANKS:
	- Oops, correct Eivind's entry. His translation was Norwegian nynorsk,
	  not bokmål as we claimed (Jordi).
- .cvsignore
	- Added config.guess config.sub install-sh missing & mkinstalldirs
- po/ca.po, po/es.po:
	- Catalan and Spanish translation updates (Jordi).
- po/sv.po:
	- Swedish translation update (Christian Rose).
- po/de.po:
	- German translation update (Michael Piefel).
- po/fr.po:
	- French translation update (Jean-Philippe Guérard).
- po/ru.po, po/uk.po:
	- Russian and Ukrainian translation updates (Sergey A. Ribalchenko).
- po/no.po:
	- Moved to po/nn.po, which is the correct name for Norwegian nynorsk.
- po/nn.po:
	- Norwegian nynorsk translation updates (Kjetil Torgrim Homme).
- po/nb.po:
	- New Norwegian bokmål translation (Stig E Sandoe <stig@ii.uib.no>).
- po/da.po:
	- Danish translation update (Keld Simonsen).

nano-1.1.5 - 01/05/2002
- General
	- Better integration of View mode (-v) and multibuffer.
	  Fixes to new_file(), do_insertfile_void(), shortcut_init()
	  (David Lawrence Ramsey).
	- The keypad handling has changed (again).  We now use 
	  the keypad() function by default.  New flag -K, --keypad
	  allows the old behavior for those using the keypad arrow keys
	  and rxvt-based terminals.
	- Updated copyright notices to 2002 (Jordi).
- nano.c:
  die()
	- Only save files that were modified (David Lawrence Ramsey).
  do_cont()
	- Run signal_init() after doupdate() so ^Y wont suddenly
	  start suspending after returning from ^Z suspend in Hurd.
  signal_init()
	- Unconditionally disable VDSUSP if it exists, stops ^Y
	  suspending nano on the Hurd.
  help_init()
	- Typo fixes in help strings (Jordi).
	- New variable helplen needed cause currslen is not always
	  the length we want (bug found by David Lawrence Ramsey).
	- Typo in file switch string (found by David Lawrence Ramsey).
  main()
	- Handle Alt prev/next file keys (,.), as well as normal ones (<>).
	- Handle OS-specific insert keys by jump to do_insertkey (David
	  Lawrence Ramsey).
- files.c:
  read_file()
	- Make conversion message less confusing (suggested by Jordi).
- rcfile.c:
  parse_next_word()
	- Get rid of ptr == \n check to abort, screws up option
	  parsing (bug found by David Lawrence Ramsey)
- winio.c:
  update_line()
	- set realdata check to >= 1 && <= 31, lack of > 0 check screwed
	  high ascii characters.
  titlebar()
	- gettextized a pair of strings.
  bottombars()
	- Get rid of that annoying reversed line when color is on! :)
  edit_add()
	- Little fixes to let color highlights not bleed onto the next line.
  statusq()
	- Initialize "list".
- m4/gettext.m4:
	- Back down to 1.1.3 version.
- faq.html:
	- Various link updates and other fixes (Aaron S. Hawley).
	- Typo fixes (David Lawrence Ramsey).
- AUTHORS
	- Add DLR.
- po/sv.po:
	- Swedish translation update (Christian Rose).
- po/ru.po, po/uk.po:
	- Russian and Ukrainian translations updates (Sergey A. Ribalchenko).
- po/ca.po, po/es.po:
	- Catalan and Spanish translations updates (Jordi).
- po/pl.po:
	- New Polish, partial translation, by Cezary Sliwa <sliwa@cft.edu.pl>.
	- Wojciech Kotwica <wkotwica@post.pl> completed it and is the new
	  official maintainer.
- po/fr.po:
	- French translation update (Michel Robitaille).
- po/gl.po:
	- Galician translation update (Jacobo Tarrío).
- po/it.po:
	- Italian translation update (Marco Colombo).
- po/de.po:
	- German translation update (Michael Piefel).
- po/fr.po:
	- French translation update (Jean-Philippe Guérard).

nano-1.1.4 - 12/11/2001
- General
	- Preliminary syntax highlighting support.  New functions
	  colortoint() and parse_color() in rcfile.c, new code in 
	  edit_add() in winio.c to actually do the highlighting.  It's
	  not even close to pretty yet :P
	- Many int/long alignments (David Lawrence Ramsey).
- files.c:
	- Fixes for tab completion and screen refresh (David Lawrence
	  Ramsey).
  add_open_file()
	- Get rid of unsetting MARK_ISSET because otherwise writing
	  marked text will automatically unset the marker with
	  multibuffer enabled.
- global.c:
	- Define currshortcut and currslen when either DISABLE_MOUSE
	  or DISABLE_HELP or DISABLE_BROWSER is not defined (Silvan
	  Minghetti).
- nano.c:
  main()
	- Add Esc-[-[IGL] keys for FreeBSD Console (PgUp,PgDn,Insert).
        - Added better Hurd support for function keys (Alt-V,U,9,@,F).
  signal_init()
        - do SIG_IGN for the SIGTSTP sigaction regardless of whether
          we have _POSIX_VDISABLE or not (more Hurd fixes)
  help_init()
	- Typo fixes and additions to the new help texts.
  do_curpos()
	- Now takes arg for constant updating to always show the cursor
	  position (David Lawrence Ramsey).
  do_wrap()
	- Many fixes (David Lawrence Ramsey).
  do_spell() 
	- Dont prompt for replace if we don't change the word in
	  question (Rocco Corsi).
- po/de.po:
	- German translation updates (Karl Eichwalder).
- po/ru.po:
	- Russian translation updates (Sergey A. Ribalchenko).
- po/sv.po:
	- Swedish translation updates (Christian Rose).
- po/da.po:
	- Danish translation updates (Keld Simonse).
- po/es.po:
	- Spanish translation updates (Jordi).
- po/fr.po:
	- French translation updates (Michel Robitaille).
- m4/gettext.m4:
	- diff against mutt 1.2.5's gettext.m4.

nano-1.1.3 - 10/26/2001
- General
	- Finally wrote function-specific help mode.  Changes to
	  nano.c:help_init() and winio.c:do_help().  Changed
	  currshortcut and currslen #ifdefs to depend on both 
	  DISABLE_HELP and DISABLE_MOUSE being defined to not 
	  include.  Changed all the shortcuts and lengths.
	- Fixed null_at to ACTUALLY DO SOMETHING with its arg.  Again,
	  this was causing nasty errors if the call to nrealloc moved
	  where the data was located.
	- Changed header comments to say "version 2" instead of "version
	  1" as the COPYING file is actually version 2 of the GPL (bug
	  noticed by Jordi Mallach).
- cut.c:
  do_cut_text()
	-  Check to see whether marked text is contained within edit
	   window and if so only do an edit_refresh (variable dontupdate
	   replaces cuttingpartialline).
  do_uncut_text()
	- Similar display fixes (David Lawrence Ramsey).
- faq.html
	- Removed nano-editor.org FTP site address [deprecated] and added
	the GNU one.
- files.c:
	- Added status messages for converted DOS and Mac files.
	  People should know that their file wasnt normally formatted.	
  load_file()
	- Status message when trying to load an already loaded file with multiple
	  buffers (David Lawrence Ramsey).
  read_file()
	- Get rid of useless linetemp variable and name num_lines int
	  (David Lawrence Ramsey).
- nano.c:
	- New function do_prev_word, similar to do_next_word.  Hard coded as
	  Alt-space, as next word is hard coded as control-space. Fixed
	  goofy logic setting x pos to value of last line when hitting the
	  beginning of first line, prog should simply abort.  Added
	  the #ifdefs around the code in main().
- nano.h:
	- Additional #define, SMALL_TOO to determine how long
	  MAIN_LIST_LEN is.  We need this because of the find matching
	  bracket code.
  main()
	- Moved #ifndef NANO_SMALL down past the case 0: line so
	  control-space doesn't insert a \0 (ack!)
- rcfile.c:
	- Fix incorrect number of rc options (David Lawrence Ramsey).
- po/sv.po:
	- Updated Swedish translation (Christian Rose).
- po/da.po:
	- Updated Danish translation (Keld Simonsen).
- po/es.po:
	- Style updates to Spanish translation (Santiago Vila).
- po/ru.po, po/uk.po:
	- Updated Russian and Ukrainian translation (Sergey A. Ribalchenko).

nano-1.1.2 - 10/03/2001
- General
	- Added BUGS #63 & 64.  Fixes in search_init() and nanogetstr(),
	  new flag CLEAR_BACKUPSTRING because there's no easy way to
	  clear the backupstring without making it global (messy), so we
	  use a flag instead (just as messy?)
	- --enable-tiny now leaves out the Auto Indent code, do you really
	  need that on a bootdisk? =-)
	- New flag -o, --operatingdir, similar to Pico's -o mode.  New
	  function check_operating_dir(), changes to load_file (arg),
	  open_file_dup_search (arg), new function do_gotopos for -F
	  (David Lawrence Ramsey).
	- Code to read/write dos formatted files.  Massive amounts of
	  new code in read_line and write_file.  New cmdline flag
	  (-D --dos) to automatically write the file in DOS format,
	  regardless of the original format.
	- Mac file writing supported too.  Flag -M, --mac.  Toggle 
	  Meta-O (MacOS? OS-X? =-)
	- New smooth scroll code by Ken Tyler.  New flag -S, --smooth,
	  changes to page_up() and page_down().  Many fixes to paging by
	  David Lawrence Ramsey.
	- Bracket (brace, parens, etc) matching code by Ken Tyler.  
	  New functions do_find_bracket(), changes to findnextstr(),
	  command is Meta-] (hope you dont mind since I already sold off
	  Meta-O to the MacOS file code Ken...) Fixes to bracket_msg
	  by DLR.
	- Call do_gotopos from do_alt_spell() to keep position
	  consistent when invoking alt speller (DLR).
	- Readded DISABLE_CURPOS because in certain instances (like
	  all the "Search Wrapped" lines) the cursor position will
	  be different yet we don't want the cursor position displayed.
	- Take control-space out of -tiny build, unneeded.
- cut.c:
  cut_marked_segment()
	- Add magic line when cutting a selection including filebot
	  (discovered by DLR, fixed by DLR & Chris, fixes BUG #66).
  do_cut_text()
	- Don't recenter the line when cutting one line (DLR) (Bug #65).
- faq.html:
	- Notes about the Free Translation Project.
	- Debian additions.
- files.c:
  do_writeout()
	- Expanded strings to not use %s and ?: to determine
	  write/append string to be nice to translators.
  new_file()
	- Initialize totsize (DLR).
- nano.c:
  main()
	- Added var constcheck as a CRC-like check of whether cursor
	  pos has changed and if so update the pos with -c.
	- Many tweaks and changes from numerics to char equivs
	  (David Lawrence Ramsey).
	- Fix the KEY_IC being undefined when using slang.
  do_mouse()
	- Send 27 when the menu item clicked is an alt key seq... The
	  lines aren't lined up since the menu width changed though,
	  this breakage depends on whether the new widths will be kept
	  or not (FEEDBACK!!)
	- Change k based on currslen to allow the new widths in
	  bottombars().
  do_wrap()
	- Fixes for Pico incompatibility in cases 2b and 2c.  
	  (David Lawrence Ramsey).
  global_init()
	- New arg save_cutbuffer, allows cutbuffer to not be lost when
	  using multibuffer.
- nano.1:
	- Added new features, fixed some typos (Jordi).
- nano.texi:
	- Corrected the Mouse Toggle section, noticed by Daniel Bonniot.
	- Added many command line options, toggles and other additions
	  (Jordi).
- rcfile.c:
	- NUM_RCOPTS fix (DLR).
	- Add tabsize support to rc file (Nathan Heagy).
	- Fix incorrect argument in fill and tabsize error message
	  (Nathan Heagy)
- search.c:
	- Changed search prompt to "Search" followed by a list of
	  bracketed, free-standing modifiers that do not imply a grammar,
	  and the (to replace) string separately.  Hopefully this resolves
	  the i18n problems that this provoked.
  findnextstr()
	- Various fixes that need testing (Ken Tyler).
- winio.c:
	- Add David Lawrence Ramsey to credits.
  bottombars()
	- Spread out the menu items, feedback definitely needed on this.
  nanogetstr()
	- More key fixes (David Lawrence Ramsey)
	- Don't be clever and wasteful, just repaint every iteration.
- po/nl.po:
	- New Dutch translation, by Guus Sliepen <guus@nl.linux.org>.
- po/ca.po, po/es.po:
	- Updated Catalan and Spanish translation (Jordi).
- po/gl.po:
	- Updated Galician translation (Jacobo Tarrío).
- po/da.po:
	- New Danish translation, by Keld Simonsen <keld@dkuug.dk>.
- po/sv.po:
	- Updated Swedish translation (Christian Rose).
- po/it.po:
	- Updated Italian translation (Marco Colombo).
- po/fi.po:
	- Updated Finnish translation (Pauli Virtanen).

nano-1.1.1 - 07/28/2001
- General
	- Reverted included gettext from 0.10.38 to 0.10.35 in intl/ dir.
	- Added m4/ directory to allow rebuilding using only the internal
	  version of gettext.m4 (Albert Chin).
- nano.c:
  main()
	- Change the multibuffer getopt option to 'F' (David Lawrence
	  Ramsey)
  do_mark()
	- Temporarily disable cursorpos when enabled to be able to see
	  the mark (un)set message (Ken Tyler).
- nanorc.sample
	- Typo fixes and updates (David Lawrence Ramsey)
- files.c:
  new_file()
	- Do add_open_files if there aren't any open yet (David Lawrence 
	  Ramsey).
  close_open_file()
	- Try to open the next file first, then the previous one 
	  (David Lawrence Ramsey).
- global.c:
  shortcut_init()
	- Rewrote the whereis and replace lists to put CANCEL at the end
	  of the list, and not include the toggle functions when using
	  NANO_SMALL.
- nano.h:
	- Fix type in INSERTFILE_LIST_LEN.
	- Rewrote all the macro definitions to be a little less messy,
	  for the #ifdefs anyway.
- rcfile.c:
	- Update for the multibuffer option (oops) (David Lawrence Ramsey).
- search.c:
	- Added #ifdef NANO_SMALLs around the REVERSE_SEARCH code.
  search_init()
	- add #ifdef NANO_SMALL around toggles code.
- winio.c:
  bottombars()
	- Fixed an off by one that wasn't letting lines with odd #
	  shortcuts work in certain cases.

nano-1.1.0 - 07/15/2001
- General
	- New global variables currshortcut and currslen to support using
	  the mouse with the shortcuts.  Also supports clicking on files
	  in browser.  Added #ifdef DISABLE_MOUSE around this code also.
	- Changed mouse disabling code from depending on --enable-tiny
	  to its own flag, --disable-mouse.  The --tiny option defines
	  this automatically, but now just mouse support can be disabled
	  if desired.
	- File Browser supports the "Goto Directory"
	- Added rcfile.c source file.  Only includes much of anything when
	  --enable-nanorc is used.  Tons of new funcs, most notably
	  do_rcfile() called from nano.c:main().  Added much needed 
	  function ncalloc(), will have to go through source code later 
	  and change the appropriate calls which used nmalloc for lack of
	  an appropriate calloc function *** FIXME ***
	- After "Alternate" spell checker is called, cursor is repositioned on
	  the same line as before ^T was pressed. 
	- Moved config.h up in all .c files #include list (Albert Chin).
	- Added config.guess and config.sub to distribution because,
	  apparently, newer autoconf/automakes can't live without them.
	- Various spelling updates by David Lawrence Ramsey.
	- Changed all string allocations to charalloc(), new function
	  designed to take nmalloc argument but call calloc based on 
	  (char *) size.
	- New macro DISABLE_WRAPJUSTIFY to easily check for both wrapping
	  and justify being disabled.  This allows us to compile out the 
	  -r flag if neither are set, and will also allow us to comment
	  out -W when it is written.
	- Allow fill to take a negative value to signify a "from right side"
	  value.  This allows the value to vary with the screen size yet
	  still be correct.  New static value wrap_at to minimize code
	  impact.  Updated man page and info file.
	- Allow file appending.  New shortcut list nano_insertfile_list (since
	  insert and write routines can't share shortcut lists anymore), 
	  new args to do_writeout and write_file called append, and of source
	  code changes to those functions.
	- Allow backwards searching.  Drastic rewrite of the search prompt
	  string by Chris.  All other code by Ken Tyler.  New globals
	  nano_reverse_msg, new functions revstrstr and revstrcasestr,
	  many changes to search functions.  Not too big a code size
	  increase!
	- Moved extension functions (Case Sensitive, Regexp, and Backwards
	  Search, Append key in write file function) to Meta keys, as
	  people are complaining loudly about nano not being control-key
	  compatible with Pico, which is a Bad Thing (TM).  Changes to
	  shortcut_init, toggle_init, new toggles for backwards and regexp
	  (and you can now toggle all search options including regexp at
	  the Search: prompt!)  Changes to nanogetstr to enable Meta
	  keys to be grabbed, changes to onekey to print M-style shortcuts. 
	- New macro TOGGLE which just toggles, no more silly checking
	  ISSET and then using SET or UNSET when we want a simple toggle
	  for a flag.
	- Added multiple buffer capability (God help us).  New configure
	  option --enable-multibuffer (-F), changes to do_insertfile(),
	  do_insertfile_void(), toggle_init(), do_gotoline(), edit_update(),
	  and write_file(), new functions add_open_file(),
	  open_file_change_name(), load_open_file(), open_file_dup_search(), 
	  open_file_dup_fix(), open_prevfile(), open_nextfile(),
	  close_open_file(), get_full_path(), die_save_file(), etc.
	  (David Lawrence Ramsey).
	- Using --enable-extra automatically defines --enable-multibuffer
	  changes to version() and configure.in.
	- Moved to gettext 0.10.38 at the last second, sure to break 
	  something, but at least I can run make distcheck!
- Makefile.am:
	- Include ABOUT-NLS and the new THANKS files to the distributed list.
- THANKS:
	- Initial, incomplete list of people to thank.
	- Added some more people.
- configure.in:
	- New option, --enable-nanorc, which allows people to have a .nanorc
	  initialization file and set options normally used on the command
	  line, and color later on.
	- Added --enable-color option to allow color and syntax highlighting
	  (stub as of now).
- cut.c:
  add_to_cutbuffer()
	- Remove useless statements (Rocco).
  cut_marked_segment()
	- Add bizarre copy of bot node, else *BSD goes ballistic (fixes
          BUG #60).
	- Added 'destructive' argument.  Allows the selected text to be
	  added to the cutbuffer without changing the contents of the 
	  file.  This allows writing selection to separate files.
  do_cut_text()
	- If the line is empty when using -k and wasn't already added,
	  create a dummy line and add it to the cutbuffer (fixes bug #61)
	- Reset marked_cut if we blow away the cutbuffer.
	- Moved the case of current == mark_beginbuf into cut_marked
	  segment, so do_writeout could call it when writing selection to
	  file.
  do_uncut_text()
	- Reset cutbuffer even if we're uncutting marked or cut to end text!
- faq.html:
	- Brought the FAQ up to date, many little changes (Jordi).
	- Added sections 3.7 and 3.8 for the multibuffer and nanorc support.
- files.c:
  do_browser()
	- Minor fixes to the processing of SELECT function (Rocco)
	- Added the "Goto Directory" code (Rocco)
	- Don't shift the size of the file is it's less than 1K. Fixed
	  files less than 1K being displayed as 0B (Rocco).
	- More Picoish keystrokes for the browser, ^P, ^N, etc, for up,
	  down, etc, and add the consistent ^C to exit (Jim Knoble).
  do_writeout()
	- New code to allow writing selected text to a separate file.
	  When this is done, the current state is preserved.
  write_file()
	- New arg, nonamechange, means whether or not to update the
	  current filename after writing the file out.
	- Increment lineswritten when the very last line isn't null.
	  Fixes off by one count when writing selection to file.
- global.c:
	- Updated some of the lists for the "Goto Directory" code (Rocco)
- move.c:
  page_up()
	- Rewritten with a loop to make screen updates work when
	  mark is set (fixes bug #59).
  do_home(), do_end()
	- Don't keep cutbuffer.
- nano.1:
	- Added the missing -r flag (Jordi).
- nano.c:
  do_alt_speller()
	- Reposition cursor on same line as before ^T was called (Rocco)
  ABCD(), main() 
	- Add Alt-whatever-[a-d] support as well as Alt-whatever-[A-D].
  main()
	- Code to silently process "-g" and "-j" (Rocco)
	- Added Alt-[-7,8 support for home/end keys (Jeff Teunissen).
  signal_init()
	- Reorder sigaction calls, use sigfillset() to stop SIGTSTP and
	  SIGCONT from being interrupted, allows suspending nano
	  to work more reliably, esp. with mutt, etc. 
  do_suspend()
	- Don't try to play with the handler inside the handler.  Just
	  raise a SIGSTOP.  We also now write the "use "fg"" message to
	  stdout instead of stderr.
	- Added _POSIX_VDISABLE macro to fully ignore suspend keystroke.
	  Eliminates the possibility that nano can be suspended when
	  it's not supposed to be.  Many many many thanks to Jordi and
	  Tom Lear for helping out finding and fixing this bug!
  do_cont()
	- Now just does a refresh call instead of playing with the SIGTSTP
	  handler.
- nano.h:
	- Updated the BROWSER_LIST_LEN for the "Goto Directory" code (Rocco)
- proto.h:
	- New shortcut list added: gotodir_list (Rocco).
- search.c:
  do_gotoline()
	- Optimizations, remove "$" goes-to-last-line, less messages (Rocco)
  do_replace()
	- If we manage to make it in somehow with VIEW_MODE on, abort
	  nicely (fixes BUG #59).
- utils.c
  strcasestr()
	- Replaced by mutt's mutt_stristr function, because the thought
	  of dynamically allocating memory and copying each line in a file
	  to do a search or replace was causing me to lose sleep.
- winio.c:
  actual_x()
	- Remove inline from function decl (Albert Chin).
- po/POTFILES.in:
	- Added utils.c to the list.
- po/es.po, po/ca.po:
	- Updated (Jordi).
- po/gl.po:
	- Galician translation by Jacobo Tarrío.
- po/uk.po, po/ru.po:
	- New Ukrainian and Russian translations by Sergey A. Ribalchenko
	  <fisher@obu.ck.ua>, thanks!
- po/id.po:
	- Updated Indonesian translation by Tedi Heriyanto.
- po/it.po
	- Updated Italian translation by Marco Colombo.
- po/no.po:
	- New Norwegian translation by Eivind Kjørstad <ekj@vestdata.no>.
- po/sv.po:
	- New Swedish translation by Christian Rose <menthos@menthos.com>.

nano 1.1 tree forked here 04/07/2001

nano 1.0.1 - 04/06/2001
- General:
	- added configure option --disable-wrapping.  Does what it says,
	  no wrapping or checks are done.  Separate from --enable-tiny,
	  some may want a bare-bones Pico clone that does wrap text.
	  Affects configure, nano.c:do_char() and check_wrap() obviously,
	  version(), and do_char().
- aclocal.m4:
	- Minor patch for intl check (really this time) (Albert Chin)
- faq.html:
	- Fixed typo in section 6.1 (discovered by Bob Farmer).
- files.c:
	- fix two typos in comments, one in ChangeLog (Matthias Andree)
  diralphasort()
	- Stop abort on symlinks (Matthias Andree)
	- use strcasecmp to sort directory if available, pilot does that
	  as well (Matthias Andree)
  filestat(), do_browse()
	- Changed lstat calls to stat, which fixes the browser not
	  following links to directories.  We only use lstat() when
	  printing the details of the file, and if it is a link, then
	  check via lstat() for link to a directory.  If it is 
	  a directory, display (dir), else use the normal "--".
  do_browser()
	- Fix broken size suffix off-by-one errors (Matthias Andree)
  cwd_tab_completion(), do_browse_from()
	- Use PATH_MAX instead of 0 arg to getcwd (Matthias Andree).
	- Changed above to use PATH_MAX only when defined on the
	  system, as the HURD e.g. does not support it.
- intl/Makefile.in:
  distclean
  	- added intl/libintl.h to the rm -f rule, should fix the unresolved
	  gettext symbols problem (Jordi).

nano-1.0.0 - 03/22/2001
- General
	- Added void to functions declared as () args, nano.c:do_mark()
	  and search.c:regexp_cleanup(). (Christian Weisgerber).
	- Changed internal variables called "new" to "newnode" to avoid
	  the "new" C++ reserved word, even though there is likely no way
	  nano will EVER be compilable with a C++ compiler. (suggested by
	  Rocco Corsi).
- ca.po, es.po:
	- Final tweaks for Nano 1.0.
- cs.po:
	- Czech translation from Vaclav Haisman.
- nano.info:
	- Added dir entry (Albert Chin).
- winio.c:
  statusq()
	- Added NANO_BACK_KEY and NANO_FORWARD_KEY cases for left and right.

1.0-test prerelease - 03/17/2001
- nano.c:
  do_wrap()
	- Added case for autoindenting text causing new line (Adam).
	- Added SAMELINE case to above.  Added checks to cases 1b and
	  2b for placement of cursor.
- move.c:
  page_down()
	- Check for totlines < editwinrows in check for superfluous 
	  edit update (fixed BUG #57).
- search.c:
  print_replaced()
	- s/occurence/occurrence typos (Jordi).
  search_init()
	- If using Pico mode and regex and same answer is entered, use
	  last_search string instead of answer (fixes BUG #56).
- nano.texi:
	- Meta-Z correction and grammar in --enable-tiny desc (Neil Parks).

nano-0.9.99pre3 - 02/19/2001
- General
  GNU compliance issues:
	- Reworked shortcut list, put "Get Help" into default list, 
	  removed "Goto Line", aligned "Read File" with "Write Out" and 
	  "Replace" with "Where is" for consistency.
	- Added texinfo manual nano.texi.  Added texi options to 
	  Makefile.am.	
- configure.in:
	- Autoconf compatibility fixes (Pavel Roskin)
	- Added separate check for resizeterm().
	- ALL_LINGUAS: added hu and ca.
- cut.c:
  do_cut_text()
	- marked text cut fixes (Rocco) (Fixes bug #54).
- nano.c:
  do_delete()
	- Added check for current->next == fileptr, as we have a magic
	  line code again, fixes silliness at the end of the last line
	  before the magic line (reported by J.A. Neitzel).
  do_justify()
	- If the keystroke after the justify is not the unjustify key,
	  blank the statusbar (bug reported by Neil Parks).
  main()
	- Added ENABLE_NLS check around gettext stuff.
- winio.c:
  do_yesno()
	- Added localized yes, no and all strings to function and rewrote
	  handler for the new format.
- de.po:
	- Translation updates by Florian König.
- fi.po:
	- Translation updates by Pauli Virtanen.
- hu.po:
	- Hungarian translation by Horvath Szabolcs.
- id.po: 
	- Translation updates by Tedi Heriyanto.
- es.po:
	- Translation updates and grammatical/typo fixes (Jordi).
- ca.po:
	- Catalan translation by Jordi Mallach :)
	- Miquel Vidal <miquel@sindominio.net> went over it and corrected
	  many typos and completed bits that remained untranslated by error.

nano-0.9.99pre2 - 01/31/2001
General
	- Removed center_x and center_y globals.  center_y was
	  completely unused and center_x was only used a few places,
	  easily replaced with COLS / 2 (oops, not current_x & y (Rob)).
	- Deleted free_node, duplicate of delete_node, and changed all
	  free_node calls to delete_node.
	- Fix for resizing the window in modes other than normal edit mode 
	  Changes to handle_sigwinch(), main().  Fixes bug #52 (Rocco).
- files.c:
  write_file()
	- Don't free() realname on error, if it needs to be free()d later
	  it will be (fixes crash on successful write after failed write,
	  discovered by David Sobon).
  username_tab_completion()
	- Optimization and removal of useless vars (Rocco).
	- Rewritten using getpwent (suggested by Rocco).
	- Removed redundant conditional (Rocco).
  real_dir_from_tilde()
	- Rewritten using getpwent (suggested by Adam, much optimized by
	  Rocco).
- global.c:
	- Don't define toggles global or toggle_init_one if using --tiny.
- nano.c:
  do_justify()
	- Added restoration of totsize after unjustify command.
  usage()
	- Add arg to -T help (Rocco).
  global_init(), handle_sigwinch()
	- Messy loops replaced with memset calls (Rocco).
  do_alt_speller()
	- Added code to parse multi-word alt_speller strings.
	- Fix initialization before fork()  (Rocco).
- proto.h:
	- Fix do_credits() proto (oops!)
- winio.c:
  nanogetstr()
	- Sanity check for x overrunning the string buffer len.

nano 0.9.99pre1 - 01/17/2001
General
	- Changed #ifdefs to check for both DISABLE_TABCOMP and
	  NANO_SMALL, makes tiny option leave out tab completion, which
	  should be left out in that circumstance.  Saves at least 5k.
	- Previous change to #ifdefs DISABLE_TABCOMP and NANO_SMALL rolled
	  back. (Rocco)
	- Various #ifdef & #ifndef cleanups. (Rocco)
	- Added message for when keypad goes awry.  Added code in main and
	  function print_numlock_warning() to notify user, and added an
	  appropriate section in the faq to refer to this brokenness.
	- Added macros in nano.h for magic values that might be unclear in
	  nano.c:global_init(). (Rocco)
- configure.in:
	- Fix for _use_keypad check breaking slang support (Christian
	  Weisgerber).
	- Changed to automatically define the 5 DISABLE variables when
	  NANO_SMALL (enable-tiny) is requested at configure.
- faq.html:
	- Added some info on making the binary smaller with the configure
	  script.
	- Added section on keypad bugginess.
- files.c:
  real_dir_from_tilde()
	- Oops, fix case where buf ="~", silly crash (bug discovered by
	  Neil Parks).
  do_browser()
	- Added space and - keys to do page up and down.
  cwd_tab_completion(), input_tab()
	- Changed bare malloc/calloc calls to nmalloc (found by Rocco).
	- Added memset() to matchBuf to ensure sanity (Rocco, Adam).
- nano.c:
  ABCD()
	- New function, figures out what kbinput to return given
	  input common to several switch statements, allows us to 
	  support the default Konsole key settings.
  main()
	- Alternate speller option no longer valid if DISABLE_SPELLER is
	  active. (Rocco)
	- Removed direct calls to usage() (#else) for -k (cut) or -s (speller)
	  options when these have been disabled. (Rocco)
	- Initialized kbinput to get around stupid compiler warning.
  nano_small_msg()
	- This function has been removed.  All references now call
	  nano_disabled_msg. (Rocco)
  version()
	- When NANO_SMALL (enable-tiny) is defined, the 5 main DISABLE
	  variables (SPELLER, HELP, JUSTIFY, BROWSER, TABCOMP) are not
	  reported as enabled when Nano is called with -V (--version)
	  command line option. (Rocco)
  usage()
	- Alternate speller option no longer valid if DISABLE_SPELLER is
	  active. (Rocco)
  window_init(), handle_sigwinch()
	- Added check for not having enough LINES to do anything useful,
	  if so die with an error. (Rocco)
  die_too_small()
	- Function to print the window too small error message, avoids
	  repeated string defs and globals.
  do_justify()
	- Small fix for totsize calculation (Rob)

- fi.po:
	- Update by Pauli Virtanen.

nano 0.9.25 - 01/07/2001
General - 
	- New file browser code.  New functions in files.c:do_browser(),
	  helper functions browser_init(), tail(), striponedir(),
	  filestat().  New shortcut list browser_list.  Some new
	  strings to translate.  Added function do_browse_from().
	- Keypad code has been changed slightly.  Now checks for
	  _use_keypad flag in window to see whether or not to turn 
	  the keypad() back off when finished (taken from aumix).  Moved
	  to winio.c where it should probably be anyway.  New configure
	  check for _use_keypad in window struct.  This will have to do
	  for now.
	- Moved keypad() calls for PDCURSES from main() to window_init()
	  so the keypad continues to work after a Meta-X, for example.
	  Fixed bug #51.
- faq.html:
	- Fix typos and small mistakes (Jordi).
- files.c:
  username_tab_completion()
	- Added the (char *) sizeof when allocating memory for the filename
	  array (Rocco).
  cwd_tab_completion()
	- removed skipping . and .. when tabulating matches.
	- Added the (char *) sizeof when allocating memory for the filename
	  array (Rocco).
  do_writeout()
	- Now takes an argument so the string typed in can be retained
	  when calling the browser.
  do_browser()
	- Don't decrement longest by the length of path.  Fixes crashes
	  on entering various dirs  (Rocco).
	- Don't ungetch() the exit key, unneeded, fixes inserting a file
	  causes exit code.
- move.c:
  page_down()
	- Don't do an edit_update when there is only one page of text
	  (fileage == edittop && filebot == editbot).  Fixes Bug #50.
- nano.c:
  main()
	- Reorder the getopt options to be more or less alphabetical
	  (suggested by Sven Guckes).
- winio.c:
  do_cursorpos()
	- Optimizations and cleanups by Rocco Corsi.
  do_credits()
	- Spell Erik Andersen's name right.
  titlebar()
	- Now takes an arg, needed for browser function.
  do_help()
	- Changed way of temporarily bringing up shortcuts at the
	  bottom in the help screen (actually works).
- utils.c:
  mallocstrcpy()
	- Takes char pointers now instead of void (makes debugging a
	  helluva lot easier)
	- Duh, don't do anything if src == dest!
- es.po:
	- Updates for file browser (Jordi).

nano 0.9.24 - 12/18/2000
General
	- Added --disable-help option, affects acconfig.h, configure(.in),
	  winio.c:do_help, nano.c:help_init,help_text_init,version.
	- Changed filename to no longer use PATH_MAX, so it can work on the
	  HURD.  Changes in files.c:write_file(), new function
	  nano.c:clear_filename(), many changed in main(), a few other
	  places.  Please test this!
	- Added -b, -e, and -f flags, which we ignore as nano provides 
	  their functionality already.
- cut.c:
  do_uncut_text()
	- Fix renumbering bug when uncutting marked text at filebot.
	- Fix screen not being displayed when we are uncutting marked
	  text at editbot (Bug discovered by Ken Tyler).
	- Fix magic line not getting created when (you guessed it)
	  uncutting marked text at filebot (Ryan Krebs).
- files.c:
  read_file()
	- If we encounter an error and insert is not set, run new_file().
	  (bug discovered by Ben Roberts).
  write_file()
	- Change open call flags, basically copy joe's way of doing it so
	  a more recent version will actually be included in (un)stable.
	- Remove useless fstat call.
  open_file()
	- Added check for S_ISBLK and S_ISCHR, don't open device files!
- nano.c:
  renumber()
	- Don't stupidly assign the value of prev->lineno if prev == NULL!
  main()
	- Added code to check for Alt-Alt (27-27) keystrokes and set the
	  next keystroke as a control sequence.  New variable 
	  modify_control_key.  Removed #ifdef _POSIX_VDISABLE check
	  around Control-S,Q,Z handlers because we need it now for
	  the Alt-Alt-x code.
	- Added --view option to getopt_long()call .  Bug discovered 
	  by Rocco Corsi.
  help_init()
	- Fix off by one error that was making ^G help in normal mode and
	  ^_ in Pico mode not be displayed in the help (bug discovered by
	  Rocco Corsi).
  do_toggle()
	- Added fix_editbot() call to fix improper redisplay of edit
	  window when using nohelp toggle (bug discovered by Rocco Corsi).
- nano.1, nano.1.html:
	- Updated man page for -b, -e, -f and expanded explanation for -p.
- winio.c
  do_help()
	- Force keypad on so F-keys and PageUp/Down will work properly.
	  Added check for NANO_EXIT_FKEY to loop.
- utils.c:
  new_magicline()
	- Increment totsize!!  We decrement it when we've read a file, 
	  everywhere else it should automatically be incremented

nano 0.9.23 - 12/08/2000
General
	- Changed --disable-spell to --disable speller.  The term is
	  "speller" for -s, so it should be --disable-speller.
- files.c:
  write_file()
	- Added tmp check to TMP_OPT section (how appropriate).
	- Added new consistency checking code from securityfocus 
	  article by Oliver Friedrichs, and use O_EXCL if tmp == 1.
	- We now run check on result of lstat(), not stat(), to be
	  safer.  New variable anyexists, we use still use realexists
	  later in the program.
	- OOPS, line up link/unlink/rename check if conditional with 
	  top if conditional.  Option -l has been broken for 9 versions,
	  no one noticed?!
	- Added saving perms at end of link so we can apply them to the
	  new file if --nofollow is used.
- winio.c:
  edit_add()
	- Off by one display error (fix by Rocco Corsi).
  do_replace_highlight()
	- New code to handle being past COLS (Rocco Corsi).
	- Moved from search.c, as it's definitely a winio function now =)
  update_line()
	- More '$' display fixes (Rocco Corsi).

nano 0.9.22 - 12/02/2000
- General
	- Username tab completion code, and cleaned up existing tabcomp
	  code. New functions real_dir_from_tide(), append_slash_if_dir(),
	  username_tab_completion is more than a stub now =-).
	- Ignore key sequence 543 & 545, right control and alt keys in
	  windows. Affects main() and winio.c:nanogetstr().
	- Took out help from spell_list and changed SPELL_LIST_LEN to 1.
	  Is using a spell checker THAT difficult? =-)
	- New function nano_disabled_msg(), to alert that certain
	  functions have been disabled, similar to nano_tiny feature.
- New configure options:
	- Added configure argument --disable-tabcomp.  Affects
	  bottom of files.c and write_file, utils.c:check_wildcard_match()
	  and winio.c:nanogetstr().
	- New options --enable-extra.  New code in nano.c:version() to 
	  print out various options from ./configure, function do_credits().
	- Added --disable-spell option for those who want to just disable
	  the spell check feature.  Affects the spelling functions
	  do_spell, do_int_speller and do_alt_speller.
	- Added --disable-justify to get rid of the justify function.
	  Affects do_justify() (not surprisingly).
- files.c:
  write_file()
	- Unsetting modified on temp files bug fixed (Rocco Corsi).
	- Okay, if tmp == 1 and the file exists, we abort.
  do_insertfile()
	- Added call to real_name_from tilde, oops.  Added check for
	  DISABLE_TABCOMP.
  read_file()
	- Added check for fileptr == NULL.
- global.c:
  shortcut_init()
	- Now takes an argument as to whether to display the unjustify
	  shortcut or the normal uncut text one.  Needed to accommodate
	  the kludgey unjustify code.
- nano.1, nano.1.html:
	- Updated date on pages because of -p changes.
	- Added "NOTES" section, where I explain what nano.save & friends
	  are.
	- Added a copyright notice for the manpage, under the GPL.
	- Other minor changes.
- nano.c:
  do_justify()
	- Wrote unjustify code.  Borrows cutbuffer and stores the unjustified 
	  text there, then grabs the next keystroke and, if the unjustify
	  key, gets rid of the justified text and calls do_uncut_text.
	  Added macro NANO_UNJUSTIFY_KEY.
  do_int_spell*
	- Various fixes (Rocco Corsi).
	- Changed abort of program to aborting based on value of "edit a
	  replacement" question, and not caring about the replace loop
	  return value.  That way the user can get out of the replace loop
	  and continue spell checking (very important to me anyway).
  version()
	- Took out huge check for the various --disabled macros,
	  eventually there will be too many to reasonably check for.  
  nano_small_msg(), nano_disabled_msg()
	- Added checks for disabled functions to see whether or not to
	  declare them.
  do_next_word()
	- Update the previous line as well as the current one in case we
	  have moved beyond COLS or back from COLS, patch submitted
	  by Ryan Krebs.
  die()
	- Now creates .save file using variable-length strings.  Also
	  calls write_file with tmp == 1, which happens to do exactly what
	  we want (abort on save file exists and use mode 0600).
  handle_sighup()
	- Now calls die instead of writing on its own and exiting normally.
- search.c:
  do_replace_highlight()
	- New function, displays the currently selected word as highlighted
	  in the spell check.  Called from do_replace_loop (Rocco Corsi).
	- Added calls to curs_set(0) and (1) to disable the cursor when
	  highlighting, looks much better.
- es.po: 
	- Traditional Spanish strings updates.

nano 0.9.21 - 11/23/2000
- AUTHORS
	- Added Rocco Corsi.
- nano.c:
  main()
	- Changed check for argc == 1 to argv[optind] == NULL to decide
	  whether or not to display "New File" in the statusbar.
- search.c:
  findnextstr()
	- Fix current_x increment bug by using another variable (Rocco Corsi).
  search_init()
	- Silly typo in our "one simple call" of statusq.  Stopped
	  previous search string from being displayed.
  do_replace()
	- Copy back the previous value of last_replace into answer if
	  using PICO_MODE and answer == ""
- winio.c:
  do_up()
	- Deleted first update_line() call, screws up display when marker is
	  set.
- nano.1, nano.1.html
	- Updated man page for new -p definition.

nano 0.9.20 - 11/18/2000
- General
	- Ran source through indent -kr again.  Make everything pretty.
	- Changed behavior of "search" and "replace" prompts to make all
  	  previous values editable.  This change was made so that you can 
	  replace with the null string without needing a special key for it.  
	  changed code in search_init(), do_replace(), nanogetstr (see
	  below).
	- Added some missing gettext calls here and there (Jordi).
	- Revamped nanogetstr() and calls to it to use variable length
	  strings.
	  MANY changes in nanogetstr(), many chances in search.c, new
	  function mallocstrcpy which is sure to be a programmatic
	  nightmare, changed last_search, last_replace, answer to
	  pointers.  New function not_found_msg in search.c for displaying
	  truncated strings in statusbar when the string is not found
	  (-pedantic fixes by Rocco Corsi). We disable this feature when
	  using PICO_MODE (-p).
	- New spelling code by Rocco Corsi.  New functions
	  do_int_speller, do_alt_speller, changes to do_spell in nano.c,
	  New functions search_init_globals and do_replace_loop, changes
	  to search_init(), do_replace, findnextstr, moved last_search and
	  last_replace back to nano.c (*shrug*).
	- New tab completion code.  Used check_wildcard_match, input_tab, 
	  cwd_tab_completion, username_tab_completion from busybox, 
	  hacked them a lot, changes to nanogetstr().  nanogetstr() and
	  statusq() now take an arg for whether or not to allow tab
	  completion.
	- Fixed value being input in statusbar during a search or replace
	  and CASE_SENSITIVE or the other search is called and the
	  string being typed in is blown away.  Reported by Ken Tyler.
	- Changed PICO_MSGS flag to PICO_MODE, changed help strings
	  accordingly.
- files.c:
  do_writeout()
	- Change strcpy to answer to mallocstrcpy.
- global.c
	- New global replace_list_2, for 2nd half of the replace dialog
	  ("Replace with:"), has fewer options than first half because
	  they were inappropriate.  
  toggle_init()
	- Added #ifdef around toggle_regex_msg to get rid of compiler 
	  warning.

- nano.c:
  keypad_on()
	- New function, toggles turning the keypad on and off in edit and
	  bottomwin().  Added call to this in finish(), fixes bug #45.
- search.c
  findnextstr()
	- New arg for begin_x variable, basically a rewrite that
	  makes a little more sense and isn't quite as messy (Rocco Corsi).
	- Update the line we're checking if not the whole screen, because
	  it's quite possible the search team could exist somewhere way
	  to the right on the same line, for example.
  replace_abort()
	- Add reset of placewewant, stops cursor from jumping when moving
	  cursor after a replace.
  do_replace()
	- Added code for Gotoline key after entering the search term.
	  Fixes bug #46.
	- Removed redundant code involving processing replacement string.
	  Converted if statements to switch statements.
	- Optimizations by Rocco Corsi.
	- Removed code for deleted shortcuts from in replace_list_2.
  do_search()
	- Converted if statements to one switch statement.
- winio.c
  nanogetstr()
	- Added check for 343 in while loop to get rid of getting "locked"
	  into statusbar" bug in odd $TERMs like iris-ansi.
	- Changed check to return -2 on "enter" from answer == ""
	  to answer == def.
	- Fixed fallthrough code because there was no break.  Make much
	  more sense now.
	- Added check for ASCII 54[124] when using PDCURSES, ignore them
	  if noticed.
  nanoget_repaint()
	- New function, removes about 30 lines of duplicate code in 
	  nanogetstr().
	- Black magic code to make $ appear in prompt if we're past
	  COLS.
  blank_edit()
	- Removed wrefresh() call, much less choppy now.  If there's a need
	  for a wrefresh after a specific call, let me know.
- es.po:
	- Updated translation for 0.9.20 (Jordi).
  
nano 0.9.19 - 10/02/2000
- General
	- Added PDCurses support under cygwin, which allows building
	  a nice stand-alone nano.exe for those poor Windows users.
	  Extra check in configure.in for initscr() in -lcurses (as
	  PDcurses has no tgetent), some #ifdef PDCURSES statements
	  in main().
	- Changed web site and email to new nano-editor.org domain.
- nano.c
	- Added (int) casts to remove compile warnings with -Wall.
  main()
	- Added check for _POSIX_VDISABLE around term variable definition.
- search.c
	- Added initializations for last_search and last_replace (Rocco Corsi)

nano 0.9.18 - 09/18/2000
- General
	- Changed _POSIX_VERSION checks in regex code to HAVE_REGEX_H, 
	  added check for regex.h in configure.in.
- configure.in:
	- Added default case for cross-compiling to get rid of annoying
	  AC_TRY_RUN warning.
- cut.c:
  do_cut_text()
	- Don't immediately abort if we're on filebot and the marker is
	  set (fixes bug #42).
- files.c:
  open_file()
	- Fix for bug #44 (Rocco Corsi).
- global.c:
  shortcut_init()
	- Added in FKEYs that for some reason were left out.  *boggle*
- nano.c:
  main()
	- Added check for _POSIX_VDISABLE and use raw mode if not
	  available, allows nano to work with cygwin.
	- Added gettext calls to enable/disable strings (Jordi).
	- Revamped a great deal of the F-key and keypad key handling,
	  because we not longer use keypad() (see below).
	- Removed keypad() call because nano was not working with the
	  keypad in many terms, which is very bad.
	- Made insert key call do_insertfile().
  do_toggle()
	- Rewrote function to allow NOHELP toggle to work on systems
	  without a working resizewin().  New function window_init().
  mouse_init()
	- Add keypad only if mouse support is on, otherwise mouse doesn't
	  work.  I guess you have to choose between having the mouse and
	  having a working keypad for the time being (thank god for Meta-M).
- winio.c:
  total_refresh()
	- Added titlebar() call.
  onekey()
	- Off by one error fix fix ;-) (Rocco Corsi).

- search.c:
  findnextstr()
	- Reset starting at current for search instead of begin.
- es.po:
	- Translated new strings and minor updates (Jordi).
- de.po 
	- Revised translations by floki@bigfoot.com

nano-0.9.17 - 09/04/2000
- General
	- New shortcuts to toggle certain options that are normally only
	  flags via Alt/Meta.  See Alt-C,E,I,K,M,P,X,Z.  New struct called
	  toggles in nano.h, toggle_init(), toggle_init_one() in global.c
	  called from shortcut_init(), and do_toggle in nano.c.  Also 
	  moved the signal code into a separate function in nano.c called
	  signal_init().  Moved "struct sigaction act"into a static in
	  nano.c.
	- Changed from Alt-key symbol (@) which is completely nonstandard
	  to the *nix "Meta" symbol (M-).  Changed help_init to show
	  the M-key usage and the help text to explain keys which generate
	  Meta.  Moved the toggle Meta keystrokes to the first column
	  instead of the third as they are the primary keystrokes for the
	  functions.  Thanks Mini editor team :->
	- Changed last_search and last_replace vars to statically 
	  allocated (hence nulled) and moved to search.c (Matt Kraai).
- global.c:
  toggle_init()
	- Changed "No auto wrap" and "No help mode" to "Auto wrap" and 
	  "Help mode". See the change to do_toggle() below.
- nano.c:
  do_mouse()
	- Patch for handling lines w/tabs and mouse better (Ben Roberts).
  do_wrap()
	- Made wrapping code less ambitious.
  do_toggle()
	- Added checks for no help and no wrap mode, and print opposite
	  enable/disable message.
  do_suspend(), do_cont():
	- New functions, handle suspend signal in a Pico-like manner and
	  work with Meta-Z.
- winio.c:
  total_refresh()
	- Added edit_refresh() call to actually update the screen if messy.
  edit_refresh_clearok()
	- New function, does a total update for edit refresh, needed to fix
	  lack of reversed text on searching with MARK_ISSET.
  onekey()
	- Off by one error fix (Rocco Corsi).

  update_line()
	- Added check for binary data >= 1 and <= 26, and use ^+letter
	  to display it.   Should fix editing text files with binary
	  data in them.  Placing of the cursor seems to be a bit screwed
	  though...
- search.c:
  search_abort()
	- Now calls edit_refresh_clearok when MARK_ISSET to handle screen
	  ugliness bug (reported by Ken Tyler).
  findnextstr():
	- Added reset for placewewant (Ben Roberts).
	- Fixed check for string that only occurs on the same line failing
	  (discovered by Ken Tyler).

nano-0.9.16 - 08/09/2000
- cut.c:
  do_cut_text()
	- Fixed getting locked into cutbuffer on cutting first line of file.
	- Added check_statblank().
	- Check for fileptr == filebot, if so return, we shouldn't bother
	  cutting the magic line.
  do_uncut_text()
	- Added check_statblank().
- nano.c:
  main()
	- Changed tabsize long arg to actually accept an argument *sigh*.
- po/Makefile.in.in:
	- Patch to handle $DESTDIR (orig by Dan Harnett contributed by
	  Christian Weisgerber)
- configure.in:
	- New (and severally revised =) slang test code (Albert Chin-A-Young)

nano-0.9.15 - 08/03/2000
- Changed edit_update call to take arguments TOP, CENTER or BOTTOM.
  Affects many many functions.  Removed functions edit_update_top and
  edit_update_bot.
- Added global variable tabsize, we no longer screw with the curses
  library in order to implement -T (suggested by Christian Weisgerber).
- configure.in:
	- Finally fixed check for slang to report "no" if not called
	  with --with-slang or --without-slang
- nano.c:
  splice_node()
	- New function, abstracts linking in nodes.   Fixes bug #36.
  null_at()
	- New function, nulls a string at a given index and realigns it.
  delete_buffer()
	- Removed, same as free_filestruct().
  do_backspace()
	- Now calls page_up_center instead of page_up (as it should?)
  do_enter()
	- Fixed typo (?) in check for inptr->next.  Caused lots of
	  grief for editing lines at filebot.
  main()
	- Removed now useless usertabsize variable (Christian Weisgerber).
- search.c:
  replace_abort()
	- redundant, now just calls search abort until it does something
	  different.  
- winio.c:
  edit_refresh()
	- Added check for current line "running" off the screen.
	  Hopefully this will not cause any recursive lockups.
	  (Who am I kidding, of course it will!)
	- Added check to stop infinite loop calling edit_update.
  edit_update()
	- Rewritten, hopefully this will remove a lot of the
	  scrolling the cursor back and forth needlessly.
- move.c:
  page_down()
	- do an edit_update() at last case.  Made function more like
	  Pico's version, only move down to two lines before editbot.
  page_up()
	- Made function more like Pico's version, only move down to two
	  lines after edittop.

nano-0.9.14 - 07/27/2000
- nano.h:
	- Set CUT_TO_END to a different bit than TEMP_OPT.  Fixes bug #32.
- cut.c:
  do_cut_text()
	- Added check for MARK_ISSET when using CUT_TO_END.  Fixes bug #31.
	- Simplified check for freeing cutbuffer.  Added checks for doing
	  multiple cuts with -k, now sets marked_cut to 2 for later
	  processing by do_uncut_text().
  do_uncut_text()
	- Added handler for uncutting with -k cuts.
- files.c:
  write_file()
	- Removed (redundant) check for writing out files with -t.
  do_writeout()
	- Changed check for filename to filename[0].  Added some code, 
	  overall fixes bug #30 =-)
- nano.c:
  do_justify() & do_wrap():
	- totsize-related fixes (Rob)
- de.po 
	- Revised translations by floki@bigfoot.com

nano-0.9.13 - 07/23/2000
- Implemented Pico's -k mode.  New flag CUT_TO_END, option (-k, --cut), 
  affects do_cut_text in cut.c.  Not available with SMALL_NANO because it
  depends on the marker code which is not available with that setting.
- Changed static temp_opt to flag TEMP_OPT.  Fixed bug #29 (using
  -t with an unwritable file causes users to get locked into editor).
- move.c
  page_down()
	- Don't edit_refresh() if the bottom of the file is in the edit
	  buffer. (Adam)
- nano.c:
  main():
	- TABSIZE now set before first call to edit_refresh (Bill Soudan)
	- Different ^C kill code (patch by Christian Weisgerber).
  die():
	- More intelligent emergency-save filename selection (Rob)
  do_spell():
	- Changed exit semantics a bit so that aspell wouldn't get
	  all screwy (bug discovered by Joshua Jensen.
- files.c:
  read_file():
	- Added init of buf variable, hopefully this will stop the 
	  "bleeding" of text seen with mutt and using i18n.
  write_file():
	- Added code to check to see if using -l and the file is not
	  in fact a link.  This should fix the behavior where a file
	  that does not have write permission but could be removed and
	  rewritten is saved without error.  Please test this feature
	  and give feedback.
- search.c:
  search_init():
	- Added " (to replace)" statement to end of search string if 
	  we are doing a replace.  Manually converted all the translations
	  from '%s' to '%s%s' to ensure they still work with the new code.
	  Also put in the translation for " (replace)" in the .po's.  Hope
	  I didn't step on your toes doing this Jordi. (Chris)
  do_search(), do_replace():
	- Removed call to search_abort()/replace_abort() before call to
	  the opposite function.
	- Fixed bug #28.
  findnextstr()
	- do not center string found if it is currently visible. (Adam)
- fr.po:
	- French update by Clement Laforet <clem_laf@wanadoo.fr>.
- es.po:
	- Updated strings to 0.9.13 (Jordi).

nano-0.9.12 - 07/07/2000
- all:
	- New regexp search feature by Bill Soudan.  New flags USE_REGEXP
	  and REGEXP_COMPILED, new functions regexp_init, regexp_cleanup
	  replace_line, replace_regexp in search.c, changes to
	  search_init() and do_replace() and strstrwrapper(). 
	- Added _POSIX_VERSION check to regexp code.  Better than nothing
	  for non-POSIX systems...
	- Made search functions & keys more like Pico.  Added goto line from  
	  search and replace function, changed wording to "No Replace" instead
	  of "To Search", "To Replace" to simply "Replace", and changed to
	  Pico's keystroke by default, ^R. Affects search_init(),
	  do_search() in search.c, globals in nano.h and
	  shortcut_init() in global.c.
	- changed 'sprintf' calls to safer 'snprintf' (Rob)
- cut.c
	- further totsize update corrections
- files.c:
	- changed do_insertfile to call fix_editbot (Rob)
	- Magic Line code in read_file (Rob)
- nano.c:
	- Removed dual alt_speller variables, oops! (Rocco Corsi)
	- Removed unnecessary do_oldspell function (Rocco Corsi).  Added
	  SMALL_NANO #ifdef around actual spell function.
	- Moved page_up() to move.c where is belongs.
	- Corrected FIXME in do_enter with explanation. (Rob)
	- Fixed FIXME in do_justify, resulted in creation of
	  fix_editbot [also fixed in do_enter] (winio.c) (Rob)
  help_init():
	- Moved newline out of if statement (Rocco Corsi)
  do_char():
	- Magic Line related code in do_char (Rob)
  do_backspace(), do_delete():
	- Added magic line code here too.

- de.po:
	- Revised translations by floki@bigfoot.com.
- fi.po:
	- Finnish translation by pauli.virtanen@saunalahti.fi.
- utils.c:
	- Added new_magicline()
- winio.c:
	- Added stdlib.h to includes, found by OpenBSD gcc.
	- lots of new commenting around display functions
  do_yesno(), nanogetstr():
	- Removed now unnecessary raw/cbreak combos.
	- Removed gettext calls from "Y(es)", "N(o)", "A(ll)" and "^C", till
	  we decide if those keybindings should be translated. (Jordi)
  clear_bottomwin():
	- Removed wrefresh(edit) call.
  edit_update_top():
	- Fixed a bug that caused nano to not update when
	  current->next == NULL (e.g. paging down to the very bottom of 
	  ABOUT NLS wouldn't work).
  fix_editbot:
	- Added (should rebuild editbot from a valid edittop) (Rob)
  edit_add:
	- removal of redundant call to mvwaddnstr

nano-0.9.11 - 06/20/2000
- New flag "-T" or "--tabsize" to specify how to display tab widths.
  Affects main() in nano.c, strlenpt(), xpt() and actual_x() (et al) in 
  winio.c, and nano.h.  Many hardcoded "8"s have been changed to the 
  TABSIZE int.  Added changes to nano.1 and nano.1.html.
- id.po:
	- Indonesian translation by Tedi Heriyanto.
- es.po:
	- Updated translation (Jordi Mallach).
- winio.c
	- Rewrite of display functions to correct the display problems 
	  we had been seeing. Affects: add_marked_sameline, edit_add,
	  and many others. (Rob Siemborski)
	- totsize fixes (Rob Siemborski)
  total_refresh():
	- Cut display_main_list call, as this function is only supposed to
	  refresh what's already on the screen, not go through the process
	  of adding the text again.
- cut.c:
	- totsize fixes (Rob Siemborski)
- nano.c:
	- experimental do_wrap and check_wrap (Adam Rogoyski)
	- Removed editwineob, as it was redundant for (editwinrows - 1).
	  Changed all calls to editwinrows - 1 in nano.c and move.c.
	- Removed all functions that were split into other files.
	  Affects LOTS of funcs.
  do_enter():
	- Added reset of placewewant to end.
  do_insertfile():
	- Fix display problem when using ctrl-r to load a file
	  into the buffer (Rob Siemborski)
  handle_sigwinch():
	- Added titlebar(), edit_refresh() and display_main_list() calls
	  because a resize wasn't picking up on possible different width
	  correctly.
- utils.c:
	- Moved nmalloc() and nrealloc() here.
- move.c:
	- New file, contains movement functions (like do_home(), do_up(),
	  do_down(), page_up(), etc...).
- files.c:
	- Contains functions for files (read_file, insert_file,
	  do_writeout(), etc).
- search.c:
	- Contains all our searching and related functions, (do_search(),
	  findnextstr(), do_replace(), do_gotoline()).

nano-0.9.10 - 06/04/2000
- es.po:
	- Translation updates (Jordi).
- AUTHORS, nano.1.html, TODO, README:
	- Documentation and email address updates (Jordi).
- nano.c:
  main():
	- Moved Adam's termio code down to after getopt() and before initscr()
	  to stop people losing their SIGINT character when using args that
	  exit nano before it runs (--version, --help, etc).

nano-0.9.9 - 05/31/2000
- Makefile.am:
	- Added proper lines for defining LOCALEDIR.
- configure.in:
	- Spelling fixes (Jordi Mallach)
	- Removed CFLAGS changes for gcc, reduces portability according to
	  some, and it certainly doesn't seem to decrease exe size.
- es.po:
	- Spanish translation updates (Jordi Mallach)
- POTFILES.in:
	- Added global.c file, was screwing up translations (i.e. they
	  weren't getting done).
- cut.c:
  add_to_cutbuffer():
	- Added totsize increment.
	- Cut fixes and optimizations (Rob Siemborski).
  do_uncut_text():
	- Added totsize increment in several places.
- nano.c:
  headers:
	- Removed LOCALEDIR define.
  do_justify():
	- Added edit_refresh() call (bug discovered by Adam).
  page_down_center():
	- Added call to edit_update(current) for last case.  Removed 
	  increment of current_y since it's now just wasteful.
  do_enter():
	- Added totsize increment.
  renumber(), renumber_all():
	- Removed totsize-- and totsize init in renumber_all.
  do_mouse():
	- Added edit_refresh() call to show highlight updates.  Removed
	  unnecessary wrefresh(edit).
  main():
	- Moved up locale calls so that translated --help messages would
	  actually get translated.
  do_backspace(), do_delete():
	- Added decrement of totsize.
  init_help_msg():
	- New function, initializes help text if NANO_SMALL isn't set (fixes
	  broken i18n).
  read_file():
	- malloc call changed to nmalloc (Rob Siemborski).
- winio.c:
  total_refresh():
	- Completely rewrote function, not quite so brain-damaged now.

nano-0.9.8 - 05/18/2000
- nano.c:
  main():
	- Added awesome code that disables the CINTR and CQUIT 
	  character (Adam Rogoyski).  Removed raw()/noraw() calls so that
	  nano gets input in 'normal' mode, which is the Right Way(tm) to
	  do it. ^S, ^Z and ^Q now work properly as a result, as well as
	  ^C.  New variable term, global variable oldterm to save previous
	  term settings, and changes to finish() and die().
	- Added extra #ifdefs in getopt code, so that above code and
	  flag init is run even if GETOPT_LONG is not #defined.
	- Added memset line before sigactions. (Adam Rogoyski)
  do_suspend():
	  Removed function, see above for why.
- winio.c:
  update_line(), center_cursor():
	- Removed wrefresh(edit) from bottom of functions.  wrefresh
	  should now only be called once, at the bottom of the main()
	  loop.
- global.c:
   shortcut_init():
	- Removed suspend sc_init call and suspend message because suspend
	  is no longer needed in the shortcut list to work properly.
    
nano-0.9.7 - 05/14/2000
- nano.c:
  do_home(), do_end(): 
	- Added calls to update_line for the current line, fixes
	  lack of update (bug discovered by Alberto García).
  main():
	- Added SET(FOLLOW_SYMLINKS) before getopt call, fixes not 
	  following symlinks even when -l isn't set, and "no changes"
	  error when nano is called from crontab -e (Adam Rogoyski).
- cut.c:
  do_cut_text():
	- Added edit_update_top to cut when mark is set, fixes lack of
	  display update (bug discovered by Ken Tyler).

nano-0.9.6 - 05/08/2000
- New Italian translation (it.po), by Daniele Medri.
- nano.c:
  page_up(), page_down():
	- Added reset of placewewant to 0, as it should be.
  do_up(), do_down():
	- Added call to update_line() for line we move from and line we
	  move to, in order to keep the highlighting correct.
  do_wrap():
	- Added var chop, new code to wrap lines more like Pico, mostly.
	  THIS STILL DEFINITELY NEEDS TO BE REWRITTEN!
- winio.c:
  do_help():
	- Added edit_refresh() before exit.
  update_cursor():
	- Removed cursor updating which really wasn't needed anyway.
  edit_update():
	- Removed yucky code that didn't work, this function now just
	  computes edittop and editbot and calls edit_refresh() to do the
	  rest, which removes a lot of duplicate code..  
  
nano-0.9.5 - 05/01/2000
- Removed bytes from file struct because it was computationally wasteful.
- cut.c:
  do_uncut_text():
	- Added call to edit_refresh().
- nano.c:
  do_backspace():
	- Added reset of editbot when deleting the last line of the file
	  (bug discovered by Adam).
  do_char():
	- Removed call to reset_cursor().
  do_delete():
	- Added similar check as to do_backspace().
  do_enter():
	- Added call to edit_refresh().
  do_left(), right():
	- Added call to update_line(), still redundant but better...
  do_up(), do_down():
	- Added refresh calls both for current line and line to which
	  we are moving.
  main():
	- Removed inefficient call to edit_refresh() after every keystroke.
	  It is now up each function to leave the screen in a good state.
- winio.c:
  do_cursorpos()
	- Rewritten to not use bytes from filestruct by an incremental sum.
  update_line(), reset_cursor():
	- Optimized calls to xplustabs() through a single variable.
	- update_line() now takes a new arg, an index into the string
	  for where to update the line from.  Needed for new update
	  code.
- configure.in:
	- Better checks for slang, allows argument to --with-slang.
	  (Albert Chin-A-Young)
	- Removed -Iintl from CFLAGS in gcc check.
- Makefile.am:
	- Addition of -Iintl for gettext (Albert Chin-A-Young)

nano-0.9.4 - 04/25/2000
 - Fixed calls to no_help and changed them to the more consistent
   ISSET(NO_HELP).  Fixed return val of no_help to be what it should (2,
   not 1.  Code to temporarily disable NO_HELP when in the
   help system. (Adam Rogoyski)
- cut.c:
  do_marked_cut(), do_cut(), do_uncut():
	- Commented out unnecessary bits when NANO_SMALL is being used.
- winio.c:
  xpt(), strlenpt(), actual_x():
	- Added check for value of data[i] & 0x80, if so do not make
	  character 2 chars wide (orig. by Chris, 0x80 check by Adam).
  edit_refresh():
	- New check for temp == NULL (bad thing), if so go back to the
	  previous line.  New filestruct var hold points to prev line.
	  Fixes segfault when paging down to the end of a file.
- nano.c:
  write_file():
	- Added check for if file exists and is not equal to the current
	  filename, prompt for overwrite (Adam Rogoyski).
  do_down():
	- Removed check for current->next == NULL, now checks return value
	  of do_down before setting current_x = 0 (discovered by Adam).
  do_justify():
	- Fixed segfault when reaching the last line (tried to assign
	  current->next->data when current->next == NULL) (discovered
	  by Adam).
- utils.c:
	- Removed extra macro defs that are now in nano.h.
- nano.h:
	- Changed macro SET() to use |= instead of ^=.  Fixes bug in
	  cut code when cutting more than one line, and cutbuffer gets
	  blown away when it shouldn't.  

nano-0.9.3 - 04/29/2000
- cut.c:
  do_marked_cut():
	- Fixed off by one error in cut code for marked text.
  do_cut_text():
	- Removed check for being on the last line, part of
	  magic line code.
  add_to_cutbuffer():
	- Moved tmp->prev = inptr line to part where cutbuffer != NULL.
	- Added inptr->prev = NULL for case where cutbuffer == NULL.
- nano.c:
  do_backspace(), do_char():  
	- Removed "magic line" code.  It was basically causing more bugs
	  than it was helping for the sake of compatibility.  This fixes
	  at least one known segfault condition.
  do_enter():
	- Added setting editbot to new node if the new node is the last
	  node in the file.
  write_file():
	- Changed writing file behavior.  Now, if last line of the file
	  has any data on it, we write a newline on it, else we don't.
- winio.c:
  add_marked_sameline():
	- New code that checks for whether the begin and end of the marker
	  are on different lines.  Missing previously.
  edit_add():
	- added some more checks for text length.  Cleaned up some
	  mvwaddnstrs that could be written more simply as waddnstrs.
  edit_refresh():
	- Removed check for temp == filebot, it is now treated like any other
	  line.  Fixes a bug where selected text on the last line shows
	  normally.
  xpt():
	- Removed an extra computation for tabs variable that was incorrect.
  xplustabs():
	- Since xpt now actually works, this func is now just a wrapper for
	  xpt(current, current_x)
- nano.1, nano.1.html:
	- Added -l option to man pages.
- configure.in:
	- New option --enable-tiny, #defines NANO_SMALL in config.h.  
	  Disables call to gettext in functions and other i18n stuff in 
	  nano.c, the detailed help mode, the resize functions, and the 
	  justify code which no one ever uses.
	- New option --with-slang.  Enables slang libraries instead of
	  ncurses, requires slcurses.h for wrapper functions. (Based
	  on patches for 0.8.7 by Glenn McGrath).

nano-0.9.2 - 04/15/2000
- This release just fixes the serious segfault problem if nano is 
  invoked any way other than using the absolute path.  The bug was
  in the new code for checking whether nano is invoked as 'pico'.

nano-0.9.1 - 04/14/2000
- Added Pico compatibility for ^T when in search or switch to switch
  to the opposite function.  Added one to REPLACE_LIST_LEN and 
  WHEREIS_LIST_LEN in nano.h, new args to sc_init_one in global.c and
  new strings that will have to be gettext()ed.  New argument 'replacing'
  to search_init().  Handlers in do_replace and do_search().
- New write code, now follows symbolic links instead of replacing them
  with the new file.  New option (-l, --nofollow) to enable the old
  (incorrect, but secure) behavior (Adam Rogoyski).
- nano.c:
  do_wrap():	
	- Fixed another bug relating to wrapping, and which would cause
	  a segfault *sigh*.
  do_replace(): 
	- Incremented current_x by the length of the replacement
	  text inside the main replace loop.  Fixes bug #15.
  add_marked_sameline():
	- New function, handles marked text when start & end of marker is
	  on one line, also supports most marked text when cursor > COLS.
  main():
	- Code to check if nano is invoked as 'pico', and if so
	  automatically set pico_msgs (Robert Jones).

nano-0.9.0 - 04/07/2000
- nano.1, nano.1.html: 	Updated man page with my email address and homepage.
- winio.c:
  reset_cursor(), update_line():	
	- Changed update algorithm for x value to (COLS - 7) multiple when x
	  value > (COLS - 2).
- edit_refresh():
	- Removed inner loop code, now calls update_line() for each line
	  in question, MUCH nicer.
- xplustabs(), xpt():
	- Removed redundant increment of tabs when column no % 8 == 0.
	- Added check for data[i] < 32, most of such bits are 2 chars wide.
- update_line():
	- Fixed a stupid call to strlenpt with col when we should have
	  been using actual_col.  Ugh.

nano-0.8.9 - 03/22/2000
- nano.c:
  empty_line(), no_spaces(), justify_format(), do_justify():
		Actually added these (screwup applying patch).
  do_justify():	Added call to set_modified().

nano-0.8.8 - 03/12/2000
- Preliminary internationalization support.  Many many functions modified
  to use gettext (via _() macro).  es.po file included. (Jordi Mallach)
  New dirs po/ and intl/, changes to configure.in and Automake.am to
  support i18n.
- nano.c:
  includes:	Added sys/param.h and limits.h. (Adam Rogoyski).
  statics: 	Changed some things that were not necessarily static 
		(Adam Rogoyski).
  nrealloc():	New function, similar to nmalloc().  Changed calls from
		realloc() to nrealloc (Adam Rogoyski).
  empty_line(), no_spaces(), justify_format(), do_justify():
		New functions for justify function (Adam Rogoyski).
- winio.c:
  blank_edit():	Added wrefresh call to edit so that screen updates (like
		on ^L) actually work.
  xplustabs(), xpt(), strlenpt(): Fixed off-by-one buglets (Adam Rogoyski).

nano-0.8.7 - 03/01/2000
- main.c:
  do_wrap():	Better fix for segfaults, and fix for lines being wrapped 
		to a single character on one line when no good place to 
		break the line exists, and for wrapping lines longer than
		COLS.
- nano.1.html:
		Html version of man page, now included in dist.  For
		the benefit of nano packages in Linux distributions.

nano-0.8.6 - 02/24/2000
- global.c:
  shortcut_init():
		Added shortcuts for goto_line and do_replace when using
		pico_msgs.  Oops.
- nano.c:
  statics:	Changed fill back to 0 from 71 by default (Adam Rogoyski).
  do_wrap():	Added check for backing up past tabs, which we shouldn't do.
		Removed check for backing up past spaces first.
  main():	Added for loop to check for alt keys instead of hard list.
  do_enter():	Fix for bug #14, added call to reset_cursor and messed
		up do_char quite a bit.
  version():	Added time and date stamp for compile on version message.
		Added mail and web page info.
- README:	Updated mailing list info.

nano-0.8.5 - 02/18/2000
- nano.c:
  main():	Finally fixed tilde being input on page up/down keys in
		certain terminal types.  Fix was input 26->91->5[34] check
		for 126, if so make the kbinput PAGE UP/DOWN, else unget
		the keystroke and continue.  Added #include <ioctl.h> for
		ioctl call.
  handle_hup():
		Handler for hangup signal.  Belated include of patch from
		Tim Sherwood.
- winio.c:
  edit_refresh():
		Temporary fix for selecting text when temp == current.
		edit_refresh() is now unmanageably complex, and must be
		revamped.
  check_statblank():
		Added check for constupdate, makes things less choppy
		(Adam Rogoyski)

nano-0.8.4 - 02/11/2000
- Moved global variables that were only (or mostly) used in one file into
  its proper file as a static.  Affects cut.c, nano.c, global.c (Andy Kahn).
- global.c:	
  shortcut_init():
		Removed redundant NANO_CONTROL_H from backspace shortcut,
		added char 127 which should have been there.
- nano.c:
  main():	Fix for loops looping until MAIN_LEN, added -1 to stop
		segfaults (Adam Rogoyski).
- Makefile.am:	Added all source filenames (Adam Rogoyski).
- nano.1:	Fixed mail addressed and added mailing list address.
- README:	Updated my email address and the nano web page.

nano-0.8.3 - 02/08/2000
- New Pico mode (-p, --pico), toggles (more) compatibility with the
  Pico messages displayed in the shortcut list.  Note that there are still
  small differences in this mode.
- nano.h:	New shortcut struct format, for the benefit of i18n and
		our help menu.  Removed shortcut message macros, they are
		now all in shortcut_init in global.c.
- nano.c:
  do_wrap():	Removed resetting of current_x when we are in fact
		wrapping to the next line, fixes a bug in -i mode.
  do_enter():
		Rewrote the autoindent mode code to be a lot less pretty,
		but a lot more magical.
  main():
		Removed case for ignoring char 126 (~).  That's kind of
		important, we'll have to fix handling that sequence when
		paging up/down on a terminal some other way... Revamped
		main switch loop in much snazzier fashion based on the
		shortcut list.
- winio.c:
		New function display_main_list.  Affects all functions
		that used to call bottombars() with main_list.  Added
		because we now only call bottombars with the macro
		MAIN_VISIBLE instead of MAIN_LIST_LEN, because of the
		changes to the main_list shortcut list (see global.c below).
		New function do_help, our preliminary dynamic help system.
- Many many funcs:
		Changed from int to void to allow one uniform type to call
		from the shortcut struct.  Also a few functions that do
		not simple have void argument have new functions called
		funcname_void(void) to be called from the shortcut list.
		do_cut_text and do_uncut_text were changed to void
		arguments because they were never called with a filestruct
		other than *current anyway.
- global.c:
		Shortcut list main_list was expanded to cover all
		shortcuts that could be caught in the main loop.
		Consequently there is a new macro MAIN_VISIBLE which tells
		how many items in the main list to actually show.

nano-0.8.2 - 02/02/2000
- Added initial mouse (-m, --mouse) support.  New global variable
  use_mouse. (Adam Rogoyski)

- nano.c:	Set initial value of fill to COLS - 8 rather than just 72
		regardless. (Adam Rogoyski).
  do_delete():	
		Deleted call to do_backspace() when on the end of a line,
		because it won't update the line properly.
  do_backspace():
		Removed unnecessary pointer manipulation that was being
		handled by unlink_node().
  open_file():
		Added check for trying to open a directory (currently we
		segfault on this).  Bug pointed out by Chad Ziccardi.

nano-0.8.1 - 01/28/2000
- Implemented Pico's -r (fill) mode, command line flag -r or --fill.  New
  global variable fill, affects check_wrap(), do_wrap(), main(), usage(),
  global.c and proto.h.
- nano.c:
write_file():		Added (incredibly) necessary check for EPERM when
			link() fails.  This allows us to actually save
			files via rename() on filesystems that dont
			support hard links (AIEEEEEE).
do_goto():
			Fixed a stupid mistake where we were calling
			bottombars() with replace_list instead of goto_list.
- nano.h:
			New char *help in shortcut structure for help
			feature. Added NANO_*_MSG and NANO_*_HELP #defines
			for help function and i18n.
- global.c:
			New functions shortcut_init (called in nano.c) and
			sc_init_one() to initialize the shortcuts without
			using {}s (for i18n).

nano-0.8.0 - 01/25/2000
- View flag (-v, --view) implemented.  Global variable view_mode, affects
  main loop of nano.c and new_file(). (me)
- nano.c:
			split checks for TERMIOS_H and TERMIO_H up so we
			can (theoretically) include them both, which is good.
handle_sigwinch():
			Added check for ncurses.h.  (Andy Kahn)
do_spell():
			We now only try ispell because we don't as of yet
			handle the 'spell' program the right way, now that
			I finally know what the right way is =-).  Added
			call to edit_update(fileage) to stop segfaults.
global_init():
			Added initialization of edit* filestruct pointers
			to stop segfaults on spell check.
usage():
			Check for getopt_long, and if no leave out the
			GNU options everyone seems to love so much (Andy Kahn)
main():
			Added checks for getopt_long (Andy Kahn)
			We ignore character 126 because it gets put into
			the buffer when we page up/down on a vt terminal.
write_file():
			Fixes for umask (Adam Rogoyski).  Renamed tmpfile
			variable to tmp.  Documented the tmp option
			better in the function comments.  Fixed my 
			stupidly commented out check for tmp on setting
			umask which I really like =>
- nano.h:
			Made desc variable in shortcut struct a pointer
			instead of a fixed-length string.
- utils.c:
			Fixed check for config.h before nano.h.
- configure.in:
			New checks for getopt_long, getopt.h, removed
			CFLAGS and LDFLAGS changes.  Gonna have to run
			strip manually now =-) (Andy Kahn)
			Added check for HAVE_WRESIZE, new file acconfig.h
			(me).

nano-0.7.9 - 01/24/2000
- New autoindent feature.  Command flag 'i' or '--autoindent'.  New
  function do_char() to clean up character output, global
  variable autoindent in global.c. (Graham Mainwaring)
- New flag 't' or '--tempfile', like Pico's -t mode, automatically saves
  files on exit without prompting.  Affects do_writeout().  Also
  do_writeout() now takes a parameter for if exiting.
  Global variable temp_opt in global.c (Graham Mainwaring)
- Preliminary spell program support.  Added command flag '-s' or
  '--speller' for alternative speller command.  Added function do_spell()
  and exit_spell() to nano.c.  New global variable alt_speller.
- nano.c:
  main():	We now ignore input of decimal 410 because these get entered 
		when we resize the screen.  Sorted options in getopt()
		switch statement.
  usage():	Sorted options and changed tabs to make room for -s option.
  write_file():	Now takes a second parameter 'tmpfile', uses mask 0600 and
		doesn't print the number of lines written on the statusbar.
  global_init():
		Added more initializations to globals to support do_spell().

nano-0.7.8 - 01/23/2000
- Stubbed justify function.  Affects main() in nano.c and nano.h defines.
- Added Fkey equivalents for Pico compatibility.  Affects nano.h defines
  and main() in nano.c
- Removed redundant reset_cursor() calls from the blank() routines.
- nano.c:
  main():	Fixed typo in main while loop for NANO_ALT_REPLACE_KEY.
		Removed check for isprint() characters in main while loop
		for people with odd character sets *shrug*.  Added some X
		window F-key combos.
  read_line():	New function, consolidates of most of the special
		sections of the file reading code. (Rob Siemborski)
  do_replace(): Many scattered fixes. (Rob Siemborski)
  write_file():	Added check for empty filename.
- winio.c:
  nanogetstr():	Fixes for deleting at places other than the end of the
		buffer, cut support. (Adam Rogoyski)
  blank_edit():	New function, blanks edit buffer.  Added call to it in 
		total_refresh().
- configure:	Checks for glib if snprintf of vsnprintf aren't available
		(Andy Kahn). Changed warning message when no termcap lib
		is found.

nano-0.7.7 - 01/19/2000
- Option '-v' for version moved to '-V', because -v is Pico's "read only"
  mode (affects getopt() in main() and usage() function in nano.c
- New flag -c, always show cursor position.  Affects main() in nano.c and
  statusbar() in winio.c
- Option '-x' doesn't show help window at the bottom of the editor.
  New variable no_help in nano.h and proto.h, affects main(), usage(),
  and global_init() in nano.c, blank_bottombars(), clear_bottomwin(),
  bottombars(), and do_yesno()  in winio.c  (I had to apply this patch by
  hand =P) (Adam Rogoyski)
- nano.c:
  handle_sigwinch():	New function (Adam Rogoyski), handles resizing.
  page_up(), page_down():	
	- New functions.  We now set the cursor at the top right corner,
	  not at the center line, and page up and down a full screen
	  rather than a half screen. Original functions renamed to
	  page_up_center() and page_down_center().
  main(): 
	- Added check for keystroke key sequence 407 or NANO_CONTROL_Z
	  in main while loop because suspend mode was broken.  This should
	  fix it, at least for now.
	- Added long option support (By popular harassment ;-) - Added
	  #include for getopt.h, changed getopt() to getopt_long().
	  Options added so far: --version (-V), --nowrap (-w), --suspend
	  (-z), --help (-h), --nohelp (-x).
	- Rewrote signal statements (Adam Rogoyski)

nano 0.7.6 - 01/15/2000
- New ChangeLog format
- nano.c: 
  main(): 	Bound CONTROL_H to backspace (oops)
		Added more Alt-[-key combinations, for page up & down.
  read_bytes():	New function (Adam Rogoyski)
  read_file():	Optimizations - malloc()s *buf a little at a time rather
		than one huge buffer, and replaced the strcat at the end
		with an index variable.  Added call to read_bytes().
  do_next_word(): New function, binding is control-space (0) (me)

- winio.c: 
  bottombars():	Fixed non-expanding shortcut keys at bottom of screen.
		(formula is extra space needed = COLS / 6 - 13).
  actual_x() & strlenpt():	
		Added bug#9 fix - when tabs % 8 == 0, we should only
		increment tabs by 1.
  titlebar():	Fixed overrun in titlebar on very long filenames.

0.7.5	Pico 'last line' feature added (Rob Siemborski & me).  Eliminated
	writing a newline at EOF. do_cursorpos and do_replace are now not
	directly bound to signals but picked up as their control sequences
	in raw mode. Bug fix in do_backspace. Fixed bug #9 (woohoo!)
0.7.4	Optimized (obfuscated?) edit_refresh. Malloc() calls checked for
	available memory, align bug fixed (Big Gaute).

--- As of version 0.7.4 TIP is renamed to nano.

0.7.3	Fixed a double blank_statusbar() when jumping to first and last
	lines.  Took out unnecessary updates in load_file. Bug fix in
	do_left. Missing updates to totlines, fixed bug #7 (last line not
	having a newline at the end doesn't get read, bugfix in do_replace
	with replace all, more/better comments (Robert Siemborski)
0.7.2	Our first patch accepted into the source! configure fixes 
	and optimizations (Erik Anderson).  Added missing stdarg.h to winio.c. 
	Bug fix in update_line for editing long lines. Fixed arguments
	being put into the filename when none is specified. Preliminary
	+line command argument function.
0.7.1	configure tweak for better FreeBSD support. Removed refresh() from
	edit_refresh to stop cursor "jumping" during screen updates.  This
	will probably cause a bug or two. Replace is now Alt-R (@R) and 
	Goto line is Alt-G (@G), but they have control key aliases of ^\ and 
	^_ respectively.  Made Control-F,B,N,P work like they do in Pico.
	Control-G will become the Help key, but for now is stubbed out.
0.7.0	Fixed missing stdlib.h from cut.c. Fixed a few message bugs in
	findnextstr. Bound Control-D to Delete. Refixed segfault on zero
	length file. Added Esc-[-A,B,C,D cursor key sequences.
0.6.9	Preliminary cursor position function. Split up tip.c more, made
	new files cut.c and winio.c. Fixed a bug in cut_marked_segment
	that was leaving out a character.
0.6.8	By request, optchr in main() is now an int.  Removed unneeded
	globals. Bound functions for next/prev page, and wrote functions
	do_home and do_end.
0.6.7	Bugfix in do_uncut_text for totlines. Broke up open_file and
	created read_file.  Implemented Insert File. Fixes in tipgetstr
	for erroneous keystrokes. Added leave_cursor arg to do_yesno().
0.6.6	Fixes in do_search(), do_replace(), do_writeout, and do_exit() for 
	aborted searches and more Pico-compatible messages. statusq() now
	returns -2 on a blank entry instead of -1. Bug fix in actual_x().
0.6.5	More BSD compatibility.  Fixed two bugs in do_uncut_text
	regarding buffers with filebot in them.  Fixins in do_backspace
	and do_enter. Removed unused variables. Removed strip_newline.
0.6.4	Took out the awful newlines from each string buffers.  This will
	certainly cause more bugs. Fixes in do_exit(). Better empty file
	handling (I hope).
0.6.3	Implemented ^E.  Removed now unneeded wrapline from filestruct.
	do_enter() rewritten.
0.6.2	Better default file permissions. Complete rewrite of do_wrap().
	Better handling of editing with cursor near COLS - 1.
0.6.1	Starting to implement wrapping toggle. Fix for unhandled control
	codes being entered into the buffer. Bug fix in actual_x; more
	> COLS - 1 functionality, especially on lines with TABs.  Fixed being 
	locked into cutbuffer when cutting more than one marked screen of
	text.
0.6.0	We have TABs!!!  To do this, placewewant is now set to the actual
	width on the screen we want to be, not an index of current->data.
	New functions xplustabs and actual_x convert the actual place
	the cursor should be on the screen to and from the place in the
	string.
0.5.5	Changed do_right to test do_down before setting current_x to 0,
	eliminating the "looping" on the last line when holding the right
	arrow.  Preliminary support for longer than COLS - 1 lines.
	Wrote do_delete.
0.5.4	Fixed a bug in total_update that wasn't repainting the screen
	properly.  tipgetstr is much more messy but text is now more
	editable ;)  Fixed crash on entering a new file, hopefully.  Awful
	stub for tab handling, only in do_right() to save me some sanity.
0.5.3	Added check for malloc.h.  Implementing uncut from marker slowly.
	Fixed a few bugs in do_uncut when not uncutting from marked text.
	I would not trust your data with the mark code right now, but then
	we're not at version 1.0 yet so dont trust anything ;)
0.5.2	Added reset_cursor() before end of update_line so cursor doesn't
	jump after each keystroke entered. Select text stubbed. Fixed
	a bug in total_refresh().  Setting a mark will highlight properly,
	but does not actually affect what gets put in the cutbuffer (yet).
0.5.1	Writing a file out causes modified to be set back to 0.  Good.
	Set_modified function written.  Cut and uncut text now set
	modified when called.
0.5.0	Half way there!  Implemented write out, save function seems
	stable.  Changed statusbar blank routing to not refresh, a separate
	program calls it and then refreshes.  Made the program not clear
	the screen on exit, just the bottom two lines (like Pico).
0.4.2	Implemented replace all in replace function.  Crude exit function
	(asks yes or no if modified but does not write to file).
0.4.1	Implementing search & replace.  Fixed crash on deleting at top of
	edit buffer.  Implemented "timeout" of statusbar messages.
	Implemented ^A and ^E (beginning and end of line).
0.4.0	Split code into global.c and proto.h to allow for better multiple
	file handling.  Added #defines for the majority of the shortcut
	keys in tip.h for easy modification. 
0.3.1	Write edit_refresh which doesn't move the screen around, just
	updates what's there already.  do_wrap() and do_enter() added.
0.3.0	Preliminary cutbuffer (cut and uncut) support.
0.2.7   Check for Modification added.  do_search() works.
0.2.5	Rewrite of file data struct.
0.2	Read in data to buffer, bound keystrokes to stub functions, 
	initial cursor movement on screen.  Initial autoconf support.
0.1	Initial program setup w/ncurses

$Id$
