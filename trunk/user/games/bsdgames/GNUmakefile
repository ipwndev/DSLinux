# GNUmakefile - automatically generated by configure.  Do not edit.

# No suffix rules
.SUFFIXES:

# Include configuration
include Makeconfig

.PHONY:	all  adventure_all arithmetic_all backgammon_teachgammon_all backgammon_backgammon_all backgammon_common_source_all backgammon_all battlestar_all bcd_all boggle_mkindex_all boggle_boggle_all boggle_mkdict_all boggle_all caesar_all canfield_cfscores_all canfield_canfield_all canfield_all countmail_all cribbage_all fish_all gomoku_all hack_all hangman_all mille_all morse_all number_all pig_all pom_all ppt_all primes_all quiz_datfiles_all quiz_all rain_all random_all robots_all sail_all snake_snake_all snake_snscore_all snake_all tetris_all trek_all wargames_all worm_all worms_all wtf_all wump_all lib_all
all:	 adventure_all arithmetic_all backgammon_teachgammon_all backgammon_backgammon_all backgammon_common_source_all backgammon_all battlestar_all bcd_all boggle_mkindex_all boggle_boggle_all boggle_mkdict_all boggle_all caesar_all canfield_cfscores_all canfield_canfield_all canfield_all countmail_all cribbage_all fish_all gomoku_all hack_all hangman_all mille_all morse_all number_all pig_all pom_all ppt_all primes_all quiz_datfiles_all quiz_all rain_all random_all robots_all sail_all snake_snake_all snake_snscore_all snake_all tetris_all trek_all wargames_all worm_all worms_all wtf_all wump_all lib_all
#.PHONY:	all  adventure_all arithmetic_all atc_games_all atc_all backgammon_teachgammon_all backgammon_backgammon_all backgammon_common_source_all backgammon_all battlestar_all bcd_all boggle_mkindex_all boggle_boggle_all boggle_mkdict_all boggle_all caesar_all canfield_cfscores_all canfield_canfield_all canfield_all countmail_all cribbage_all dab_all fish_all gomoku_all hack_all hangman_all hunt_hunt_all hunt_huntd_all hunt_all mille_all monop_all morse_all number_all phantasia_all pig_all pom_all ppt_all primes_all quiz_datfiles_all quiz_all rain_all random_all robots_all sail_all snake_snake_all snake_snscore_all snake_all tetris_all trek_all wargames_all worm_all worms_all wtf_all wump_all lib_all
#all:	 adventure_all arithmetic_all atc_games_all atc_all backgammon_teachgammon_all backgammon_backgammon_all backgammon_common_source_all backgammon_all battlestar_all bcd_all boggle_mkindex_all boggle_boggle_all boggle_mkdict_all boggle_all caesar_all canfield_cfscores_all canfield_canfield_all canfield_all countmail_all cribbage_all dab_all fish_all gomoku_all hack_all hangman_all hunt_hunt_all hunt_huntd_all hunt_all mille_all monop_all morse_all number_all phantasia_all pig_all pom_all ppt_all primes_all quiz_datfiles_all quiz_all rain_all random_all robots_all sail_all snake_snake_all snake_snscore_all snake_all tetris_all trek_all wargames_all worm_all worms_all wtf_all wump_all lib_all

# Include substitution rules.
include subst.rules

include adventure/Makefrag

adventure/%.o:	adventure/%.c
	$(CC) $(CFLAGS) $(adventure_CFLAGS) $(adventure_DEFS) $(BASE_INCS) -Iadventure $(adventure_INCS) -c $< -o $@

adventure/%.i:	adventure/%.c
	$(CC) $(CFLAGS) $(adventure_CFLAGS) $(adventure_DEFS) $(BASE_INCS) -Iadventure $(adventure_INCS) -E $< -o $@

adventure/%.s:	adventure/%.c
	$(CC) $(CFLAGS) $(adventure_CFLAGS) $(adventure_DEFS) $(BASE_INCS) -Iadventure $(adventure_INCS) -S -fverbose-asm $< -o $@

adventure/%.d:	adventure/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(adventure_CFLAGS) $(adventure_DEFS) $(BASE_INCS) -Iadventure $(adventure_INCS)

include arithmetic/Makefrag

arithmetic/%.o:	arithmetic/%.c
	$(CC) $(CFLAGS) $(arithmetic_CFLAGS) $(arithmetic_DEFS) $(BASE_INCS) -Iarithmetic $(arithmetic_INCS) -c $< -o $@

arithmetic/%.i:	arithmetic/%.c
	$(CC) $(CFLAGS) $(arithmetic_CFLAGS) $(arithmetic_DEFS) $(BASE_INCS) -Iarithmetic $(arithmetic_INCS) -E $< -o $@

arithmetic/%.s:	arithmetic/%.c
	$(CC) $(CFLAGS) $(arithmetic_CFLAGS) $(arithmetic_DEFS) $(BASE_INCS) -Iarithmetic $(arithmetic_INCS) -S -fverbose-asm $< -o $@

arithmetic/%.d:	arithmetic/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(arithmetic_CFLAGS) $(arithmetic_DEFS) $(BASE_INCS) -Iarithmetic $(arithmetic_INCS)

#include atc/games/Makefrag
#
#atc/games/%.o:	atc/games/%.c
#	$(CC) $(CFLAGS) $(atc_games_CFLAGS) $(atc_games_DEFS) $(BASE_INCS) -Iatc/games $(atc_games_INCS) -c $< -o $@
#
#atc/games/%.i:	atc/games/%.c
#	$(CC) $(CFLAGS) $(atc_games_CFLAGS) $(atc_games_DEFS) $(BASE_INCS) -Iatc/games $(atc_games_INCS) -E $< -o $@
#
#atc/games/%.s:	atc/games/%.c
#	$(CC) $(CFLAGS) $(atc_games_CFLAGS) $(atc_games_DEFS) $(BASE_INCS) -Iatc/games $(atc_games_INCS) -S -fverbose-asm $< -o $@
#
#atc/games/%.d:	atc/games/%.c
#	./mkdep $< $@ $(CC) $(CFLAGS) $(atc_games_CFLAGS) $(atc_games_DEFS) $(BASE_INCS) -Iatc/games $(atc_games_INCS)
#
#include atc/Makefrag
#
#atc/%.o:	atc/%.c
#	$(CC) $(CFLAGS) $(atc_CFLAGS) $(atc_DEFS) $(BASE_INCS) -Iatc $(atc_INCS) -c $< -o $@
#
#atc/%.i:	atc/%.c
#	$(CC) $(CFLAGS) $(atc_CFLAGS) $(atc_DEFS) $(BASE_INCS) -Iatc $(atc_INCS) -E $< -o $@
#
#atc/%.s:	atc/%.c
#	$(CC) $(CFLAGS) $(atc_CFLAGS) $(atc_DEFS) $(BASE_INCS) -Iatc $(atc_INCS) -S -fverbose-asm $< -o $@
#
#atc/%.d:	atc/%.c
#	./mkdep $< $@ $(CC) $(CFLAGS) $(atc_CFLAGS) $(atc_DEFS) $(BASE_INCS) -Iatc $(atc_INCS)

include backgammon/teachgammon/Makefrag

backgammon/teachgammon/%.o:	backgammon/teachgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_teachgammon_CFLAGS) $(backgammon_teachgammon_DEFS) $(BASE_INCS) -Ibackgammon/teachgammon $(backgammon_teachgammon_INCS) -c $< -o $@

backgammon/teachgammon/%.i:	backgammon/teachgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_teachgammon_CFLAGS) $(backgammon_teachgammon_DEFS) $(BASE_INCS) -Ibackgammon/teachgammon $(backgammon_teachgammon_INCS) -E $< -o $@

backgammon/teachgammon/%.s:	backgammon/teachgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_teachgammon_CFLAGS) $(backgammon_teachgammon_DEFS) $(BASE_INCS) -Ibackgammon/teachgammon $(backgammon_teachgammon_INCS) -S -fverbose-asm $< -o $@

backgammon/teachgammon/%.d:	backgammon/teachgammon/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(backgammon_teachgammon_CFLAGS) $(backgammon_teachgammon_DEFS) $(BASE_INCS) -Ibackgammon/teachgammon $(backgammon_teachgammon_INCS)

include backgammon/backgammon/Makefrag

backgammon/backgammon/%.o:	backgammon/backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_backgammon_CFLAGS) $(backgammon_backgammon_DEFS) $(BASE_INCS) -Ibackgammon/backgammon $(backgammon_backgammon_INCS) -c $< -o $@

backgammon/backgammon/%.i:	backgammon/backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_backgammon_CFLAGS) $(backgammon_backgammon_DEFS) $(BASE_INCS) -Ibackgammon/backgammon $(backgammon_backgammon_INCS) -E $< -o $@

backgammon/backgammon/%.s:	backgammon/backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_backgammon_CFLAGS) $(backgammon_backgammon_DEFS) $(BASE_INCS) -Ibackgammon/backgammon $(backgammon_backgammon_INCS) -S -fverbose-asm $< -o $@

backgammon/backgammon/%.d:	backgammon/backgammon/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(backgammon_backgammon_CFLAGS) $(backgammon_backgammon_DEFS) $(BASE_INCS) -Ibackgammon/backgammon $(backgammon_backgammon_INCS)

include backgammon/common_source/Makefrag

backgammon/common_source/%.o:	backgammon/common_source/%.c
	$(CC) $(CFLAGS) $(backgammon_common_source_CFLAGS) $(backgammon_common_source_DEFS) $(BASE_INCS) -Ibackgammon/common_source $(backgammon_common_source_INCS) -c $< -o $@

backgammon/common_source/%.i:	backgammon/common_source/%.c
	$(CC) $(CFLAGS) $(backgammon_common_source_CFLAGS) $(backgammon_common_source_DEFS) $(BASE_INCS) -Ibackgammon/common_source $(backgammon_common_source_INCS) -E $< -o $@

backgammon/common_source/%.s:	backgammon/common_source/%.c
	$(CC) $(CFLAGS) $(backgammon_common_source_CFLAGS) $(backgammon_common_source_DEFS) $(BASE_INCS) -Ibackgammon/common_source $(backgammon_common_source_INCS) -S -fverbose-asm $< -o $@

backgammon/common_source/%.d:	backgammon/common_source/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(backgammon_common_source_CFLAGS) $(backgammon_common_source_DEFS) $(BASE_INCS) -Ibackgammon/common_source $(backgammon_common_source_INCS)

include backgammon/Makefrag

backgammon/%.o:	backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_CFLAGS) $(backgammon_DEFS) $(BASE_INCS) -Ibackgammon $(backgammon_INCS) -c $< -o $@

backgammon/%.i:	backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_CFLAGS) $(backgammon_DEFS) $(BASE_INCS) -Ibackgammon $(backgammon_INCS) -E $< -o $@

backgammon/%.s:	backgammon/%.c
	$(CC) $(CFLAGS) $(backgammon_CFLAGS) $(backgammon_DEFS) $(BASE_INCS) -Ibackgammon $(backgammon_INCS) -S -fverbose-asm $< -o $@

backgammon/%.d:	backgammon/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(backgammon_CFLAGS) $(backgammon_DEFS) $(BASE_INCS) -Ibackgammon $(backgammon_INCS)

include battlestar/Makefrag

battlestar/%.o:	battlestar/%.c
	$(CC) $(CFLAGS) $(battlestar_CFLAGS) $(battlestar_DEFS) $(BASE_INCS) -Ibattlestar $(battlestar_INCS) -c $< -o $@

battlestar/%.i:	battlestar/%.c
	$(CC) $(CFLAGS) $(battlestar_CFLAGS) $(battlestar_DEFS) $(BASE_INCS) -Ibattlestar $(battlestar_INCS) -E $< -o $@

battlestar/%.s:	battlestar/%.c
	$(CC) $(CFLAGS) $(battlestar_CFLAGS) $(battlestar_DEFS) $(BASE_INCS) -Ibattlestar $(battlestar_INCS) -S -fverbose-asm $< -o $@

battlestar/%.d:	battlestar/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(battlestar_CFLAGS) $(battlestar_DEFS) $(BASE_INCS) -Ibattlestar $(battlestar_INCS)

include bcd/Makefrag

bcd/%.o:	bcd/%.c
	$(CC) $(CFLAGS) $(bcd_CFLAGS) $(bcd_DEFS) $(BASE_INCS) -Ibcd $(bcd_INCS) -c $< -o $@

bcd/%.i:	bcd/%.c
	$(CC) $(CFLAGS) $(bcd_CFLAGS) $(bcd_DEFS) $(BASE_INCS) -Ibcd $(bcd_INCS) -E $< -o $@

bcd/%.s:	bcd/%.c
	$(CC) $(CFLAGS) $(bcd_CFLAGS) $(bcd_DEFS) $(BASE_INCS) -Ibcd $(bcd_INCS) -S -fverbose-asm $< -o $@

bcd/%.d:	bcd/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(bcd_CFLAGS) $(bcd_DEFS) $(BASE_INCS) -Ibcd $(bcd_INCS)

include boggle/mkindex/Makefrag

boggle/mkindex/%.o:	boggle/mkindex/%.c
	gcc $(CFLAGS) $(boggle_mkindex_CFLAGS) $(boggle_mkindex_DEFS) $(BASE_INCS) -Iboggle/mkindex $(boggle_mkindex_INCS) -c $< -o $@

boggle/mkindex/%.i:	boggle/mkindex/%.c
	gcc $(CFLAGS) $(boggle_mkindex_CFLAGS) $(boggle_mkindex_DEFS) $(BASE_INCS) -Iboggle/mkindex $(boggle_mkindex_INCS) -E $< -o $@

boggle/mkindex/%.s:	boggle/mkindex/%.c
	gcc $(CFLAGS) $(boggle_mkindex_CFLAGS) $(boggle_mkindex_DEFS) $(BASE_INCS) -Iboggle/mkindex $(boggle_mkindex_INCS) -S -fverbose-asm $< -o $@

boggle/mkindex/%.d:	boggle/mkindex/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(boggle_mkindex_CFLAGS) $(boggle_mkindex_DEFS) $(BASE_INCS) -Iboggle/mkindex $(boggle_mkindex_INCS)

include boggle/boggle/Makefrag

boggle/boggle/%.o:	boggle/boggle/%.c
	$(CC) $(CFLAGS) $(boggle_boggle_CFLAGS) $(boggle_boggle_DEFS) $(BASE_INCS) -Iboggle/boggle $(boggle_boggle_INCS) -c $< -o $@

boggle/boggle/%.i:	boggle/boggle/%.c
	$(CC) $(CFLAGS) $(boggle_boggle_CFLAGS) $(boggle_boggle_DEFS) $(BASE_INCS) -Iboggle/boggle $(boggle_boggle_INCS) -E $< -o $@

boggle/boggle/%.s:	boggle/boggle/%.c
	$(CC) $(CFLAGS) $(boggle_boggle_CFLAGS) $(boggle_boggle_DEFS) $(BASE_INCS) -Iboggle/boggle $(boggle_boggle_INCS) -S -fverbose-asm $< -o $@

boggle/boggle/%.d:	boggle/boggle/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(boggle_boggle_CFLAGS) $(boggle_boggle_DEFS) $(BASE_INCS) -Iboggle/boggle $(boggle_boggle_INCS)

include boggle/mkdict/Makefrag

boggle/mkdict/%.o:	boggle/mkdict/%.c
	gcc $(CFLAGS) $(boggle_mkdict_CFLAGS) $(boggle_mkdict_DEFS) $(BASE_INCS) -Iboggle/mkdict $(boggle_mkdict_INCS) -c $< -o $@

boggle/mkdict/%.i:	boggle/mkdict/%.c
	gcc $(CFLAGS) $(boggle_mkdict_CFLAGS) $(boggle_mkdict_DEFS) $(BASE_INCS) -Iboggle/mkdict $(boggle_mkdict_INCS) -E $< -o $@

boggle/mkdict/%.s:	boggle/mkdict/%.c
	gcc $(CFLAGS) $(boggle_mkdict_CFLAGS) $(boggle_mkdict_DEFS) $(BASE_INCS) -Iboggle/mkdict $(boggle_mkdict_INCS) -S -fverbose-asm $< -o $@

boggle/mkdict/%.d:	boggle/mkdict/%.c
	./mkdep $< $@ gcc \  $(CFLAGS) $(boggle_mkdict_CFLAGS) $(boggle_mkdict_DEFS) $(BASE_INCS) -Iboggle/mkdict $(boggle_mkdict_INCS)

include boggle/Makefrag

boggle/%.o:	boggle/%.c
	$(CC) $(CFLAGS) $(boggle_CFLAGS) $(boggle_DEFS) $(BASE_INCS) -Iboggle $(boggle_INCS) -c $< -o $@

boggle/%.i:	boggle/%.c
	$(CC) $(CFLAGS) $(boggle_CFLAGS) $(boggle_DEFS) $(BASE_INCS) -Iboggle $(boggle_INCS) -E $< -o $@

boggle/%.s:	boggle/%.c
	$(CC) $(CFLAGS) $(boggle_CFLAGS) $(boggle_DEFS) $(BASE_INCS) -Iboggle $(boggle_INCS) -S -fverbose-asm $< -o $@

boggle/%.d:	boggle/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(boggle_CFLAGS) $(boggle_DEFS) $(BASE_INCS) -Iboggle $(boggle_INCS)

include caesar/Makefrag

caesar/%.o:	caesar/%.c
	$(CC) $(CFLAGS) $(caesar_CFLAGS) $(caesar_DEFS) $(BASE_INCS) -Icaesar $(caesar_INCS) -c $< -o $@

caesar/%.i:	caesar/%.c
	$(CC) $(CFLAGS) $(caesar_CFLAGS) $(caesar_DEFS) $(BASE_INCS) -Icaesar $(caesar_INCS) -E $< -o $@

caesar/%.s:	caesar/%.c
	$(CC) $(CFLAGS) $(caesar_CFLAGS) $(caesar_DEFS) $(BASE_INCS) -Icaesar $(caesar_INCS) -S -fverbose-asm $< -o $@

caesar/%.d:	caesar/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(caesar_CFLAGS) $(caesar_DEFS) $(BASE_INCS) -Icaesar $(caesar_INCS)

include canfield/cfscores/Makefrag

canfield/cfscores/%.o:	canfield/cfscores/%.c
	$(CC) $(CFLAGS) $(canfield_cfscores_CFLAGS) $(canfield_cfscores_DEFS) $(BASE_INCS) -Icanfield/cfscores $(canfield_cfscores_INCS) -c $< -o $@

canfield/cfscores/%.i:	canfield/cfscores/%.c
	$(CC) $(CFLAGS) $(canfield_cfscores_CFLAGS) $(canfield_cfscores_DEFS) $(BASE_INCS) -Icanfield/cfscores $(canfield_cfscores_INCS) -E $< -o $@

canfield/cfscores/%.s:	canfield/cfscores/%.c
	$(CC) $(CFLAGS) $(canfield_cfscores_CFLAGS) $(canfield_cfscores_DEFS) $(BASE_INCS) -Icanfield/cfscores $(canfield_cfscores_INCS) -S -fverbose-asm $< -o $@

canfield/cfscores/%.d:	canfield/cfscores/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(canfield_cfscores_CFLAGS) $(canfield_cfscores_DEFS) $(BASE_INCS) -Icanfield/cfscores $(canfield_cfscores_INCS)

include canfield/canfield/Makefrag

canfield/canfield/%.o:	canfield/canfield/%.c
	$(CC) $(CFLAGS) $(canfield_canfield_CFLAGS) $(canfield_canfield_DEFS) $(BASE_INCS) -Icanfield/canfield $(canfield_canfield_INCS) -c $< -o $@

canfield/canfield/%.i:	canfield/canfield/%.c
	$(CC) $(CFLAGS) $(canfield_canfield_CFLAGS) $(canfield_canfield_DEFS) $(BASE_INCS) -Icanfield/canfield $(canfield_canfield_INCS) -E $< -o $@

canfield/canfield/%.s:	canfield/canfield/%.c
	$(CC) $(CFLAGS) $(canfield_canfield_CFLAGS) $(canfield_canfield_DEFS) $(BASE_INCS) -Icanfield/canfield $(canfield_canfield_INCS) -S -fverbose-asm $< -o $@

canfield/canfield/%.d:	canfield/canfield/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(canfield_canfield_CFLAGS) $(canfield_canfield_DEFS) $(BASE_INCS) -Icanfield/canfield $(canfield_canfield_INCS)

include canfield/Makefrag

canfield/%.o:	canfield/%.c
	$(CC) $(CFLAGS) $(canfield_CFLAGS) $(canfield_DEFS) $(BASE_INCS) -Icanfield $(canfield_INCS) -c $< -o $@

canfield/%.i:	canfield/%.c
	$(CC) $(CFLAGS) $(canfield_CFLAGS) $(canfield_DEFS) $(BASE_INCS) -Icanfield $(canfield_INCS) -E $< -o $@

canfield/%.s:	canfield/%.c
	$(CC) $(CFLAGS) $(canfield_CFLAGS) $(canfield_DEFS) $(BASE_INCS) -Icanfield $(canfield_INCS) -S -fverbose-asm $< -o $@

canfield/%.d:	canfield/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(canfield_CFLAGS) $(canfield_DEFS) $(BASE_INCS) -Icanfield $(canfield_INCS)

include countmail/Makefrag

countmail/%.o:	countmail/%.c
	$(CC) $(CFLAGS) $(countmail_CFLAGS) $(countmail_DEFS) $(BASE_INCS) -Icountmail $(countmail_INCS) -c $< -o $@

countmail/%.i:	countmail/%.c
	$(CC) $(CFLAGS) $(countmail_CFLAGS) $(countmail_DEFS) $(BASE_INCS) -Icountmail $(countmail_INCS) -E $< -o $@

countmail/%.s:	countmail/%.c
	$(CC) $(CFLAGS) $(countmail_CFLAGS) $(countmail_DEFS) $(BASE_INCS) -Icountmail $(countmail_INCS) -S -fverbose-asm $< -o $@

countmail/%.d:	countmail/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(countmail_CFLAGS) $(countmail_DEFS) $(BASE_INCS) -Icountmail $(countmail_INCS)

include cribbage/Makefrag

cribbage/%.o:	cribbage/%.c
	$(CC) $(CFLAGS) $(cribbage_CFLAGS) $(cribbage_DEFS) $(BASE_INCS) -Icribbage $(cribbage_INCS) -c $< -o $@

cribbage/%.i:	cribbage/%.c
	$(CC) $(CFLAGS) $(cribbage_CFLAGS) $(cribbage_DEFS) $(BASE_INCS) -Icribbage $(cribbage_INCS) -E $< -o $@

cribbage/%.s:	cribbage/%.c
	$(CC) $(CFLAGS) $(cribbage_CFLAGS) $(cribbage_DEFS) $(BASE_INCS) -Icribbage $(cribbage_INCS) -S -fverbose-asm $< -o $@

cribbage/%.d:	cribbage/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(cribbage_CFLAGS) $(cribbage_DEFS) $(BASE_INCS) -Icribbage $(cribbage_INCS)

#include dab/Makefrag
#
#dab/%.o:	dab/%.cc
#	$(CXX) $(CXXFLAGS) $(dab_CXXFLAGS) $(dab_DEFS) $(BASE_INCS) -Idab $(dab_INCS) -c $< -o $@
#
#dab/%.ii:	dab/%.cc
#	$(CXX) $(CXXFLAGS) $(dab_CXXFLAGS) $(dab_DEFS) $(BASE_INCS) -Idab $(dab_INCS) -E $< -o $@
#
#dab/%.s:	dab/%.cc
#	$(CXX) $(CXXFLAGS) $(dab_CXXFLAGS) $(dab_DEFS) $(BASE_INCS) -Idab $(dab_INCS) -S -fverbose-asm $< -o $@
#
#dab/%.d:	dab/%.cc
#	./mkdep $< $@ $(CXX) $(CXXFLAGS) $(dab_CXXFLAGS) $(dab_DEFS) $(BASE_INCS) -Idab $(dab_INCS)

include fish/Makefrag

fish/%.o:	fish/%.c
	$(CC) $(CFLAGS) $(fish_CFLAGS) $(fish_DEFS) $(BASE_INCS) -Ifish $(fish_INCS) -c $< -o $@

fish/%.i:	fish/%.c
	$(CC) $(CFLAGS) $(fish_CFLAGS) $(fish_DEFS) $(BASE_INCS) -Ifish $(fish_INCS) -E $< -o $@

fish/%.s:	fish/%.c
	$(CC) $(CFLAGS) $(fish_CFLAGS) $(fish_DEFS) $(BASE_INCS) -Ifish $(fish_INCS) -S -fverbose-asm $< -o $@

fish/%.d:	fish/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(fish_CFLAGS) $(fish_DEFS) $(BASE_INCS) -Ifish $(fish_INCS)

include gomoku/Makefrag

gomoku/%.o:	gomoku/%.c
	$(CC) $(CFLAGS) $(gomoku_CFLAGS) $(gomoku_DEFS) $(BASE_INCS) -Igomoku $(gomoku_INCS) -c $< -o $@

gomoku/%.i:	gomoku/%.c
	$(CC) $(CFLAGS) $(gomoku_CFLAGS) $(gomoku_DEFS) $(BASE_INCS) -Igomoku $(gomoku_INCS) -E $< -o $@

gomoku/%.s:	gomoku/%.c
	$(CC) $(CFLAGS) $(gomoku_CFLAGS) $(gomoku_DEFS) $(BASE_INCS) -Igomoku $(gomoku_INCS) -S -fverbose-asm $< -o $@

gomoku/%.d:	gomoku/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(gomoku_CFLAGS) $(gomoku_DEFS) $(BASE_INCS) -Igomoku $(gomoku_INCS)

include hack/Makefrag

hack/%.o:	hack/%.c
	$(CC) $(CFLAGS) $(hack_CFLAGS) $(hack_DEFS) $(BASE_INCS) -Ihack $(hack_INCS) -c $< -o $@

hack/%.i:	hack/%.c
	$(CC) $(CFLAGS) $(hack_CFLAGS) $(hack_DEFS) $(BASE_INCS) -Ihack $(hack_INCS) -E $< -o $@

hack/%.s:	hack/%.c
	$(CC) $(CFLAGS) $(hack_CFLAGS) $(hack_DEFS) $(BASE_INCS) -Ihack $(hack_INCS) -S -fverbose-asm $< -o $@

hack/%.d:	hack/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hack_CFLAGS) $(hack_DEFS) $(BASE_INCS) -Ihack $(hack_INCS)

include hangman/Makefrag

hangman/%.o:	hangman/%.c
	$(CC) $(CFLAGS) $(hangman_CFLAGS) $(hangman_DEFS) $(BASE_INCS) -Ihangman $(hangman_INCS) -c $< -o $@

hangman/%.i:	hangman/%.c
	$(CC) $(CFLAGS) $(hangman_CFLAGS) $(hangman_DEFS) $(BASE_INCS) -Ihangman $(hangman_INCS) -E $< -o $@

hangman/%.s:	hangman/%.c
	$(CC) $(CFLAGS) $(hangman_CFLAGS) $(hangman_DEFS) $(BASE_INCS) -Ihangman $(hangman_INCS) -S -fverbose-asm $< -o $@

hangman/%.d:	hangman/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hangman_CFLAGS) $(hangman_DEFS) $(BASE_INCS) -Ihangman $(hangman_INCS)

#include hunt/hunt/Makefrag
#
#hunt/hunt/%.o:	hunt/hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -c $< -o $@
#
#hunt/hunt/%.i:	hunt/hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -E $< -o $@
#
#hunt/hunt/%.s:	hunt/hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -S -fverbose-asm $< -o $@
#
#hunt/hunt/%.d:	hunt/hunt/%.c
#	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS)
#
#include hunt/huntd/Makefrag
#
#hunt/huntd/%.o:	hunt/huntd/%.c
#	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -c $< -o $@
#
#hunt/huntd/%.i:	hunt/huntd/%.c
#	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -E $< -o $@
#
#hunt/huntd/%.s:	hunt/huntd/%.c
#	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -S -fverbose-asm $< -o $@
#
#hunt/huntd/%.d:	hunt/huntd/%.c
#	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS)
#
#include hunt/Makefrag
#
#hunt/%.o:	hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -c $< -o $@
#
#hunt/%.i:	hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -E $< -o $@
#
#hunt/%.s:	hunt/%.c
#	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -S -fverbose-asm $< -o $@
#
hunt/%.d:	hunt/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS)

include mille/Makefrag

mille/%.o:	mille/%.c
	$(CC) $(CFLAGS) $(mille_CFLAGS) $(mille_DEFS) $(BASE_INCS) -Imille $(mille_INCS) -c $< -o $@

mille/%.i:	mille/%.c
	$(CC) $(CFLAGS) $(mille_CFLAGS) $(mille_DEFS) $(BASE_INCS) -Imille $(mille_INCS) -E $< -o $@

mille/%.s:	mille/%.c
	$(CC) $(CFLAGS) $(mille_CFLAGS) $(mille_DEFS) $(BASE_INCS) -Imille $(mille_INCS) -S -fverbose-asm $< -o $@

mille/%.d:	mille/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(mille_CFLAGS) $(mille_DEFS) $(BASE_INCS) -Imille $(mille_INCS)

#include monop/Makefrag
#
#monop/%.o:	monop/%.c
#	$(CC) $(CFLAGS) $(monop_CFLAGS) $(monop_DEFS) $(BASE_INCS) -Imonop $(monop_INCS) -c $< -o $@
#
#monop/%.i:	monop/%.c
#	$(CC) $(CFLAGS) $(monop_CFLAGS) $(monop_DEFS) $(BASE_INCS) -Imonop $(monop_INCS) -E $< -o $@
#
#monop/%.s:	monop/%.c
#	$(CC) $(CFLAGS) $(monop_CFLAGS) $(monop_DEFS) $(BASE_INCS) -Imonop $(monop_INCS) -S -fverbose-asm $< -o $@
#
monop/%.d:	monop/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(monop_CFLAGS) $(monop_DEFS) $(BASE_INCS) -Imonop $(monop_INCS)

include morse/Makefrag

morse/%.o:	morse/%.c
	$(CC) $(CFLAGS) $(morse_CFLAGS) $(morse_DEFS) $(BASE_INCS) -Imorse $(morse_INCS) -c $< -o $@

morse/%.i:	morse/%.c
	$(CC) $(CFLAGS) $(morse_CFLAGS) $(morse_DEFS) $(BASE_INCS) -Imorse $(morse_INCS) -E $< -o $@

morse/%.s:	morse/%.c
	$(CC) $(CFLAGS) $(morse_CFLAGS) $(morse_DEFS) $(BASE_INCS) -Imorse $(morse_INCS) -S -fverbose-asm $< -o $@

morse/%.d:	morse/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(morse_CFLAGS) $(morse_DEFS) $(BASE_INCS) -Imorse $(morse_INCS)

include number/Makefrag

number/%.o:	number/%.c
	$(CC) $(CFLAGS) $(number_CFLAGS) $(number_DEFS) $(BASE_INCS) -Inumber $(number_INCS) -c $< -o $@

number/%.i:	number/%.c
	$(CC) $(CFLAGS) $(number_CFLAGS) $(number_DEFS) $(BASE_INCS) -Inumber $(number_INCS) -E $< -o $@

number/%.s:	number/%.c
	$(CC) $(CFLAGS) $(number_CFLAGS) $(number_DEFS) $(BASE_INCS) -Inumber $(number_INCS) -S -fverbose-asm $< -o $@

number/%.d:	number/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(number_CFLAGS) $(number_DEFS) $(BASE_INCS) -Inumber $(number_INCS)

#include phantasia/Makefrag
#
#phantasia/%.o:	phantasia/%.c
#	$(CC) $(CFLAGS) $(phantasia_CFLAGS) $(phantasia_DEFS) $(BASE_INCS) -Iphantasia $(phantasia_INCS) -c $< -o $@
#
#phantasia/%.i:	phantasia/%.c
#	$(CC) $(CFLAGS) $(phantasia_CFLAGS) $(phantasia_DEFS) $(BASE_INCS) -Iphantasia $(phantasia_INCS) -E $< -o $@
#
#phantasia/%.s:	phantasia/%.c
#	$(CC) $(CFLAGS) $(phantasia_CFLAGS) $(phantasia_DEFS) $(BASE_INCS) -Iphantasia $(phantasia_INCS) -S -fverbose-asm $< -o $@
#
#phantasia/%.d:	phantasia/%.c
#	./mkdep $< $@ $(CC) $(CFLAGS) $(phantasia_CFLAGS) $(phantasia_DEFS) $(BASE_INCS) -Iphantasia $(phantasia_INCS)

include pig/Makefrag

pig/%.o:	pig/%.c
	$(CC) $(CFLAGS) $(pig_CFLAGS) $(pig_DEFS) $(BASE_INCS) -Ipig $(pig_INCS) -c $< -o $@

pig/%.i:	pig/%.c
	$(CC) $(CFLAGS) $(pig_CFLAGS) $(pig_DEFS) $(BASE_INCS) -Ipig $(pig_INCS) -E $< -o $@

pig/%.s:	pig/%.c
	$(CC) $(CFLAGS) $(pig_CFLAGS) $(pig_DEFS) $(BASE_INCS) -Ipig $(pig_INCS) -S -fverbose-asm $< -o $@

pig/%.d:	pig/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(pig_CFLAGS) $(pig_DEFS) $(BASE_INCS) -Ipig $(pig_INCS)

include pom/Makefrag

pom/%.o:	pom/%.c
	$(CC) $(CFLAGS) $(pom_CFLAGS) $(pom_DEFS) $(BASE_INCS) -Ipom $(pom_INCS) -c $< -o $@

pom/%.i:	pom/%.c
	$(CC) $(CFLAGS) $(pom_CFLAGS) $(pom_DEFS) $(BASE_INCS) -Ipom $(pom_INCS) -E $< -o $@

pom/%.s:	pom/%.c
	$(CC) $(CFLAGS) $(pom_CFLAGS) $(pom_DEFS) $(BASE_INCS) -Ipom $(pom_INCS) -S -fverbose-asm $< -o $@

pom/%.d:	pom/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(pom_CFLAGS) $(pom_DEFS) $(BASE_INCS) -Ipom $(pom_INCS)

include ppt/Makefrag

ppt/%.o:	ppt/%.c
	$(CC) $(CFLAGS) $(ppt_CFLAGS) $(ppt_DEFS) $(BASE_INCS) -Ippt $(ppt_INCS) -c $< -o $@

ppt/%.i:	ppt/%.c
	$(CC) $(CFLAGS) $(ppt_CFLAGS) $(ppt_DEFS) $(BASE_INCS) -Ippt $(ppt_INCS) -E $< -o $@

ppt/%.s:	ppt/%.c
	$(CC) $(CFLAGS) $(ppt_CFLAGS) $(ppt_DEFS) $(BASE_INCS) -Ippt $(ppt_INCS) -S -fverbose-asm $< -o $@

ppt/%.d:	ppt/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(ppt_CFLAGS) $(ppt_DEFS) $(BASE_INCS) -Ippt $(ppt_INCS)

include primes/Makefrag

primes/%.o:	primes/%.c
	$(CC) $(CFLAGS) $(primes_CFLAGS) $(primes_DEFS) $(BASE_INCS) -Iprimes $(primes_INCS) -c $< -o $@

primes/%.i:	primes/%.c
	$(CC) $(CFLAGS) $(primes_CFLAGS) $(primes_DEFS) $(BASE_INCS) -Iprimes $(primes_INCS) -E $< -o $@

primes/%.s:	primes/%.c
	$(CC) $(CFLAGS) $(primes_CFLAGS) $(primes_DEFS) $(BASE_INCS) -Iprimes $(primes_INCS) -S -fverbose-asm $< -o $@

primes/%.d:	primes/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(primes_CFLAGS) $(primes_DEFS) $(BASE_INCS) -Iprimes $(primes_INCS)

include quiz/datfiles/Makefrag

quiz/datfiles/%.o:	quiz/datfiles/%.c
	$(CC) $(CFLAGS) $(quiz_datfiles_CFLAGS) $(quiz_datfiles_DEFS) $(BASE_INCS) -Iquiz/datfiles $(quiz_datfiles_INCS) -c $< -o $@

quiz/datfiles/%.i:	quiz/datfiles/%.c
	$(CC) $(CFLAGS) $(quiz_datfiles_CFLAGS) $(quiz_datfiles_DEFS) $(BASE_INCS) -Iquiz/datfiles $(quiz_datfiles_INCS) -E $< -o $@

quiz/datfiles/%.s:	quiz/datfiles/%.c
	$(CC) $(CFLAGS) $(quiz_datfiles_CFLAGS) $(quiz_datfiles_DEFS) $(BASE_INCS) -Iquiz/datfiles $(quiz_datfiles_INCS) -S -fverbose-asm $< -o $@

quiz/datfiles/%.d:	quiz/datfiles/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(quiz_datfiles_CFLAGS) $(quiz_datfiles_DEFS) $(BASE_INCS) -Iquiz/datfiles $(quiz_datfiles_INCS)

include quiz/Makefrag

quiz/%.o:	quiz/%.c
	$(CC) $(CFLAGS) $(quiz_CFLAGS) $(quiz_DEFS) $(BASE_INCS) -Iquiz $(quiz_INCS) -c $< -o $@

quiz/%.i:	quiz/%.c
	$(CC) $(CFLAGS) $(quiz_CFLAGS) $(quiz_DEFS) $(BASE_INCS) -Iquiz $(quiz_INCS) -E $< -o $@

quiz/%.s:	quiz/%.c
	$(CC) $(CFLAGS) $(quiz_CFLAGS) $(quiz_DEFS) $(BASE_INCS) -Iquiz $(quiz_INCS) -S -fverbose-asm $< -o $@

quiz/%.d:	quiz/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(quiz_CFLAGS) $(quiz_DEFS) $(BASE_INCS) -Iquiz $(quiz_INCS)

include rain/Makefrag

rain/%.o:	rain/%.c
	$(CC) $(CFLAGS) $(rain_CFLAGS) $(rain_DEFS) $(BASE_INCS) -Irain $(rain_INCS) -c $< -o $@

rain/%.i:	rain/%.c
	$(CC) $(CFLAGS) $(rain_CFLAGS) $(rain_DEFS) $(BASE_INCS) -Irain $(rain_INCS) -E $< -o $@

rain/%.s:	rain/%.c
	$(CC) $(CFLAGS) $(rain_CFLAGS) $(rain_DEFS) $(BASE_INCS) -Irain $(rain_INCS) -S -fverbose-asm $< -o $@

rain/%.d:	rain/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(rain_CFLAGS) $(rain_DEFS) $(BASE_INCS) -Irain $(rain_INCS)

include random/Makefrag

random/%.o:	random/%.c
	$(CC) $(CFLAGS) $(random_CFLAGS) $(random_DEFS) $(BASE_INCS) -Irandom $(random_INCS) -c $< -o $@

random/%.i:	random/%.c
	$(CC) $(CFLAGS) $(random_CFLAGS) $(random_DEFS) $(BASE_INCS) -Irandom $(random_INCS) -E $< -o $@

random/%.s:	random/%.c
	$(CC) $(CFLAGS) $(random_CFLAGS) $(random_DEFS) $(BASE_INCS) -Irandom $(random_INCS) -S -fverbose-asm $< -o $@

random/%.d:	random/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(random_CFLAGS) $(random_DEFS) $(BASE_INCS) -Irandom $(random_INCS)

include robots/Makefrag

robots/%.o:	robots/%.c
	$(CC) $(CFLAGS) $(robots_CFLAGS) $(robots_DEFS) $(BASE_INCS) -Irobots $(robots_INCS) -c $< -o $@

robots/%.i:	robots/%.c
	$(CC) $(CFLAGS) $(robots_CFLAGS) $(robots_DEFS) $(BASE_INCS) -Irobots $(robots_INCS) -E $< -o $@

robots/%.s:	robots/%.c
	$(CC) $(CFLAGS) $(robots_CFLAGS) $(robots_DEFS) $(BASE_INCS) -Irobots $(robots_INCS) -S -fverbose-asm $< -o $@

robots/%.d:	robots/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(robots_CFLAGS) $(robots_DEFS) $(BASE_INCS) -Irobots $(robots_INCS)

include sail/Makefrag

sail/%.o:	sail/%.c
	$(CC) $(CFLAGS) $(sail_CFLAGS) $(sail_DEFS) $(BASE_INCS) -Isail $(sail_INCS) -c $< -o $@

sail/%.i:	sail/%.c
	$(CC) $(CFLAGS) $(sail_CFLAGS) $(sail_DEFS) $(BASE_INCS) -Isail $(sail_INCS) -E $< -o $@

sail/%.s:	sail/%.c
	$(CC) $(CFLAGS) $(sail_CFLAGS) $(sail_DEFS) $(BASE_INCS) -Isail $(sail_INCS) -S -fverbose-asm $< -o $@

sail/%.d:	sail/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(sail_CFLAGS) $(sail_DEFS) $(BASE_INCS) -Isail $(sail_INCS)

include snake/snake/Makefrag

snake/snake/%.o:	snake/snake/%.c
	$(CC) $(CFLAGS) $(snake_snake_CFLAGS) $(snake_snake_DEFS) $(BASE_INCS) -Isnake/snake $(snake_snake_INCS) -c $< -o $@

snake/snake/%.i:	snake/snake/%.c
	$(CC) $(CFLAGS) $(snake_snake_CFLAGS) $(snake_snake_DEFS) $(BASE_INCS) -Isnake/snake $(snake_snake_INCS) -E $< -o $@

snake/snake/%.s:	snake/snake/%.c
	$(CC) $(CFLAGS) $(snake_snake_CFLAGS) $(snake_snake_DEFS) $(BASE_INCS) -Isnake/snake $(snake_snake_INCS) -S -fverbose-asm $< -o $@

snake/snake/%.d:	snake/snake/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(snake_snake_CFLAGS) $(snake_snake_DEFS) $(BASE_INCS) -Isnake/snake $(snake_snake_INCS)

include snake/snscore/Makefrag

snake/snscore/%.o:	snake/snscore/%.c
	$(CC) $(CFLAGS) $(snake_snscore_CFLAGS) $(snake_snscore_DEFS) $(BASE_INCS) -Isnake/snscore $(snake_snscore_INCS) -c $< -o $@

snake/snscore/%.i:	snake/snscore/%.c
	$(CC) $(CFLAGS) $(snake_snscore_CFLAGS) $(snake_snscore_DEFS) $(BASE_INCS) -Isnake/snscore $(snake_snscore_INCS) -E $< -o $@

snake/snscore/%.s:	snake/snscore/%.c
	$(CC) $(CFLAGS) $(snake_snscore_CFLAGS) $(snake_snscore_DEFS) $(BASE_INCS) -Isnake/snscore $(snake_snscore_INCS) -S -fverbose-asm $< -o $@

snake/snscore/%.d:	snake/snscore/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(snake_snscore_CFLAGS) $(snake_snscore_DEFS) $(BASE_INCS) -Isnake/snscore $(snake_snscore_INCS)

include snake/Makefrag

snake/%.o:	snake/%.c
	$(CC) $(CFLAGS) $(snake_CFLAGS) $(snake_DEFS) $(BASE_INCS) -Isnake $(snake_INCS) -c $< -o $@

snake/%.i:	snake/%.c
	$(CC) $(CFLAGS) $(snake_CFLAGS) $(snake_DEFS) $(BASE_INCS) -Isnake $(snake_INCS) -E $< -o $@

snake/%.s:	snake/%.c
	$(CC) $(CFLAGS) $(snake_CFLAGS) $(snake_DEFS) $(BASE_INCS) -Isnake $(snake_INCS) -S -fverbose-asm $< -o $@

snake/%.d:	snake/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(snake_CFLAGS) $(snake_DEFS) $(BASE_INCS) -Isnake $(snake_INCS)

include tetris/Makefrag

tetris/%.o:	tetris/%.c
	$(CC) $(CFLAGS) $(tetris_CFLAGS) $(tetris_DEFS) $(BASE_INCS) -Itetris $(tetris_INCS) -c $< -o $@

tetris/%.i:	tetris/%.c
	$(CC) $(CFLAGS) $(tetris_CFLAGS) $(tetris_DEFS) $(BASE_INCS) -Itetris $(tetris_INCS) -E $< -o $@

tetris/%.s:	tetris/%.c
	$(CC) $(CFLAGS) $(tetris_CFLAGS) $(tetris_DEFS) $(BASE_INCS) -Itetris $(tetris_INCS) -S -fverbose-asm $< -o $@

tetris/%.d:	tetris/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(tetris_CFLAGS) $(tetris_DEFS) $(BASE_INCS) -Itetris $(tetris_INCS)

include trek/Makefrag

trek/%.o:	trek/%.c
	$(CC) $(CFLAGS) $(trek_CFLAGS) $(trek_DEFS) $(BASE_INCS) -Itrek $(trek_INCS) -c $< -o $@

trek/%.i:	trek/%.c
	$(CC) $(CFLAGS) $(trek_CFLAGS) $(trek_DEFS) $(BASE_INCS) -Itrek $(trek_INCS) -E $< -o $@

trek/%.s:	trek/%.c
	$(CC) $(CFLAGS) $(trek_CFLAGS) $(trek_DEFS) $(BASE_INCS) -Itrek $(trek_INCS) -S -fverbose-asm $< -o $@

trek/%.d:	trek/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(trek_CFLAGS) $(trek_DEFS) $(BASE_INCS) -Itrek $(trek_INCS)

include wargames/Makefrag

wargames/%.o:	wargames/%.c
	$(CC) $(CFLAGS) $(wargames_CFLAGS) $(wargames_DEFS) $(BASE_INCS) -Iwargames $(wargames_INCS) -c $< -o $@

wargames/%.i:	wargames/%.c
	$(CC) $(CFLAGS) $(wargames_CFLAGS) $(wargames_DEFS) $(BASE_INCS) -Iwargames $(wargames_INCS) -E $< -o $@

wargames/%.s:	wargames/%.c
	$(CC) $(CFLAGS) $(wargames_CFLAGS) $(wargames_DEFS) $(BASE_INCS) -Iwargames $(wargames_INCS) -S -fverbose-asm $< -o $@

wargames/%.d:	wargames/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(wargames_CFLAGS) $(wargames_DEFS) $(BASE_INCS) -Iwargames $(wargames_INCS)

include worm/Makefrag

worm/%.o:	worm/%.c
	$(CC) $(CFLAGS) $(worm_CFLAGS) $(worm_DEFS) $(BASE_INCS) -Iworm $(worm_INCS) -c $< -o $@

worm/%.i:	worm/%.c
	$(CC) $(CFLAGS) $(worm_CFLAGS) $(worm_DEFS) $(BASE_INCS) -Iworm $(worm_INCS) -E $< -o $@

worm/%.s:	worm/%.c
	$(CC) $(CFLAGS) $(worm_CFLAGS) $(worm_DEFS) $(BASE_INCS) -Iworm $(worm_INCS) -S -fverbose-asm $< -o $@

worm/%.d:	worm/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(worm_CFLAGS) $(worm_DEFS) $(BASE_INCS) -Iworm $(worm_INCS)

include worms/Makefrag

worms/%.o:	worms/%.c
	$(CC) $(CFLAGS) $(worms_CFLAGS) $(worms_DEFS) $(BASE_INCS) -Iworms $(worms_INCS) -c $< -o $@

worms/%.i:	worms/%.c
	$(CC) $(CFLAGS) $(worms_CFLAGS) $(worms_DEFS) $(BASE_INCS) -Iworms $(worms_INCS) -E $< -o $@

worms/%.s:	worms/%.c
	$(CC) $(CFLAGS) $(worms_CFLAGS) $(worms_DEFS) $(BASE_INCS) -Iworms $(worms_INCS) -S -fverbose-asm $< -o $@

worms/%.d:	worms/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(worms_CFLAGS) $(worms_DEFS) $(BASE_INCS) -Iworms $(worms_INCS)

include wtf/Makefrag

wtf/%.o:	wtf/%.c
	$(CC) $(CFLAGS) $(wtf_CFLAGS) $(wtf_DEFS) $(BASE_INCS) -Iwtf $(wtf_INCS) -c $< -o $@

wtf/%.i:	wtf/%.c
	$(CC) $(CFLAGS) $(wtf_CFLAGS) $(wtf_DEFS) $(BASE_INCS) -Iwtf $(wtf_INCS) -E $< -o $@

wtf/%.s:	wtf/%.c
	$(CC) $(CFLAGS) $(wtf_CFLAGS) $(wtf_DEFS) $(BASE_INCS) -Iwtf $(wtf_INCS) -S -fverbose-asm $< -o $@

wtf/%.d:	wtf/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(wtf_CFLAGS) $(wtf_DEFS) $(BASE_INCS) -Iwtf $(wtf_INCS)

include wump/Makefrag

wump/%.o:	wump/%.c
	$(CC) $(CFLAGS) $(wump_CFLAGS) $(wump_DEFS) $(BASE_INCS) -Iwump $(wump_INCS) -c $< -o $@

wump/%.i:	wump/%.c
	$(CC) $(CFLAGS) $(wump_CFLAGS) $(wump_DEFS) $(BASE_INCS) -Iwump $(wump_INCS) -E $< -o $@

wump/%.s:	wump/%.c
	$(CC) $(CFLAGS) $(wump_CFLAGS) $(wump_DEFS) $(BASE_INCS) -Iwump $(wump_INCS) -S -fverbose-asm $< -o $@

wump/%.d:	wump/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(wump_CFLAGS) $(wump_DEFS) $(BASE_INCS) -Iwump $(wump_INCS)

include lib/Makefrag

lib/%.o:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -c $< -o $@

lib/%.i:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -E $< -o $@

lib/%.s:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -S -fverbose-asm $< -o $@

lib/%.d:	lib/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS)

ifneq ($(nodep),true)
include  adventure/crc.d adventure/data.d adventure/done.d adventure/init.d adventure/io.d adventure/main.d adventure/save.d adventure/subr.d adventure/vocab.d adventure/wizard.d
endif

adventure/adventure:	 adventure/crc.o adventure/data.o adventure/done.o adventure/init.o adventure/io.o adventure/main.o adventure/save.o adventure/subr.o adventure/vocab.o adventure/wizard.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  adventure/setup.d
endif

adventure/setup:	 adventure/setup.c
	gcc $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  arithmetic/arithmetic.d lib/getprogname.d
endif

arithmetic/arithmetic:	 arithmetic/arithmetic.o lib/getprogname.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

#ifneq ($(nodep),true)
#include  atc/extern.d atc/grammar.d atc/graphics.d atc/input.d atc/lex.d atc/list.d atc/log.d atc/main.d atc/tunable.d atc/update.d lib/strlcpy.d
#endif
#
#atc/atc:	 atc/extern.o atc/grammar.o atc/graphics.o atc/input.o atc/lex.o atc/list.o atc/log.o atc/main.o atc/tunable.o atc/update.o lib/strlcpy.o
#	$(CC) $(LDFLAGS) $^ -lm $(NCURSES_LIB) $(LEX_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  backgammon/backgammon/extra.d backgammon/backgammon/main.d backgammon/backgammon/move.d backgammon/backgammon/text.d backgammon/backgammon/version.d backgammon/common_source/allow.d backgammon/common_source/board.d backgammon/common_source/check.d backgammon/common_source/fancy.d backgammon/common_source/init.d backgammon/common_source/odds.d backgammon/common_source/one.d backgammon/common_source/save.d backgammon/common_source/subs.d backgammon/common_source/table.d
endif

backgammon/backgammon/backgammon:	 backgammon/backgammon/extra.o backgammon/backgammon/main.o backgammon/backgammon/move.o backgammon/backgammon/text.o backgammon/backgammon/version.o backgammon/common_source/allow.o backgammon/common_source/board.o backgammon/common_source/check.o backgammon/common_source/fancy.o backgammon/common_source/init.o backgammon/common_source/odds.o backgammon/common_source/one.o backgammon/common_source/save.o backgammon/common_source/subs.o backgammon/common_source/table.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  backgammon/teachgammon/data.d backgammon/teachgammon/teach.d backgammon/teachgammon/ttext1.d backgammon/teachgammon/ttext2.d backgammon/teachgammon/tutor.d
endif

backgammon/teachgammon/teachgammon:	 backgammon/teachgammon/data.o backgammon/teachgammon/teach.o backgammon/teachgammon/ttext1.o backgammon/teachgammon/ttext2.o backgammon/teachgammon/tutor.o backgammon/common_source/allow.o backgammon/common_source/board.o backgammon/common_source/check.o backgammon/common_source/fancy.o backgammon/common_source/init.o backgammon/common_source/one.o backgammon/common_source/save.o backgammon/common_source/subs.o backgammon/common_source/table.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  battlestar/battlestar.d battlestar/command1.d battlestar/command2.d battlestar/command3.d battlestar/command4.d battlestar/command5.d battlestar/command6.d battlestar/command7.d battlestar/cypher.d battlestar/dayfile.d battlestar/dayobjs.d battlestar/fly.d battlestar/getcom.d battlestar/globals.d battlestar/init.d battlestar/misc.d battlestar/nightfile.d battlestar/nightobjs.d battlestar/parse.d battlestar/room.d battlestar/save.d battlestar/words.d lib/fgetln.d
endif

battlestar/battlestar:	 battlestar/battlestar.o battlestar/command1.o battlestar/command2.o battlestar/command3.o battlestar/command4.o battlestar/command5.o battlestar/command6.o battlestar/command7.o battlestar/cypher.o battlestar/dayfile.o battlestar/dayobjs.o battlestar/fly.o battlestar/getcom.o battlestar/globals.o battlestar/init.o battlestar/misc.o battlestar/nightfile.o battlestar/nightobjs.o battlestar/parse.o battlestar/room.o battlestar/save.o battlestar/words.o lib/fgetln.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  bcd/bcd.d
endif

bcd/bcd:	 bcd/bcd.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  boggle/boggle/bog.d boggle/boggle/help.d boggle/boggle/mach.d boggle/boggle/prtable.d boggle/boggle/timer.d boggle/boggle/word.d
endif

boggle/boggle/boggle:	 boggle/boggle/bog.o boggle/boggle/help.o boggle/boggle/mach.o boggle/boggle/prtable.o boggle/boggle/timer.o boggle/boggle/word.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  boggle/mkdict/mkdict.d
endif

boggle/mkdict/mkdict:	 boggle/mkdict/mkdict.o
	gcc $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  boggle/mkindex/mkindex.d
endif

boggle/mkindex/mkindex:	 boggle/mkindex/mkindex.o
	gcc $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  caesar/caesar.d
endif

caesar/caesar:	 caesar/caesar.o
	$(CC) $(LDFLAGS) $^ -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  canfield/canfield/canfield.d
endif

canfield/canfield/canfield:	 canfield/canfield/canfield.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  canfield/cfscores/cfscores.d
endif

canfield/cfscores/cfscores:	 canfield/cfscores/cfscores.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  cribbage/cards.d cribbage/crib.d cribbage/extern.d cribbage/instr.d cribbage/io.d cribbage/score.d cribbage/support.d
endif

cribbage/cribbage:	 cribbage/cards.o cribbage/crib.o cribbage/extern.o cribbage/instr.o cribbage/io.o cribbage/score.o cribbage/support.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

#ifneq ($(nodep),true)
#include  dab/algor.d dab/board.d dab/box.d dab/gamescreen.d dab/human.d dab/main.d dab/player.d dab/random.d dab/ttyscrn.d
#endif
#
#dab/dab:	 dab/algor.o dab/board.o dab/box.o dab/gamescreen.o dab/human.o dab/main.o dab/player.o dab/random.o dab/ttyscrn.o
#	$(CXX) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  fish/fish.d
endif

fish/fish:	 fish/fish.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  gomoku/bdinit.d gomoku/bdisp.d gomoku/main.d gomoku/makemove.d gomoku/pickmove.d gomoku/stoc.d
endif

gomoku/gomoku:	 gomoku/bdinit.o gomoku/bdisp.o gomoku/main.o gomoku/makemove.o gomoku/pickmove.o gomoku/stoc.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  hack/alloc.d hack/hack.Decl.d hack/hack.apply.d hack/hack.bones.d hack/hack.d hack/hack.cmd.d hack/hack.do.d hack/hack.do_name.d hack/hack.do_wear.d hack/hack.dog.d hack/hack.eat.d hack/hack.end.d hack/hack.engrave.d hack/hack.fight.d hack/hack.invent.d hack/hack.ioctl.d hack/hack.lev.d hack/hack.main.d hack/hack.makemon.d hack/hack.mhitu.d hack/hack.mklev.d hack/hack.mkmaze.d hack/hack.mkobj.d hack/hack.mkshop.d hack/hack.mon.d hack/hack.monst.d hack/hack.o_init.d hack/hack.objnam.d hack/hack.options.d hack/hack.pager.d hack/hack.potion.d hack/hack.pri.d hack/hack.read.d hack/hack.rip.d hack/hack.rumors.d hack/hack.save.d hack/hack.search.d hack/hack.shk.d hack/hack.shknam.d hack/hack.steal.d hack/hack.termcap.d hack/hack.timeout.d hack/hack.topl.d hack/hack.track.d hack/hack.trap.d hack/hack.tty.d hack/hack.u_init.d hack/hack.unix.d hack/hack.vault.d hack/hack.version.d hack/hack.wield.d hack/hack.wizard.d hack/hack.worm.d hack/hack.worn.d hack/hack.zap.d hack/rnd.d
endif

hack/hack:	 hack/alloc.o hack/hack.Decl.o hack/hack.apply.o hack/hack.bones.o hack/hack.o hack/hack.cmd.o hack/hack.do.o hack/hack.do_name.o hack/hack.do_wear.o hack/hack.dog.o hack/hack.eat.o hack/hack.end.o hack/hack.engrave.o hack/hack.fight.o hack/hack.invent.o hack/hack.ioctl.o hack/hack.lev.o hack/hack.main.o hack/hack.makemon.o hack/hack.mhitu.o hack/hack.mklev.o hack/hack.mkmaze.o hack/hack.mkobj.o hack/hack.mkshop.o hack/hack.mon.o hack/hack.monst.o hack/hack.o_init.o hack/hack.objnam.o hack/hack.options.o hack/hack.pager.o hack/hack.potion.o hack/hack.pri.o hack/hack.read.o hack/hack.rip.o hack/hack.rumors.o hack/hack.save.o hack/hack.search.o hack/hack.shk.o hack/hack.shknam.o hack/hack.steal.o hack/hack.termcap.o hack/hack.timeout.o hack/hack.topl.o hack/hack.track.o hack/hack.trap.o hack/hack.tty.o hack/hack.u_init.o hack/hack.unix.o hack/hack.vault.o hack/hack.version.o hack/hack.wield.o hack/hack.wizard.o hack/hack.worm.o hack/hack.worn.o hack/hack.zap.o hack/rnd.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  hack/makedefs.d
endif

hack/makedefs:	 hack/makedefs.c
	gcc $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  hangman/endgame.d hangman/extern.d hangman/getguess.d hangman/getword.d hangman/main.d hangman/playgame.d hangman/prdata.d hangman/prman.d hangman/prword.d hangman/setup.d
endif

hangman/hangman:	 hangman/endgame.o hangman/extern.o hangman/getguess.o hangman/getword.o hangman/main.o hangman/playgame.o hangman/prdata.o hangman/prman.o hangman/prword.o hangman/setup.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

#ifneq ($(nodep),true)
#include  hunt/hunt/connect.d hunt/hunt/hunt.d hunt/hunt/otto.d hunt/hunt/playit.d hunt/huntd/pathname.d
#endif
#
#hunt/hunt/hunt:	 hunt/hunt/connect.o hunt/hunt/hunt.o hunt/hunt/otto.o hunt/hunt/playit.o hunt/huntd/pathname.o
#	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@
#
#ifneq ($(nodep),true)
#include  hunt/huntd/answer.d hunt/huntd/ctl.d hunt/huntd/ctl_transact.d hunt/huntd/draw.d hunt/huntd/driver.d hunt/huntd/execute.d hunt/huntd/expl.d hunt/huntd/extern.d hunt/huntd/faketalk.d hunt/huntd/get_names.d hunt/huntd/makemaze.d hunt/huntd/shots.d hunt/huntd/terminal.d
#endif
#
#hunt/huntd/huntd:	 hunt/huntd/answer.o hunt/huntd/ctl.o hunt/huntd/ctl_transact.o hunt/huntd/draw.o hunt/huntd/driver.o hunt/huntd/execute.o hunt/huntd/expl.o hunt/huntd/extern.o hunt/huntd/faketalk.o hunt/huntd/get_names.o hunt/huntd/makemaze.o hunt/huntd/pathname.o hunt/huntd/shots.o hunt/huntd/terminal.o
#	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  mille/comp.d mille/end.d mille/extern.d mille/init.d mille/mille.d mille/misc.d mille/move.d mille/print.d mille/roll.d mille/save.d mille/types.d mille/varpush.d
endif

mille/mille:	 mille/comp.o mille/end.o mille/extern.o mille/init.o mille/mille.o mille/misc.o mille/move.o mille/print.o mille/roll.o mille/save.o mille/types.o mille/varpush.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  monop/cards.d monop/execute.d monop/getinp.d monop/houses.d monop/jail.d monop/misc.d monop/monop.d monop/morg.d monop/print.d monop/prop.d monop/rent.d monop/roll.d monop/spec.d monop/trade.d
endif

monop/monop:	 monop/cards.o monop/execute.o monop/getinp.o monop/houses.o monop/jail.o monop/misc.o monop/monop.o monop/morg.o monop/print.o monop/prop.o monop/rent.o monop/roll.o monop/spec.o monop/trade.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  monop/initdeck.d
endif

monop/initdeck:	 monop/initdeck.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  morse/morse.d
endif

morse/morse:	 morse/morse.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  number/number.d
endif

number/number:	 number/number.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

#ifneq ($(nodep),true)
#include  phantasia/fight.d phantasia/gamesupport.d phantasia/interplayer.d phantasia/io.d phantasia/main.d phantasia/misc.d phantasia/phantglobs.d
#endif
#
#phantasia/phantasia:	 phantasia/fight.o phantasia/gamesupport.o phantasia/interplayer.o phantasia/io.o phantasia/main.o phantasia/misc.o phantasia/phantglobs.o
#	$(CC) $(LDFLAGS) $^ -lm $(NCURSES_LIB) $(BASE_LIBS) -o $@
#
#ifneq ($(nodep),true)
#include  phantasia/setup.d
#endif
#
#phantasia/setup:	 phantasia/phantglobs.o phantasia/setup.o
#	$(CC) $(LDFLAGS) $^ -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  pig/pig.d
endif

pig/pig:	 pig/pig.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  pom/pom.d
endif

pom/pom:	 pom/pom.o
	$(CC) $(LDFLAGS) $^ -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  ppt/ppt.d
endif

ppt/ppt:	 ppt/ppt.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  primes/pattern.d primes/pr_tbl.d primes/primes.d
endif

primes/primes:	 primes/pattern.o primes/pr_tbl.o primes/primes.o
	$(CC) $(LDFLAGS) $^ -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  quiz/quiz.d quiz/rxp.d
endif

quiz/quiz:	 quiz/quiz.o quiz/rxp.o lib/fgetln.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  rain/rain.d
endif

rain/rain:	 rain/rain.o lib/getprogname.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  random/random.d
endif

random/random:	 random/random.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  robots/auto.d robots/extern.d robots/flush_in.d robots/init_field.d robots/main.d robots/make_level.d robots/move.d robots/move_robs.d robots/play_level.d robots/query.d robots/rnd_pos.d robots/score.d
endif

robots/robots:	 robots/auto.o robots/extern.o robots/flush_in.o robots/init_field.o robots/main.o robots/make_level.o robots/move.o robots/move_robs.o robots/play_level.o robots/query.o robots/rnd_pos.o robots/score.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  sail/assorted.d sail/game.d sail/globals.d sail/dr_1.d sail/dr_2.d sail/dr_3.d sail/dr_4.d sail/dr_5.d sail/dr_main.d sail/lo_main.d sail/main.d sail/misc.d sail/parties.d sail/pl_1.d sail/pl_2.d sail/pl_3.d sail/pl_4.d sail/pl_5.d sail/pl_6.d sail/pl_7.d sail/pl_main.d sail/sync.d sail/version.d
endif

sail/sail:	 sail/assorted.o sail/game.o sail/globals.o sail/dr_1.o sail/dr_2.o sail/dr_3.o sail/dr_4.o sail/dr_5.o sail/dr_main.o sail/lo_main.o sail/main.o sail/misc.o sail/parties.o sail/pl_1.o sail/pl_2.o sail/pl_3.o sail/pl_4.o sail/pl_5.o sail/pl_6.o sail/pl_7.o sail/pl_main.o sail/sync.o sail/version.o lib/strlcpy.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  snake/snake/snake.d
endif

snake/snake/snake:	 snake/snake/snake.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  snake/snscore/snscore.d
endif

snake/snscore/snscore:	 snake/snscore/snscore.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  tetris/input.d tetris/scores.d tetris/screen.d tetris/shapes.d tetris/tetris.d
endif

tetris/tetris:	 tetris/input.o tetris/scores.o tetris/screen.o tetris/shapes.o tetris/tetris.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  trek/abandon.d trek/attack.d trek/autover.d trek/capture.d trek/cgetc.d trek/check_out.d trek/checkcond.d trek/compkl.d trek/computer.d trek/damage.d trek/damaged.d trek/dcrept.d trek/destruct.d trek/dock.d trek/dumpgame.d trek/dumpme.d trek/dumpssradio.d trek/events.d trek/externs.d trek/getcodi.d trek/getpar.d trek/help.d trek/impulse.d trek/initquad.d trek/kill.d trek/klmove.d trek/lose.d trek/lrscan.d trek/main.d trek/move.d trek/nova.d trek/out.d trek/phaser.d trek/play.d trek/ram.d trek/ranf.d trek/rest.d trek/schedule.d trek/score.d trek/setup.d trek/setwarp.d trek/shield.d trek/snova.d trek/srscan.d trek/systemname.d trek/torped.d trek/visual.d trek/warp.d trek/win.d
endif

trek/trek:	 trek/abandon.o trek/attack.o trek/autover.o trek/capture.o trek/cgetc.o trek/check_out.o trek/checkcond.o trek/compkl.o trek/computer.o trek/damage.o trek/damaged.o trek/dcrept.o trek/destruct.o trek/dock.o trek/dumpgame.o trek/dumpme.o trek/dumpssradio.o trek/events.o trek/externs.o trek/getcodi.o trek/getpar.o trek/help.o trek/impulse.o trek/initquad.o trek/kill.o trek/klmove.o trek/lose.o trek/lrscan.o trek/main.o trek/move.o trek/nova.o trek/out.o trek/phaser.o trek/play.o trek/ram.o trek/ranf.o trek/rest.o trek/schedule.o trek/score.o trek/setup.o trek/setwarp.o trek/shield.o trek/snova.o trek/srscan.o trek/systemname.o trek/torped.o trek/visual.o trek/warp.o trek/win.o
	$(CC) $(LDFLAGS) $^ -lm $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  worm/worm.d
endif

worm/worm:	 worm/worm.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  worms/worms.d
endif

worms/worms:	 worms/worms.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  wump/wump.d
endif

wump/wump:	 wump/wump.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@

.PHONY:	adventure_clean
adventure_clean:
	cd adventure && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  adventure setup $(adventure_CLEANFILES)

.PHONY:	adventure_install adventure_install-strip adventure_installdirs
adventure_install:	adventure_installdirs

adventure_install-strip:
	$(MAKE) adventure_install $(DEFS_TO_PASS_STRIP)

adventure_installdirs:
	set -e; for d in $(adventure_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	arithmetic_clean
arithmetic_clean:
	cd arithmetic && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  arithmetic $(arithmetic_CLEANFILES)

.PHONY:	arithmetic_install arithmetic_install-strip arithmetic_installdirs
arithmetic_install:	arithmetic_installdirs

arithmetic_install-strip:
	$(MAKE) arithmetic_install $(DEFS_TO_PASS_STRIP)

arithmetic_installdirs:
	set -e; for d in $(arithmetic_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

#.PHONY:	atc_games_clean
#atc_games_clean:
#	cd atc/games && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(atc_games_CLEANFILES)
#
#.PHONY:	atc_games_install atc_games_install-strip atc_games_installdirs
#atc_games_install:	atc_games_installdirs
#
#atc_games_install-strip:
#	$(MAKE) atc_games_install $(DEFS_TO_PASS_STRIP)
#
#atc_games_installdirs:
#	set -e; for d in $(atc_games_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done
#
#.PHONY:	atc_clean
#atc_clean:
#	cd atc && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  atc $(atc_CLEANFILES)
#
#.PHONY:	atc_install atc_install-strip atc_installdirs
#atc_install:	atc_installdirs
#
#atc_install-strip:
#	$(MAKE) atc_install $(DEFS_TO_PASS_STRIP)
#
#atc_installdirs:
#	set -e; for d in $(atc_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	backgammon_teachgammon_clean
backgammon_teachgammon_clean:
	cd backgammon/teachgammon && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  teachgammon $(backgammon_teachgammon_CLEANFILES)

.PHONY:	backgammon_teachgammon_install backgammon_teachgammon_install-strip backgammon_teachgammon_installdirs
backgammon_teachgammon_install:	backgammon_teachgammon_installdirs

backgammon_teachgammon_install-strip:
	$(MAKE) backgammon_teachgammon_install $(DEFS_TO_PASS_STRIP)

backgammon_teachgammon_installdirs:
	set -e; for d in $(backgammon_teachgammon_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	backgammon_backgammon_clean
backgammon_backgammon_clean:
	cd backgammon/backgammon && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  backgammon $(backgammon_backgammon_CLEANFILES)

.PHONY:	backgammon_backgammon_install backgammon_backgammon_install-strip backgammon_backgammon_installdirs
backgammon_backgammon_install:	backgammon_backgammon_installdirs

backgammon_backgammon_install-strip:
	$(MAKE) backgammon_backgammon_install $(DEFS_TO_PASS_STRIP)

backgammon_backgammon_installdirs:
	set -e; for d in $(backgammon_backgammon_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	backgammon_common_source_clean
backgammon_common_source_clean:
	cd backgammon/common_source && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(backgammon_common_source_CLEANFILES)

.PHONY:	backgammon_common_source_install backgammon_common_source_install-strip backgammon_common_source_installdirs
backgammon_common_source_install:	backgammon_common_source_installdirs

backgammon_common_source_install-strip:
	$(MAKE) backgammon_common_source_install $(DEFS_TO_PASS_STRIP)

backgammon_common_source_installdirs:
	set -e; for d in $(backgammon_common_source_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	backgammon_clean
backgammon_clean:
	cd backgammon && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(backgammon_CLEANFILES)

.PHONY:	backgammon_install backgammon_install-strip backgammon_installdirs
backgammon_install:	backgammon_installdirs

backgammon_install-strip:
	$(MAKE) backgammon_install $(DEFS_TO_PASS_STRIP)

backgammon_installdirs:
	set -e; for d in $(backgammon_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	battlestar_clean
battlestar_clean:
	cd battlestar && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  battlestar $(battlestar_CLEANFILES)

.PHONY:	battlestar_install battlestar_install-strip battlestar_installdirs
battlestar_install:	battlestar_installdirs

battlestar_install-strip:
	$(MAKE) battlestar_install $(DEFS_TO_PASS_STRIP)

battlestar_installdirs:
	set -e; for d in $(battlestar_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	bcd_clean
bcd_clean:
	cd bcd && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  bcd $(bcd_CLEANFILES)

.PHONY:	bcd_install bcd_install-strip bcd_installdirs
bcd_install:	bcd_installdirs

bcd_install-strip:
	$(MAKE) bcd_install $(DEFS_TO_PASS_STRIP)

bcd_installdirs:
	set -e; for d in $(bcd_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	boggle_mkindex_clean
boggle_mkindex_clean:
	cd boggle/mkindex && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  mkindex $(boggle_mkindex_CLEANFILES)

.PHONY:	boggle_mkindex_install boggle_mkindex_install-strip boggle_mkindex_installdirs
boggle_mkindex_install:	boggle_mkindex_installdirs

boggle_mkindex_install-strip:
	$(MAKE) boggle_mkindex_install $(DEFS_TO_PASS_STRIP)

boggle_mkindex_installdirs:
	set -e; for d in $(boggle_mkindex_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	boggle_boggle_clean
boggle_boggle_clean:
	cd boggle/boggle && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  boggle $(boggle_boggle_CLEANFILES)

.PHONY:	boggle_boggle_install boggle_boggle_install-strip boggle_boggle_installdirs
boggle_boggle_install:	boggle_boggle_installdirs

boggle_boggle_install-strip:
	$(MAKE) boggle_boggle_install $(DEFS_TO_PASS_STRIP)

boggle_boggle_installdirs:
	set -e; for d in $(boggle_boggle_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	boggle_mkdict_clean
boggle_mkdict_clean:
	cd boggle/mkdict && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  mkdict $(boggle_mkdict_CLEANFILES)

.PHONY:	boggle_mkdict_install boggle_mkdict_install-strip boggle_mkdict_installdirs
boggle_mkdict_install:	boggle_mkdict_installdirs

boggle_mkdict_install-strip:
	$(MAKE) boggle_mkdict_install $(DEFS_TO_PASS_STRIP)

boggle_mkdict_installdirs:
	set -e; for d in $(boggle_mkdict_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	boggle_clean
boggle_clean:
	cd boggle && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(boggle_CLEANFILES)

.PHONY:	boggle_install boggle_install-strip boggle_installdirs
boggle_install:	boggle_installdirs

boggle_install-strip:
	$(MAKE) boggle_install $(DEFS_TO_PASS_STRIP)

boggle_installdirs:
	set -e; for d in $(boggle_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	caesar_clean
caesar_clean:
	cd caesar && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  caesar $(caesar_CLEANFILES)

.PHONY:	caesar_install caesar_install-strip caesar_installdirs
caesar_install:	caesar_installdirs

caesar_install-strip:
	$(MAKE) caesar_install $(DEFS_TO_PASS_STRIP)

caesar_installdirs:
	set -e; for d in $(caesar_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	canfield_cfscores_clean
canfield_cfscores_clean:
	cd canfield/cfscores && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  cfscores $(canfield_cfscores_CLEANFILES)

.PHONY:	canfield_cfscores_install canfield_cfscores_install-strip canfield_cfscores_installdirs
canfield_cfscores_install:	canfield_cfscores_installdirs

canfield_cfscores_install-strip:
	$(MAKE) canfield_cfscores_install $(DEFS_TO_PASS_STRIP)

canfield_cfscores_installdirs:
	set -e; for d in $(canfield_cfscores_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	canfield_canfield_clean
canfield_canfield_clean:
	cd canfield/canfield && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  canfield $(canfield_canfield_CLEANFILES)

.PHONY:	canfield_canfield_install canfield_canfield_install-strip canfield_canfield_installdirs
canfield_canfield_install:	canfield_canfield_installdirs

canfield_canfield_install-strip:
	$(MAKE) canfield_canfield_install $(DEFS_TO_PASS_STRIP)

canfield_canfield_installdirs:
	set -e; for d in $(canfield_canfield_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	canfield_clean
canfield_clean:
	cd canfield && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(canfield_CLEANFILES)

.PHONY:	canfield_install canfield_install-strip canfield_installdirs
canfield_install:	canfield_installdirs

canfield_install-strip:
	$(MAKE) canfield_install $(DEFS_TO_PASS_STRIP)

canfield_installdirs:
	set -e; for d in $(canfield_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	countmail_clean
countmail_clean:
	cd countmail && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(countmail_CLEANFILES)

.PHONY:	countmail_install countmail_install-strip countmail_installdirs
countmail_install:	countmail_installdirs

countmail_install-strip:
	$(MAKE) countmail_install $(DEFS_TO_PASS_STRIP)

countmail_installdirs:
	set -e; for d in $(countmail_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	cribbage_clean
cribbage_clean:
	cd cribbage && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  cribbage $(cribbage_CLEANFILES)

.PHONY:	cribbage_install cribbage_install-strip cribbage_installdirs
cribbage_install:	cribbage_installdirs

cribbage_install-strip:
	$(MAKE) cribbage_install $(DEFS_TO_PASS_STRIP)

cribbage_installdirs:
	set -e; for d in $(cribbage_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

#.PHONY:	dab_clean
#dab_clean:
#	cd dab && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  dab $(dab_CLEANFILES)
#
#.PHONY:	dab_install dab_install-strip dab_installdirs
#dab_install:	dab_installdirs
#
#dab_install-strip:
#	$(MAKE) dab_install $(DEFS_TO_PASS_STRIP)
#
#dab_installdirs:
#	set -e; for d in $(dab_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	fish_clean
fish_clean:
	cd fish && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  fish $(fish_CLEANFILES)

.PHONY:	fish_install fish_install-strip fish_installdirs
fish_install:	fish_installdirs

fish_install-strip:
	$(MAKE) fish_install $(DEFS_TO_PASS_STRIP)

fish_installdirs:
	set -e; for d in $(fish_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	gomoku_clean
gomoku_clean:
	cd gomoku && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  gomoku $(gomoku_CLEANFILES)

.PHONY:	gomoku_install gomoku_install-strip gomoku_installdirs
gomoku_install:	gomoku_installdirs

gomoku_install-strip:
	$(MAKE) gomoku_install $(DEFS_TO_PASS_STRIP)

gomoku_installdirs:
	set -e; for d in $(gomoku_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	hack_clean
hack_clean:
	cd hack && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  hack makedefs $(hack_CLEANFILES)

.PHONY:	hack_install hack_install-strip hack_installdirs
hack_install:	hack_installdirs

hack_install-strip:
	$(MAKE) hack_install $(DEFS_TO_PASS_STRIP)

hack_installdirs:
	set -e; for d in $(hack_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	hangman_clean
hangman_clean:
	cd hangman && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  hangman $(hangman_CLEANFILES)

.PHONY:	hangman_install hangman_install-strip hangman_installdirs
hangman_install:	hangman_installdirs

hangman_install-strip:
	$(MAKE) hangman_install $(DEFS_TO_PASS_STRIP)

hangman_installdirs:
	set -e; for d in $(hangman_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

#.PHONY:	hunt_hunt_clean
#hunt_hunt_clean:
#	cd hunt/hunt && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  hunt $(hunt_hunt_CLEANFILES)
#
#.PHONY:	hunt_hunt_install hunt_hunt_install-strip hunt_hunt_installdirs
#hunt_hunt_install:	hunt_hunt_installdirs
#
#hunt_hunt_install-strip:
#	$(MAKE) hunt_hunt_install $(DEFS_TO_PASS_STRIP)
#
#hunt_hunt_installdirs:
#	set -e; for d in $(hunt_hunt_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done
#
#.PHONY:	hunt_huntd_clean
#hunt_huntd_clean:
#	cd hunt/huntd && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  huntd $(hunt_huntd_CLEANFILES)
#
#.PHONY:	hunt_huntd_install hunt_huntd_install-strip hunt_huntd_installdirs
#hunt_huntd_install:	hunt_huntd_installdirs
#
#hunt_huntd_install-strip:
#	$(MAKE) hunt_huntd_install $(DEFS_TO_PASS_STRIP)
#
#hunt_huntd_installdirs:
#	set -e; for d in $(hunt_huntd_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done
#
#.PHONY:	hunt_clean
#hunt_clean:
#	cd hunt && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(hunt_CLEANFILES)
#
#.PHONY:	hunt_install hunt_install-strip hunt_installdirs
#hunt_install:	hunt_installdirs
#
#hunt_install-strip:
#	$(MAKE) hunt_install $(DEFS_TO_PASS_STRIP)
#
#hunt_installdirs:
#	set -e; for d in $(hunt_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	mille_clean
mille_clean:
	cd mille && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  mille $(mille_CLEANFILES)

.PHONY:	mille_install mille_install-strip mille_installdirs
mille_install:	mille_installdirs

mille_install-strip:
	$(MAKE) mille_install $(DEFS_TO_PASS_STRIP)

mille_installdirs:
	set -e; for d in $(mille_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	monop_clean
monop_clean:
	cd monop && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  monop initdeck $(monop_CLEANFILES)

.PHONY:	monop_install monop_install-strip monop_installdirs
monop_install:	monop_installdirs

monop_install-strip:
	$(MAKE) monop_install $(DEFS_TO_PASS_STRIP)

monop_installdirs:
	set -e; for d in $(monop_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	morse_clean
morse_clean:
	cd morse && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  morse $(morse_CLEANFILES)

.PHONY:	morse_install morse_install-strip morse_installdirs
morse_install:	morse_installdirs

morse_install-strip:
	$(MAKE) morse_install $(DEFS_TO_PASS_STRIP)

morse_installdirs:
	set -e; for d in $(morse_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	number_clean
number_clean:
	cd number && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  number $(number_CLEANFILES)

.PHONY:	number_install number_install-strip number_installdirs
number_install:	number_installdirs

number_install-strip:
	$(MAKE) number_install $(DEFS_TO_PASS_STRIP)

number_installdirs:
	set -e; for d in $(number_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

#.PHONY:	phantasia_clean
#phantasia_clean:
#	cd phantasia && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  phantasia setup $(phantasia_CLEANFILES)
#
#.PHONY:	phantasia_install phantasia_install-strip phantasia_installdirs
#phantasia_install:	phantasia_installdirs
#
#phantasia_install-strip:
#	$(MAKE) phantasia_install $(DEFS_TO_PASS_STRIP)
#
#phantasia_installdirs:
#	set -e; for d in $(phantasia_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	pig_clean
pig_clean:
	cd pig && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  pig $(pig_CLEANFILES)

.PHONY:	pig_install pig_install-strip pig_installdirs
pig_install:	pig_installdirs

pig_install-strip:
	$(MAKE) pig_install $(DEFS_TO_PASS_STRIP)

pig_installdirs:
	set -e; for d in $(pig_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	pom_clean
pom_clean:
	cd pom && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  pom $(pom_CLEANFILES)

.PHONY:	pom_install pom_install-strip pom_installdirs
pom_install:	pom_installdirs

pom_install-strip:
	$(MAKE) pom_install $(DEFS_TO_PASS_STRIP)

pom_installdirs:
	set -e; for d in $(pom_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	ppt_clean
ppt_clean:
	cd ppt && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  ppt $(ppt_CLEANFILES)

.PHONY:	ppt_install ppt_install-strip ppt_installdirs
ppt_install:	ppt_installdirs

ppt_install-strip:
	$(MAKE) ppt_install $(DEFS_TO_PASS_STRIP)

ppt_installdirs:
	set -e; for d in $(ppt_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	primes_clean
primes_clean:
	cd primes && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  primes $(primes_CLEANFILES)

.PHONY:	primes_install primes_install-strip primes_installdirs
primes_install:	primes_installdirs

primes_install-strip:
	$(MAKE) primes_install $(DEFS_TO_PASS_STRIP)

primes_installdirs:
	set -e; for d in $(primes_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	quiz_datfiles_clean
quiz_datfiles_clean:
	cd quiz/datfiles && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(quiz_datfiles_CLEANFILES)

.PHONY:	quiz_datfiles_install quiz_datfiles_install-strip quiz_datfiles_installdirs
quiz_datfiles_install:	quiz_datfiles_installdirs

quiz_datfiles_install-strip:
	$(MAKE) quiz_datfiles_install $(DEFS_TO_PASS_STRIP)

quiz_datfiles_installdirs:
	set -e; for d in $(quiz_datfiles_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	quiz_clean
quiz_clean:
	cd quiz && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  quiz $(quiz_CLEANFILES)

.PHONY:	quiz_install quiz_install-strip quiz_installdirs
quiz_install:	quiz_installdirs

quiz_install-strip:
	$(MAKE) quiz_install $(DEFS_TO_PASS_STRIP)

quiz_installdirs:
	set -e; for d in $(quiz_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	rain_clean
rain_clean:
	cd rain && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  rain $(rain_CLEANFILES)

.PHONY:	rain_install rain_install-strip rain_installdirs
rain_install:	rain_installdirs

rain_install-strip:
	$(MAKE) rain_install $(DEFS_TO_PASS_STRIP)

rain_installdirs:
	set -e; for d in $(rain_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	random_clean
random_clean:
	cd random && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  random $(random_CLEANFILES)

.PHONY:	random_install random_install-strip random_installdirs
random_install:	random_installdirs

random_install-strip:
	$(MAKE) random_install $(DEFS_TO_PASS_STRIP)

random_installdirs:
	set -e; for d in $(random_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	robots_clean
robots_clean:
	cd robots && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  robots $(robots_CLEANFILES)

.PHONY:	robots_install robots_install-strip robots_installdirs
robots_install:	robots_installdirs

robots_install-strip:
	$(MAKE) robots_install $(DEFS_TO_PASS_STRIP)

robots_installdirs:
	set -e; for d in $(robots_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	sail_clean
sail_clean:
	cd sail && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  sail $(sail_CLEANFILES)

.PHONY:	sail_install sail_install-strip sail_installdirs
sail_install:	sail_installdirs

sail_install-strip:
	$(MAKE) sail_install $(DEFS_TO_PASS_STRIP)

sail_installdirs:
	set -e; for d in $(sail_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	snake_snake_clean
snake_snake_clean:
	cd snake/snake && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  snake $(snake_snake_CLEANFILES)

.PHONY:	snake_snake_install snake_snake_install-strip snake_snake_installdirs
snake_snake_install:	snake_snake_installdirs

snake_snake_install-strip:
	$(MAKE) snake_snake_install $(DEFS_TO_PASS_STRIP)

snake_snake_installdirs:
	set -e; for d in $(snake_snake_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	snake_snscore_clean
snake_snscore_clean:
	cd snake/snscore && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  snscore $(snake_snscore_CLEANFILES)

.PHONY:	snake_snscore_install snake_snscore_install-strip snake_snscore_installdirs
snake_snscore_install:	snake_snscore_installdirs

snake_snscore_install-strip:
	$(MAKE) snake_snscore_install $(DEFS_TO_PASS_STRIP)

snake_snscore_installdirs:
	set -e; for d in $(snake_snscore_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	snake_clean
snake_clean:
	cd snake && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(snake_CLEANFILES)

.PHONY:	snake_install snake_install-strip snake_installdirs
snake_install:	snake_installdirs

snake_install-strip:
	$(MAKE) snake_install $(DEFS_TO_PASS_STRIP)

snake_installdirs:
	set -e; for d in $(snake_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	tetris_clean
tetris_clean:
	cd tetris && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  tetris $(tetris_CLEANFILES)

.PHONY:	tetris_install tetris_install-strip tetris_installdirs
tetris_install:	tetris_installdirs

tetris_install-strip:
	$(MAKE) tetris_install $(DEFS_TO_PASS_STRIP)

tetris_installdirs:
	set -e; for d in $(tetris_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	trek_clean
trek_clean:
	cd trek && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  trek $(trek_CLEANFILES)

.PHONY:	trek_install trek_install-strip trek_installdirs
trek_install:	trek_installdirs

trek_install-strip:
	$(MAKE) trek_install $(DEFS_TO_PASS_STRIP)

trek_installdirs:
	set -e; for d in $(trek_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	wargames_clean
wargames_clean:
	cd wargames && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(wargames_CLEANFILES)

.PHONY:	wargames_install wargames_install-strip wargames_installdirs
wargames_install:	wargames_installdirs

wargames_install-strip:
	$(MAKE) wargames_install $(DEFS_TO_PASS_STRIP)

wargames_installdirs:
	set -e; for d in $(wargames_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	worm_clean
worm_clean:
	cd worm && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  worm $(worm_CLEANFILES)

.PHONY:	worm_install worm_install-strip worm_installdirs
worm_install:	worm_installdirs

worm_install-strip:
	$(MAKE) worm_install $(DEFS_TO_PASS_STRIP)

worm_installdirs:
	set -e; for d in $(worm_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	worms_clean
worms_clean:
	cd worms && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  worms $(worms_CLEANFILES)

.PHONY:	worms_install worms_install-strip worms_installdirs
worms_install:	worms_installdirs

worms_install-strip:
	$(MAKE) worms_install $(DEFS_TO_PASS_STRIP)

worms_installdirs:
	set -e; for d in $(worms_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	wtf_clean
wtf_clean:
	cd wtf && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(wtf_CLEANFILES)

.PHONY:	wtf_install wtf_install-strip wtf_installdirs
wtf_install:	wtf_installdirs

wtf_install-strip:
	$(MAKE) wtf_install $(DEFS_TO_PASS_STRIP)

wtf_installdirs:
	set -e; for d in $(wtf_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	wump_clean
wump_clean:
	cd wump && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  wump $(wump_CLEANFILES)

.PHONY:	wump_install wump_install-strip wump_installdirs
wump_install:	wump_installdirs

wump_install-strip:
	$(MAKE) wump_install $(DEFS_TO_PASS_STRIP)

wump_installdirs:
	set -e; for d in $(wump_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	lib_clean
lib_clean:
	cd lib && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(lib_CLEANFILES)

.PHONY:	lib_install lib_install-strip lib_installdirs
lib_install:	lib_installdirs

lib_install-strip:
	$(MAKE) lib_install $(DEFS_TO_PASS_STRIP)

lib_installdirs:
	set -e; for d in $(lib_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	clean mostlyclean distclean maintainer-clean
clean mostlyclean:	 adventure_clean arithmetic_clean backgammon_teachgammon_clean backgammon_backgammon_clean backgammon_common_source_clean backgammon_clean battlestar_clean bcd_clean boggle_mkindex_clean boggle_boggle_clean boggle_mkdict_clean boggle_clean caesar_clean canfield_cfscores_clean canfield_canfield_clean canfield_clean countmail_clean cribbage_clean fish_clean gomoku_clean hack_clean hangman_clean mille_clean monop_clean morse_clean number_clean pig_clean pom_clean ppt_clean primes_clean quiz_datfiles_clean quiz_clean rain_clean random_clean robots_clean sail_clean snake_snake_clean snake_snscore_clean snake_clean tetris_clean trek_clean wargames_clean worm_clean worms_clean wtf_clean wump_clean lib_clean
#clean mostlyclean:	 adventure_clean arithmetic_clean atc_games_clean atc_clean backgammon_teachgammon_clean backgammon_backgammon_clean backgammon_common_source_clean backgammon_clean battlestar_clean bcd_clean boggle_mkindex_clean boggle_boggle_clean boggle_mkdict_clean boggle_clean caesar_clean canfield_cfscores_clean canfield_canfield_clean canfield_clean countmail_clean cribbage_clean dab_clean fish_clean gomoku_clean hack_clean hangman_clean hunt_hunt_clean hunt_huntd_clean hunt_clean mille_clean monop_clean morse_clean number_clean phantasia_clean pig_clean pom_clean ppt_clean primes_clean quiz_datfiles_clean quiz_clean rain_clean random_clean robots_clean sail_clean snake_snake_clean snake_snscore_clean snake_clean tetris_clean trek_clean wargames_clean worm_clean worms_clean wtf_clean wump_clean lib_clean

distclean maintainer-clean:	clean
	rm -f subst.sed subst.rules
	rm -f test.out
	rm -f `cat substfiles substfiles2 |sed '/^#/d'`
	rm -f GNUmakefile
	rm -f a.out conftest.c include/bsd-games.h
	rm -f exec.libs.tmp exec.objs.tmp

.PHONY:	install install-strip

install:	 adventure_install arithmetic_install backgammon_teachgammon_install backgammon_backgammon_install backgammon_common_source_install backgammon_install battlestar_install bcd_install boggle_mkindex_install boggle_boggle_install boggle_mkdict_install boggle_install caesar_install canfield_cfscores_install canfield_canfield_install canfield_install countmail_install cribbage_install fish_install mille_install monop_install morse_install number_install pig_install pom_install ppt_install primes_install quiz_datfiles_install quiz_install rain_install random_install robots_install sail_install snake_snake_install snake_snscore_install snake_install tetris_install trek_install wargames_install worm_install worms_install wtf_install wump_install lib_install
#install:	 adventure_install arithmetic_install atc_games_install atc_install backgammon_teachgammon_install backgammon_backgammon_install backgammon_common_source_install backgammon_install battlestar_install bcd_install boggle_mkindex_install boggle_boggle_install boggle_mkdict_install boggle_install caesar_install canfield_cfscores_install canfield_canfield_install canfield_install countmail_install cribbage_install dab_install fish_install gomoku_install hack_install hangman_install hunt_hunt_install hunt_huntd_install hunt_install mille_install monop_install morse_install number_install phantasia_install pig_install pom_install ppt_install primes_install quiz_datfiles_install quiz_install rain_install random_install robots_install sail_install snake_snake_install snake_snscore_install snake_install tetris_install trek_install wargames_install worm_install worms_install wtf_install wump_install lib_install

install-strip:
	$(MAKE) install $(DEFS_TO_PASS_STRIP)

.PHONY: check test
check test:	all
	set -e; for f in tests/*.test; do echo $$f; $$f; done

# Standard GNU targets we don't support
.PHONY:	uninstall TAGS dist
uninstall TAGS dist:
	@echo "The GNU target \`$@' is not supported by this package." >&2; exit 1

# GNU targets that can do nothing
.PHONY:	info dvi
info dvi:
	@echo "This package comes with no Texinfo documentation."


romfs:
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_ADVENTURE \
		adventure/adventure /bin/adventure
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_ARITHMETIC \
   		arithmetic/arithmetic /bin/arithmetic
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_BACKGAMMON \
		backgammon/backgammon/backgammon /bin/backgammon
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_BACKGAMMON \
		backgammon/teachgammon/teachgammon /bin/teachgammon
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_BATTLESTAR \
	    battlestar/battlestar /bin/battlestar
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_BCD \
	    bcd/bcd /bin/bcd
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_BOGGLE \
	    boggle/boggle/boggle /bin/boggle
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_CAESAR \
	    caesar/caesar /bin/caesar
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_CAESAR \
	    caesar/rot13 /bin/rot13
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_CANFIELD \
	    canfield/canfield/canfield /bin/canfield
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_CANFIELD \
	    canfield/cfscores/cfscores /bin/cfscores
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_CRIBBAGE \
	    cribbage/cribbage /bin/cribbage
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_FISH \
	    fish/fish /bin/fish
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_GOMOKU \
	    gomoku/gomoku /bin/gomoku
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_HACK \
	    hack/hack /bin/hack
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_HANGMAN \
	    hangman/hangman /bin/hangman
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_MILLE \
	    mille/mille /bin/mille
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_MORSE \
	    morse/morse /bin/morse
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_NUMBER \
	    number/number /bin/number
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_PIG \
	    pig/pig /bin/pig
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_POM \
	    pom/pom /bin/pom
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_PPT \
	    ppt/ppt /bin/ppt
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_PRIMES \
	    primes/primes /bin/primes
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_QUIZ \
	    quiz/quiz /bin/quiz
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_RAIN \
	    rain/rain /bin/rain
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_RANDOM \
	    random/random /bin/random
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_ROBOTS \
	    robots/robots /bin/robots
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_SAIL \
	    sail/sail /bin/sail
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_SNAKE \
	    snake/snake/snake /bin/snake
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_SNAKE \
	    snake/snscore/snscore /bin/snscore
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_TETRIS \
   		tetris/tetris /bin/tetris
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_TREK \
	    trek/trek /bin/trek
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_WORM \
	    worm/worm /bin/worm
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_WORMS \
	    worms/worms /bin/worms
	$(ROMFSINST) -e CONFIG_USER_GAMES_BSDGAMES_WUMP \
	    wump/wump /bin/wump

