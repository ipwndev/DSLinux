diff -urN elf2flt-20051225.orig/elf2flt.c elf2flt-20051225/elf2flt.c
--- elf2flt-20051225.orig/elf2flt.c	Wed Sep 28 07:26:02 2005
+++ elf2flt-20051225/elf2flt.c	Mon Jul 23 16:35:46 2007
@@ -227,7 +227,11 @@
     return NULL;
 
   symbol_table = (asymbol **) malloc (storage_needed);
-
+  if (symbol_table == NULL) {
+      perror("malloc");
+      exit(1);
+  }
+      
   number_of_symbols = bfd_canonicalize_symtab (abfd, symbol_table);
   
   if (number_of_symbols < 0) 
@@ -583,7 +587,12 @@
 	}
 
 	symb = get_symbols(rel_bfd, &nsymb);
-	relpp = (arelent **) xmalloc(relsize);
+	relpp = (arelent **) malloc(relsize);
+	if (relpp == NULL) {
+	  perror("malloc");
+	  exit(1);
+	}
+
 	relcount = bfd_canonicalize_reloc(rel_bfd, r, relpp, symb);
 	if (relcount <= 0) {
 		if (verbose)
@@ -687,7 +696,7 @@
 			/* Adjust the address to account for the GOT table which wasn't
 			 * present in the relative file link.
 			 */
-			if (pic_with_got)
+			if (!use_resolved && pic_with_got)
 			  q->address += got_size;
 #endif
 
@@ -1882,6 +1891,10 @@
   }
 
   text = malloc(text_len);
+  if (text == NULL) {
+      perror("malloc");
+      exit(1);
+  }
 
   if (verbose)
     printf("TEXT -> vma=0x%x len=0x%x\n", text_vma, text_len);
@@ -1902,6 +1915,10 @@
     exit (2);
   }
   data = malloc(data_len);
+  if (data == NULL) {
+      perror("malloc");
+      exit(1);
+  }
 
   if (verbose)
     printf("DATA -> vma=0x%x len=0x%x\n", data_vma, data_len);
@@ -1986,6 +2003,10 @@
   
   if (!ofile) {
     ofile = malloc(strlen(fname) + 5 + 1); /* 5 to add suffix */
+    if (ofile == NULL) {
+	perror("malloc");
+	exit(1);
+    }
     strcpy(ofile, fname);
     strcat(ofile, ".bflt");
   }
@@ -2009,7 +2030,7 @@
 				pclose(gf); \
 			else \
 				fclose(gf); \
-		if (!(gf = popen(cmd, "wb"))) { \
+		if (!(gf = popen(cmd, "w"))) { \
 			fprintf(stderr, "Can't run cmd %s\n", cmd); \
 			exit(4); \
 		} \
diff -urN elf2flt-20051225.orig/elf2flt.ld elf2flt-20051225/elf2flt.ld
--- elf2flt-20051225.orig/elf2flt.ld	Thu Aug 25 04:19:42 2005
+++ elf2flt-20051225/elf2flt.ld	Mon Jul 23 16:19:47 2007
@@ -24,7 +24,6 @@
 
 W_RODAT		*(.rodata)
 W_RODAT		*(.rodata1)
-W_RODAT		*(.rodata.*)
 
 		/* This is special code area at the end of the normal
 		   text section.  It contains a small lookup table at
@@ -50,9 +49,6 @@
 		. = ALIGN(0x20) ; 
 		LONG(-1)
 		. = ALIGN(0x20) ; 
-R_RODAT		*(.rodata)
-R_RODAT		*(.rodata1)
-R_RODAT		*(.rodata.*)
 		*(.gnu.linkonce.r*)
 		*(.data)
 		*(.data1)
@@ -61,7 +57,10 @@
 		*(.data1)
 		*(.eh_frame)
 		*(.gcc_except_table)
-
+W_RODAT		*(.rodata.*)
+R_RODAT		*(.rodata)
+R_RODAT		*(.rodata1)
+R_RODAT		*(.rodata.*)
 		/* Microblaze has .sdata and .sbss (small bss).  They must
 		   be contiguous, so please don't move any of this. JW */
 		_ssrw = . ;			
diff -urN elf2flt-20051225.orig/flthdr.c elf2flt-20051225/flthdr.c
--- elf2flt-20051225.orig/flthdr.c	Wed Sep 28 07:26:02 2005
+++ elf2flt-20051225/flthdr.c	Mon Jul 23 16:19:47 2007
@@ -242,7 +242,7 @@
 		}
 
 		sprintf(cmd, "gunzip >> %s", tfile2);
-		tfp = popen(cmd, "wb");
+		tfp = popen(cmd, "w");
 		if(!tfp) {
 			perror("popen");
 			exit(1);
@@ -264,7 +264,7 @@
 		printf("zflat %s --> %s\n", ifile, ofile);
 		fclose(ofp);
 		sprintf(cmd, "gzip -9 -f >> %s", tfile);
-		ofp = popen(cmd, "wb");
+		ofp = popen(cmd, "w");
 		ofp_is_pipe = 1;
 	} else if (new_flags & FLAT_FLAG_GZDATA) {
 		printf("zflat-data %s --> %s\n", ifile, ofile);
@@ -272,7 +272,7 @@
 				sizeof(struct flat_hdr));
 		fclose(ofp);
 		sprintf(cmd, "gzip -9 -f >> %s", tfile);
-		ofp = popen(cmd, "wb");
+		ofp = popen(cmd, "w");
 		ofp_is_pipe = 1;
 	}
 
diff -urN elf2flt-20051225.orig/ld-elf2flt.in elf2flt-20051225/ld-elf2flt.in
--- elf2flt-20051225.orig/ld-elf2flt.in	Tue Apr 19 00:00:48 2005
+++ elf2flt-20051225/ld-elf2flt.in	Mon Jul 23 16:19:47 2007
@@ -145,21 +145,18 @@
 
 		if [ "@got_check@" = "no" ]
 		then
-		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -Ur -d -o "$OFILE.elf" $ARG1         ||exit $?
-		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -o "$OFILE.gdb" $ARG1                ||exit $?
+		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -q -o "$OFILE.gdb" $ARG1             ||exit $?
 		else
 		 $LINKER $EMUL -r -d -o "$OFILE.elf2flt" $ARG1                          ||exit $?
-		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -Ur -o "$OFILE.elf" "$OFILE.elf2flt" ||exit $?
-		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -o "$OFILE.gdb" "$OFILE.elf2flt"     ||exit $?
+		 $LINKER $EMUL $SDIRS -T $LDSCRIPT -q -o "$OFILE.gdb" "$OFILE.elf2flt"  ||exit $?
 		 rm -f "$OFILE.elf2flt"
 		fi
 		if grep _GLOBAL_OFFSET_TABLE_ "$OFILE.gdb" > /dev/null 
 		then
-			$ELF2FLT $FLTFLAGS -o "$OFILE" -p "$OFILE.gdb" "$OFILE.elf" || exit $?
+			$ELF2FLT $FLTFLAGS -a -o "$OFILE" -p "$OFILE.gdb" "$OFILE.gdb"  ||exit $?
 		else
-			$ELF2FLT $FLTFLAGS -o "$OFILE" -r "$OFILE.elf" || exit $?
+			$ELF2FLT $FLTFLAGS -o "$OFILE" -r "$OFILE.gdb" 			||exit $?
 		fi
-		rm -f "$OFILE.elf"  # not needed for any reason
 		rm -f "$NEWLDSCRIPT"
 		exit 0
 	fi
