1-> read test.in
1-> clear all
1-> read fix1
1-> y = (x + (1/x))^3

             1
#1: y = (x + -)^3
             x

1-> y = (((((a+b)/(b-c))^0.25)+(((b-c)/(a+b))^0.25)+(((a-b)*i#/(b-c))^0.5))*(i#^0.5))^(1/n)

           (a + b) 1     (b - c) 1     (a - b)*i# 1       1   1
#2: y = (((-------^-) + (-------^-) + (----------^-))*(i#^-))^-
           (b - c) 4     (a + b) 4      (b - c)   2       2   n

2-> y = (a^a)*(1+(((a^(a^2))*(b^a))^(1/(1-a))))

                                         1
#3: y = (a^a)*(1 + (((a^(a^2))*(b^a))^-------))
                                      (1 - a)

3-> y = (a^2)*(1+(((a^(2*((1.5*a)-1)))*(b^a))^(1/(1-a))))

                            3*a                  1
#4: y = (a^2)*(1 + (((a^(2*(--- - 1)))*(b^a))^-------))
                             2                (1 - a)

4-> y = (15*(d^2)/((1+(d^2))^(7/2)))-(12/((1+(d^2))^(5/2)))-6

           15*(d^2)             12
#5: y = --------------- - --------------- - 6
                     7                 5
        ((1 + (d^2))^-)   ((1 + (d^2))^-)
                     2                 2

5-> y = ((9 + (32^.5))^.5) ; should simplify to (1 + 2*(2^.5)) someday

                 1   1
#6: y = (9 + (32^-))^-
                 2   2

6-> simp all

             1
#1: y = (x + -)^3
             x


          (b + a) 1     (a - b) 1     (c - b) 1   1
#2: y = ((-------^-) + (-------^-) + (-------^-))^-
          (c - b) 4     (c - b) 2     (a + b) 4   n


                          a
#3: y = (a^a) + ((a*b)^-------)
                       (1 - a)


                          a
#4: y = (a^2) + ((a*b)^-------)
                       (1 - a)


             ((d^2) - 4)
#5: y = 3*(--------------- - 2)
                        7
           ((1 + (d^2))^-)
                        2


                   1    1
#6: y = (9 + (4*(2^-)))^-
                   2    2

6-> x^(1/99)=x

      1
#7: x^-- = x
      99

7-> x
Raising both sides to the power of 99 and unfactoring...
Removing possible solution: "x = 0".

#7: x = sign1

7-> calc
Solution #1 with sign1 = 1:
 x = 1
Solution #2 with sign1 = -1:
 x = -1
7-> (2i#)^.5+e#^(pi*i#)
 answer = i#
7-> (1-2i#)/(3+4i#)
 answer = -0.2 - (0.4*i#)
7-> y=x^3

#8: y = x^3

8-> extrema x

#9: x = 0

9-> y=(x+1)^4

#10: y = (x + 1)^4

10-> extrema x

#11: x = -1

11-> roots 4 1 0	; The 4 roots of unity.

The polar coordinates are:
1 amplitude and 0 radians (0 degrees).

The 4 roots of 1^(1/4) are:

1
Inverse Check: 1

0 +1*i#
Inverse Check: 1

-1
Inverse Check: 1

0 -1*i#
Inverse Check: 1

11-> factor number -75 10000000000000 12146807
-75 = 3 * 5^2 * -1
10000000000000 = 2^13 * 5^13
12146807 = 12146807
11-> clear all
1-> read fix2
1-> b = (-1^(1/((-1*n)+1)*(2+n)))*(a^(1/((-1*n)+1)))

            (2 + n)        1
#1: b = (-1^-------)*(a^-------)
            (1 - n)     (1 - n)

1-> x = 1/(y^(1/(n-1)*(-2+n)))/((n^(n/(n-1)))-(n^(1/(n-1))))

                            1
#2: x = -----------------------------------------
            (n - 2)         n             1
        ((y^-------)*((n^-------) - (n^-------)))
            (n - 1)      (n - 1)       (n - 1)

2-> a = (x+(((1/x)+1)*((x^m)+((d+e)/(x^n)/(f+g)))))/(x+1)

               1                   (d + e)
        (x + ((- + 1)*((x^m) + ---------------)))
               x               ((x^n)*(f + g))
#3: a = -----------------------------------------
                         (x + 1)

3-> simp all

                      1
#1: b = ((-1^n)*a)^-------
                   (1 - n)


                            1
        (((y^(n - 2))*n)^-------)
                         (1 - n)
#2: x = -------------------------
                 (n - 1)


                               (1 + x)*(d + e)
                      ((x^2) + ---------------)
                               ((x^n)*(f + g))
#3: a = (x^(m - 1)) + -------------------------
                             ((x^2) + x)

3-> #1

                      1
#1: b = ((-1^n)*a)^-------
                   (1 - n)

1-> a

        (b^(1 - n))
#1: a = -----------
          (-1^n)

1-> simp

        (b^(1 - n))
#1: a = -----------
          (-1^n)

1-> #2

                            1
        (((y^(n - 2))*n)^-------)
                         (1 - n)
#2: x = -------------------------
                 (n - 1)

2-> y

        ((x*(n - 1))^(1 - n))    1
#2: y = ---------------------^-------
                  n           (n - 2)

2-> simp

        ((x*(n - 1))^(1 - n))    1
#2: y = ---------------------^-------
                  n           (n - 2)

2-> deri x
Differentiating with respect to (x) and simplifying the RHS...

         (x^(3 - (2*n)))    1
        (---------------^-------)
           ((n^2) - n)   (n - 2)
#4: y = -------------------------
                 (2 - n)

4-> clear all
1-> read fix5
1-> a = (b+((c+1)^0.5))^3

                      1
#1: a = (b + ((c + 1)^-))^3
                      2

1-> a = b*c*x*((((x^2)*c)+(b^4))^3)*(x+c)

#2: a = b*c*x*((((x^2)*c) + (b^4))^3)*(x + c)

2-> a = (((b^2)+x)^3)*((1/x)+x)*b

                         1
#3: a = (((b^2) + x)^3)*(- + x)*b
                         x

3-> a = b*(((1/b)+(1/c))^3)

            1   1
#4: a = b*((- + -)^3)
            b   c

4-> a = (b^2)*(((1/b)+(1/c))^3)

                1   1
#5: a = (b^2)*((- + -)^3)
                b   c

5-> a = (b^2)*((b-c)^3)

#6: a = (b^2)*((b - c)^3)

6-> simp all

                      1
#1: a = (b + ((c + 1)^-))^3
                      2


#2: a = b*(((b^4) + (c*(x^2)))^3)*(((c^2)*x) + (c*(x^2)))


                               1
#3: a = b*(((b^2) + x)^3)*(x + -)
                               x


              b
        ((1 + -)^3)
              c
#4: a = -----------
           (b^2)


              b
        ((1 + -)^3)
              c
#5: a = -----------
             b


#6: a = (b^2)*((b - c)^3)

6-> clear all
1-> read fix7
1-> y = (c+a-b)/(b-a)

        (c + a - b)
#1: y = -----------
          (b - a)

1-> z = ((d*(b+c))+(a*(e+f)))/(e+f)/(b+c)

        ((d*(b + c)) + (a*(e + f)))
#2: z = ---------------------------
             ((e + f)*(b + c))

2-> a = ((((e^2)+d)*b*((b^2)+2))-e-f)/b/((b^2)+2)/(e+f)

        ((((e^2) + d)*b*((b^2) + 2)) - e - f)
#3: a = -------------------------------------
               (b*((b^2) + 2)*(e + f))

3-> a = ((b*((((e^2)+d)*((b^2)+2))+(b*(e+f))))+e+f)/(e+f)/b/((b^2)+2)

        ((b*((((e^2) + d)*((b^2) + 2)) + (b*(e + f)))) + e + f)
#4: a = -------------------------------------------------------
                        ((e + f)*b*((b^2) + 2))

4-> a = ((1/(x^(1+n)))+(1/(x^n))+(x^(m-1))+(x^m)+x)/(x+1)

              1          1
        (----------- + ----- + (x^(m - 1)) + (x^m) + x)
         (x^(1 + n))   (x^n)
#5: a = -----------------------------------------------
                            (x + 1)

5-> simp all

           c
#1: y = ------- - 1
        (b - a)


           d         a
#2: z = ------- + -------
        (e + f)   (b + c)


        ((e^2) + d)          1
#3: a = ----------- - ---------------
          (e + f)     ((b^3) + (2*b))


        ((e^2) + d)     (1 + (b^2))
#4: a = ----------- + ---------------
          (e + f)     ((b^3) + (2*b))


           1
        (----- + (x^m))
         (x^n)               x
#5: a = --------------- + -------
               x          (x + 1)

5-> clear all
1-> read fix8
1-> a = (((b^2)*(x^2))+(4*(b^2)*x)+(b^2)+(2*(b^3)*x)+(2*(b^3))+(b^4)+(2*b*(x^2))+(2*b*x)+(x^2))/(((b^3)*(x^2))+(2*(b^4)*x)+(b^5))

        (((b^2)*(x^2)) + (4*(b^2)*x) + (b^2) + (2*(b^3)*x) + (2*(b^3)) + (b^4) + (2*b*(x^2)) + (2*b*x) + (x^2))
#1: a = -------------------------------------------------------------------------------------------------------
                                         (((b^3)*(x^2)) + (2*(b^4)*x) + (b^5))

1-> a = ((x^(2*n))-(z^(2*n)))/((x^n)-(z^n))

        ((x^(2*n)) - (z^(2*n)))
#2: a = -----------------------
            ((x^n) - (z^n))

2-> y = (((b+1)^0.5)*((b^2.5)+c))+((((b^2)+b)^0.5)*a)

                  1      5                        1
#3: y = (((b + 1)^-)*((b^-) + c)) + ((((b^2) + b)^-)*a)
                  2      2                        2

3-> a = (b^(1-n))/(1+(b^(m-n)))

           (b^(1 - n))
#4: a = -----------------
        (1 + (b^(m - n)))

4-> a = (((b^2)+(b*(c^(1-n)))+(b^0.5))/(b^n)/(1+(b^(m-n))))^0.5

                                      1
        ((b^2) + (b*(c^(1 - n))) + (b^-))
                                      2   1
#5: a = ---------------------------------^-
            ((b^n)*(1 + (b^(m - n))))     2

5-> simp all

        ((1 + b)^2)
#1: a = -----------
           (b^3)

Found polynomial Greatest Common Divisor.  Division simplified.

#2: a = (x^n) + (z^n)


                 1      5        1
#3: y = ((b + 1)^-)*((b^-) + ((b^-)*a) + c)
                 2      2        2


               b
#4: a = ---------------
        ((b^n) + (b^m))


                                      1
        ((b^2) + (b*(c^(1 - n))) + (b^-))
                                      2   1
#5: a = ---------------------------------^-
                 ((b^n) + (b^m))          2

5-> clear all
1-> read fix9
1-> a = ((+/-1000*(b!^4)+/-x)^2)*((1/x)+x)*b

                                                 1
#1: a = (((1000*sign1*((b!)^4)) + (sign2*x))^2)*(- + x)*b
                                                 x

1-> a = ((b+(2*i#))^5)

#2: a = (b + (2*i#))^5

2-> a = (((1/(b^2))+c)^2)*((1/b)+(c*b))

            1            1
#3: a = ((----- + c)^2)*(- + (c*b))
          (b^2)          b

3-> a = (6*(b^0.5)-3)^3

               1
#4: a = ((6*(b^-)) - 3)^3
               2

4-> a = (2-(4/(c-b)))^3

                4
#5: a = (2 - -------)^3
             (c - b)

5-> a = ((x^n)-(y^n))^3

#6: a = ((x^n) - (y^n))^3

6-> val = (((e#*((2*(x^3)) + 24 + (x!) - zy)) - pi)/e#)^2

          ((e#*((2*(x^3)) + 24 + (x!) - zy)) - pi)
#7: val = ----------------------------------------^2
                             e#

7-> simp all

                                                     1
#1: a = ((x + (1000*sign1*sign2*((b!)^4)))^2)*b*(x + -)
                                                     x


#2: a = (b + (2*i#))^5


        ((1 + (c*(b^2)))^3)
#3: a = -------------------
               (b^5)


                        1
#4: a = -27*((1 - (2*(b^-)))^3)
                        2


                   2
#5: a = 8*((1 - -------)^3)
                (c - b)


#6: a = ((x^n) - (y^n))^3


                                        pi
#7: val = (zy - 24 - (x!) - (2*(x^3)) + --)^2
                                        e#

7-> flist factor all

                                                                  1
#1: a = ((x + (((2^3)*(5^3))*sign1*sign2*((b!)^(2^2))))^2)*b*(x + -)
                                                                  x


#2: a = (b + (2*i#))^5


        ((1 + (c*(b^2)))^3)
#3: a = -------------------
               (b^5)


                               1
#4: a = ((3^3)*-1)*((1 - (2*(b^-)))^3)
                               2


                       2
#5: a = (2^3)*((1 - -------)^3)
                    (c - b)


#6: a = ((x^n) - (y^n))^3


                                               pi
#7: val = (zy - ((2^3)*3) - (x!) - (2*(x^3)) + --)^2
                                               e#

7-> #2

#2: a = (b + (2*i#))^5

2-> real

#8: a = (b^5) - (40*(b^3)) + (80*b)

8-> #2

#2: a = (b^5) + (10*i#*(b^4)) - (80*i#*(b^2)) + (32*i#) - (40*(b^3)) + (80*b)

2-> imag

#9: a = (10*i#*(b^4)) - (80*i#*(b^2)) + (32*i#)

9-> replace i# with 1

#9: a = (10*(b^4)) - (80*(b^2)) + 32

9-> read pie.in
9-> clear all
1-> 
1-> ; This is the famous Bailey-Borwein-Plouffe algorithm.
1-> ; Sum this n = 0 to infinity to compute pi.
1-> ; This is especially useful for calculating pi in hexadecimal.
1-> ; One hexadecimal digit of pi is generated with each iteration.
1-> 
1-> ((4/((8*n) + 1)) - (2/((8*n) + 4)) - (1/((8*n) + 5)) - (1/((8*n) + 6)))/(16^n)

          4             2             1             1
    (----------- - ----------- - ----------- - -----------)
     ((8*n) + 1)   ((8*n) + 4)   ((8*n) + 5)   ((8*n) + 6)
#1: -------------------------------------------------------
                            (16^n)

1-> simplify

                       ((120*(n^2)) + (151*n) + 47)
#1: ------------------------------------------------------------------
    ((16^n)*((512*(n^4)) + (1024*(n^3)) + (712*(n^2)) + (194*n) + 15))

1-> sum n 0 10 ; Sum as n goes from 0 to 10.

#2: 3.14159265359

1-> pi ; Verify that the digits are the same.
 answer = 3.14159265359
1-> 
1-> ; Sum this n = 0 to infinity to compute (y=e^x):
1-> 
1-> x^n/n!

    (x^n)
#3: -----
    (n!)

3-> replace x with 1

     1
#3: ----
    (n!)

3-> 
3-> ; Sum this n = 0 to infinity to compute e:
3-> 
3-> sum n 0 20 ; Sum as n goes from 0 to 20.

#4: 2.71828182846

3-> e# ; Verify that the digits are the same.
 answer = 2.71828182846
3-> read demo.in
3-> clear all
1-> y=x_new^n

#1: y = x_new^n

1-> taylor x_new 1 x_old ; build the root approximation equation

#2: y = (x_old^n) + (n*(x_old^(n - 1))*(x_new - x_old))

2-> x_new ; solve for the wanted variable

                   (y - (x_old^n))
#2: x_new = x_old*(--------------- + 1)
                    ((x_old^n)*n)

2-> simplify ; convergent, iterative root approximation equation:

                            y
                       (--------- - 1)
                        (x_old^n)
#2: x_new = x_old*(1 + ---------------)
                              n

2-> copy ; copy the equation to a new equation space

                            y
                       (--------- - 1)
                        (x_old^n)
#3: x_new = x_old*(1 + ---------------)
                              n

2-> replace x_new x_old with x

                  y
               (----- - 1)
                (x^n)
#2: x = x*(1 + -----------)
                    n

2-> x ; make sure it is correct by solving for x
Removing possible solution: "x = 0".

          1
#2: x = y^-
          n

2-> 
2-> ; find the derivative of (1/(x^.5)) the hard way:
2-> a=(1/(x+l)^.5-1/x^.5)/l

              1          1
        (----------- - -----)
                  1       1
         ((x + l)^-)   (x^-)
                  2       2
#4: a = ---------------------
                  l

4-> limit l 0 ; take the limit as l goes to 0
Raising both sides to the power of 2 and unfactoring...
Removing possible solution: "l = 0".
Equation was quadratic.
Raising both sides to the power of 2 and unfactoring...

           -1
#4: a = ---------
              3
        (2*(x^-))
              2

4-> integrate x ; take the anti-derivative and see if it's right

          1
#5: a = -----
           1
        (x^-)
           2

5-> 
5-> ; an inverse cubic equation:
5-> y=x^(1/3)+x^(2/3)

           1       2
#6: y = (x^-) + (x^-)
           3       3

6-> x ; solve for x
Equation was a degree 0.666667 quadratic.

                              1
        -1*(1 + (((1 + (4*y))^-)*sign1))
                              2
#6: x = --------------------------------^3
                       2

6-> simplify

                                1
        -1*((sign1*((1 + (4*y))^-)*(y + 1)) + 1 + (3*y))
                                2
#6: x = ------------------------------------------------
                               2

6-> 
6-> e#^x

#7: e#^x

7-> taylor x 10 0 ; generate a 10th order taylor series from the exponential function

            (x^2)   (x^3)   (x^4)   (x^5)   (x^6)   (x^7)   (x^8)   (x^9)    (x^10)
#8: 1 + x + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ------ + -------
              2       6      24      120     720    5040    40320   362880   3628800

8-> laplace x ; do a Laplace transform on it

    1     1       1       1       1       1       1       1       1       1        1
#9: - + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ------ + ------
    x   (x^2)   (x^3)   (x^4)   (x^5)   (x^6)   (x^7)   (x^8)   (x^9)   (x^10)   (x^11)

9-> laplace inverse x ; undo the transform

             (x^2)   (x^3)   (x^4)   (x^5)   (x^6)   (x^7)   (x^8)   (x^9)    (x^10)
#10: 1 + x + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ------ + -------
               2       6      24      120     720    5040    40320   362880   3628800

10-> read poly.in
10-> ; Combine 3 quadratic polynomials with 3 unknown coefficients (a, b, c).
10-> ; Solve for a, b, and c.
10-> 
10-> clear all
1-> y1=a+b*x1+c*x1^2

#1: y1 = a + (b*x1) + (c*(x1^2))

1-> y2=a+b*x2+c*x2^2

#2: y2 = a + (b*x2) + (c*(x2^2))

2-> y3=a+b*x3+c*x3^2

#3: y3 = a + (b*x3) + (c*(x3^2))

3-> 2 ; select equation number 2

#2: y2 = a + (b*x2) + (c*(x2^2))

2-> eliminate a ; eliminate variable (a) from the current equation
Solving equation #1 for (a)...

#2: y2 = (b*x2) - (x1*(b + (c*x1))) + y1 + (c*(x2^2))

2-> 3 ; select equation number 3

#3: y3 = a + (b*x3) + (c*(x3^2))

3-> eliminate a b ; eliminate variables (a) and (b)
Solving equation #1 for (a)...
Solving equation #2 for (b)...

         (y1 - y2 + (c*((x2^2) - (x1^2))))*x3        (y1 - y2 + (c*((x2^2) - (x1^2))))
#3: y3 = ------------------------------------ - (x1*(--------------------------------- + (c*x1))) + y1 + (c*(x3^2))
                      (x1 - x2)                                  (x1 - x2)

3-> c ; solve for c

               ((y2*(x1 - x3)) + (y1*(x3 - x2)) - (y3*(x1 - x2)))
#3: c = -----------------------------------------------------------------
        ((x1*((x2^2) + (x1*(x3 - x2)))) - (x3*((x2^2) + (x3*(x1 - x2)))))

3-> 2 ; select equation number 2 again

        (y1 - y2 + (c*((x2^2) - (x1^2))))
#2: b = ---------------------------------
                    (x1 - x2)

2-> eliminate c using 3 ; eliminate (c) using equation number 3
Solving equation #3 for (c)...

                   ((y2*(x1 - x3)) + (y1*(x3 - x2)) - (y3*(x1 - x2)))*((x2^2) - (x1^2))
        (y1 - y2 + --------------------------------------------------------------------)
                    ((x1*((x2^2) + (x1*(x3 - x2)))) - (x3*((x2^2) + (x3*(x1 - x2)))))
#2: b = --------------------------------------------------------------------------------
                                           (x1 - x2)

2-> 1 ; select equation number 1

#1: a = -1*((x1*(b + (c*x1))) - y1)

1-> eliminate b c ; the final elimination
Solving equation #2 for (b)...
Solving equation #3 for (c)...

                 ((((x1*((x2^2) + (x1*(x3 - x2)))) - (x3*((x2^2) + (x3*(x1 - x2)))))*(y1 - y2)) + (((y2*(x1 - x3)) + (y1*(x3 - x2)) - (y3*(x1 - x2)))*((x2^2) - (x1^2))))         ((y2*(x1 - x3)) + (y1*(x3 - x2)) - (y3*(x1 - x2)))*x1
#1: a = -1*((x1*(-------------------------------------------------------------------------------------------------------------------------------------------------------- + -----------------------------------------------------------------)) - y1)
                                                      (((x1*((x2^2) + (x1*(x3 - x2)))) - (x3*((x2^2) + (x3*(x1 - x2)))))*(x1 - x2))                                         ((x1*((x2^2) + (x1*(x3 - x2)))) - (x3*((x2^2) + (x3*(x1 - x2)))))

1-> simplify quick all ; list all solutions
Found polynomial Greatest Common Divisor.  Division simplified.

        (((x1^2)*((x3*y2) - (x2*y3))) + (x1*(((x2^2)*y3) - ((x3^2)*y2))) + (y1*((x2*(x3^2)) - ((x2^2)*x3))))
#1: a = ----------------------------------------------------------------------------------------------------
                                          ((x2 - x1)*(x3 - x1)*(x3 - x2))


        (((x1^2)*(y2 - y3)) + ((x2^2)*(y3 - y1)) + ((x3^2)*(y1 - y2)))
#2: b = --------------------------------------------------------------
                       ((x2 - x1)*(x3 - x1)*(x2 - x3))


        ((x1*(y2 - y3)) + (x3*(y1 - y2)) + (x2*(y3 - y1)))
#3: c = --------------------------------------------------
                 ((x2 - x1)*(x3 - x1)*(x3 - x2))

1-> read linear.in
1-> ; Combine 3 simultaneous linear equations with 3 unknowns (x, y, z).
1-> ; Solve for all 3 unknowns using the "eliminate" command.
1-> 
1-> clear all
1-> d1=a1*x+b1*y+c1*z

#1: d1 = (a1*x) + (b1*y) + (c1*z)

1-> d2=a2*x+b2*y+c2*z

#2: d2 = (a2*x) + (b2*y) + (c2*z)

2-> d3=a3*x+b3*y+c3*z

#3: d3 = (a3*x) + (b3*y) + (c3*z)

3-> 2 ; select equation number 2

#2: d2 = (a2*x) + (b2*y) + (c2*z)

2-> eliminate x
Solving equation #1 for (x)...

                  a2*((b1*y) + (c1*z) - d1)
#2: d2 = (b2*y) - ------------------------- + (c2*z)
                             a1

2-> 3 ; select equation number 3

#3: d3 = (a3*x) + (b3*y) + (c3*z)

3-> eliminate x y
Solving equation #1 for (x)...
Solving equation #2 for (y)...

                                                                b1*((z*((c2*a1) - (a2*c1))) + (a2*d1) - (d2*a1))
                                                            a3*(------------------------------------------------ + (c1*z) - d1)
         b3*((z*((c2*a1) - (a2*c1))) + (a2*d1) - (d2*a1))                     ((a2*b1) - (b2*a1))
#3: d3 = ------------------------------------------------ - ------------------------------------------------------------------- + (c3*z)
                       ((a2*b1) - (b2*a1))                                                  a1

3-> z ; solve for z

        ((d3*((a2*b1) - (a1*b2))) + (b3*((d2*a1) - (a2*d1))) + (a3*((b2*d1) - (b1*d2))))
#3: z = --------------------------------------------------------------------------------
        ((b3*((c2*a1) - (a2*c1))) + (a3*((b2*c1) - (b1*c2))) + (c3*((a2*b1) - (a1*b2))))

3-> 2

        ((z*((c2*a1) - (a2*c1))) + (a2*d1) - (d2*a1))
#2: y = ---------------------------------------------
                     ((a2*b1) - (b2*a1))

2-> eliminate z using 3
Solving equation #3 for (z)...

         ((d3*((a2*b1) - (a1*b2))) + (b3*((d2*a1) - (a2*d1))) + (a3*((b2*d1) - (b1*d2))))*((c2*a1) - (a2*c1))
        (---------------------------------------------------------------------------------------------------- + (a2*d1) - (d2*a1))
                   ((b3*((c2*a1) - (a2*c1))) + (a3*((b2*c1) - (b1*c2))) + (c3*((a2*b1) - (a1*b2))))
#2: y = --------------------------------------------------------------------------------------------------------------------------
                                                           ((a2*b1) - (b2*a1))

2-> 1

        -1*((b1*y) + (c1*z) - d1)
#1: x = -------------------------
                   a1

1-> eliminate y z
Solving equation #2 for (y)...
Solving equation #3 for (z)...

            b1*((((d3*((a2*b1) - (a1*b2))) + (b3*((d2*a1) - (a2*d1))) + (a3*((b2*d1) - (b1*d2))))*((c2*a1) - (a2*c1))) + (((b3*((c2*a1) - (a2*c1))) + (a3*((b2*c1) - (b1*c2))) + (c3*((a2*b1) - (a1*b2))))*((a2*d1) - (d2*a1))))   c1*((d3*((a2*b1) - (a1*b2))) + (b3*((d2*a1) - (a2*d1))) + (a3*((b2*d1) - (b1*d2))))
        -1*(-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- + ----------------------------------------------------------------------------------- - d1)
                                                                   (((b3*((c2*a1) - (a2*c1))) + (a3*((b2*c1) - (b1*c2))) + (c3*((a2*b1) - (a1*b2))))*((a2*b1) - (b2*a1)))                                                           ((b3*((c2*a1) - (a2*c1))) + (a3*((b2*c1) - (b1*c2))) + (c3*((a2*b1) - (a1*b2))))
#1: x = --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                                 a1

1-> simplify all ; list all solutions

        ((b1*((c3*d2) - (c2*d3))) + (c1*((d3*b2) - (b3*d2))) + (d1*((b3*c2) - (c3*b2))))
#1: x = --------------------------------------------------------------------------------
        ((a1*((b3*c2) - (c3*b2))) + (c1*((a3*b2) - (b3*a2))) + (b1*((c3*a2) - (a3*c2))))


        ((a1*((d3*c2) - (c3*d2))) + (c1*((a3*d2) - (d3*a2))) + (d1*((c3*a2) - (a3*c2))))
#2: y = --------------------------------------------------------------------------------
        ((a1*((b3*c2) - (c3*b2))) + (c1*((a3*b2) - (b3*a2))) + (b1*((c3*a2) - (a3*c2))))


        ((b1*((d3*a2) - (a3*d2))) + (a1*((b3*d2) - (d3*b2))) + (d1*((a3*b2) - (b3*a2))))
#3: z = --------------------------------------------------------------------------------
        ((a1*((b3*c2) - (c3*b2))) + (c1*((a3*b2) - (b3*a2))) + (b1*((c3*a2) - (a3*c2))))

1-> clear all
1-> read examples.in
1-> ; A semicolon ";" is the line comment character.
1-> c^2=a^2+b^2 ; The Pythagorean Theorem.  Equations are entered by just typing them in.

#1: c^2 = (a^2) + (b^2)

1-> c ; Solve for c.  Equations are solved by typing in the variable.

                         1
#1: c = (((a^2) + (b^2))^-)*sign1
                         2

1-> ; "sign" variables may be +1 or -1.
1-> 
1-> code c ; Generate C code.
c = (pow(((a * a) + (b * b)), (1.0 / 2.0)) * sign1);
1-> 
1-> code python; Generate Python code.
c = ((((a * a) + (b * b)) ** (1.0 / 2.0)) * sign1);
1-> 
1-> b ; Solve for b.

                         1
#1: b = (((c^2) - (a^2))^-)*sign2
                         2

1-> a=b+1/b ; a simple quadratic

            1
#2: a = b + -
            b

2-> b ; Solve for b.
Equation was quadratic.

                           1
        (a - ((((a^2) - 4)^-)*sign1))
                           2
#2: b = -----------------------------
                      2

2-> a ; Solve for a.
Raising both sides to the power of 2 and unfactoring...

        ((b^2) + 1)
#2: a = -----------
             b

2-> simplify

            1
#2: a = b + -
            b

2-> 27^y=9 ; Mathomatic is also handy as an advanced calculator.

#3: 27^y = 9

3-> y ; Solve for y.

        2
#3: y = -
        3

3-> e#^(pi*i#) ; Calculate e^(pi*i)
 answer = -1
3-> read test1.in
3-> clear all
1-> y = .6666 - (4*(((10*(pi^2)*(r^3)/((d^2)*g*m*epsilon)) - 1)^(1/2))/15)

                       10*(pi^2)*(r^3)        1
                 4*((------------------- - 1)^-)
                     ((d^2)*g*m*epsilon)      2
#1: y = 0.6666 - -------------------------------
                               15

1-> simp

                         pi
                     10*(--^2)*(r^3)
                         d                1
                 4*((--------------- - 1)^-)
                      (g*m*epsilon)       2
#1: y = 0.6666 - ---------------------------
                             15

1-> simp symbolic

                     10*(pi^2)*(r^3)          1
                 4*((--------------- - (d^2))^-)
                      (g*m*epsilon)           2
#1: y = 0.6666 - -------------------------------
                             (15*d)

1-> 
1-> read test2.in
1-> clear all
1-> y=(a/2)^2/b/4

         a
        (-^2)
         2
#1: y = -----
        (4*b)

1-> l=f*(b-y)+z*(a-f)

#2: l = (f*(b - y)) + (z*(a - f))

2-> m=2*(b-y)-a+f

#3: m = (2*(b - y)) - a + f

3-> n=2*(b-y)+a-f

#4: n = (2*(b - y)) + a - f

4-> o=l*(1/m-1/n)/2

           1   1
        l*(- - -)
           m   n
#5: o = ---------
            2

5-> elim l m n y
Solving equation #2 for (l)...
Solving equation #3 for (m)...
Solving equation #4 for (n)...
Solving equation #1 for (y)...

                 (a^2)                                1                            1
        ((f*(b - ------)) + (z*(a - f)))*(-------------------------- - --------------------------)
                 (16*b)                            (a^2)                        (a^2)
                                          ((2*(b - ------)) - a + f)   ((2*(b - ------)) + a - f)
                                                   (16*b)                       (16*b)
#5: o = ------------------------------------------------------------------------------------------
                                                    2

5-> simp

           4*((f*((16*(b^3)) - (b*(a^2)))) + (16*(b^2)*z*(a - f)))*(a - f)
#5: o = ---------------------------------------------------------------------
        ((256*(b^4)) + ((b^2)*((128*a*f) - (96*(a^2)) - (64*(f^2)))) + (a^4))

5-> copy

           4*((f*((16*(b^3)) - (b*(a^2)))) + (16*(b^2)*z*(a - f)))*(a - f)
#6: o = ---------------------------------------------------------------------
        ((256*(b^4)) + ((b^2)*((128*a*f) - (96*(a^2)) - (64*(f^2)))) + (a^4))

5-> f
Equation was quadratic.

                                                                                                                                                                                       1
         ((16*b*((b*((b*((32*b*(((a^2)*((8*b*(b + (3*o))) - (16*o*(z + o)) - (a^2))) + (128*(b^2)*o*(z - b + o)))) - (48*(a^4)*o))) + ((a^4)*((a^2) + (16*o*(z + o)))))) + ((a^6)*o)))^-)*sign1
                                                                                                                                                                                       2
        (-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- + (2*b*a*((16*b*(b - (2*(z + o)))) - (a^2))))
                                                                                                   2
#5: f = -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                         (4*b*((16*b*(b - z - o)) - (a^2)))

5-> simp symb

                                                                                              1
             ((sign1*((((b^2)*((a^2) + (16*((o^2) + (o*z))))) + (o*(((a^2)*b) - (16*(b^3)))))^-)*((16*(b^2)) - (a^2))) - (16*(b^2)*a*(z + o)))
                                                                                              2
        (a + ---------------------------------------------------------------------------------------------------------------------------------)
                                                       ((16*((b^3) - ((b^2)*(z + o)))) - (b*(a^2)))
#5: f = ---------------------------------------------------------------------------------------------------------------------------------------
                                                                           2

5-> #6

           4*((f*((16*(b^3)) - (b*(a^2)))) + (16*(b^2)*z*(a - f)))*(a - f)
#6: o = ---------------------------------------------------------------------
        ((256*(b^4)) + ((b^2)*((128*a*f) - (96*(a^2)) - (64*(f^2)))) + (a^4))

6-> deri z
Differentiating with respect to (z) and simplifying the RHS...

                                 64*((b*(a - f))^2)
#7: o = ---------------------------------------------------------------------
        ((256*(b^4)) + ((b^2)*((128*a*f) - (96*(a^2)) - (64*(f^2)))) + (a^4))

7-> f
Equation was quadratic.

                                                                            1
            ((256*(b^2)*o*(1 + o)*((32*(b^2)*((8*(b^2)) - (a^2))) + (a^4)))^-)*sign2
                                                                            2
        -1*(------------------------------------------------------------------------ - (64*(b^2)*a*(1 + o)))
                                               2
#7: f = ----------------------------------------------------------------------------------------------------
                                                 (64*(b^2)*(1 + o))

7-> simp symb

                       o    1           (a^2)
#7: f = a + (sign2*(-------^-)*((2*b) - -----))
                    (1 + o) 2           (8*b)

7-> read test3.in
7-> ; Combine 3 linear equations in 3 unknowns (x, y, z)
7-> ; and solve for every variable to test Mathomatic.
7-> 
7-> clear all
1-> b1=a0*x+a1*y+a2*z

#1: b1 = (a0*x) + (a1*y) + (a2*z)

1-> b2=a3*x+a4*y+a5*z

#2: b2 = (a3*x) + (a4*y) + (a5*z)

2-> b3=a6*x+a7*y+a8*z

#3: b3 = (a6*x) + (a7*y) + (a8*z)

3-> #2

#2: b2 = (a3*x) + (a4*y) + (a5*z)

2-> eliminate x using 1
Solving equation #1 for (x)...

                  a3*((a1*y) + (a2*z) - b1)
#2: b2 = (a4*y) - ------------------------- + (a5*z)
                             a0

2-> #3

#3: b3 = (a6*x) + (a7*y) + (a8*z)

3-> eliminate x y
Solving equation #1 for (x)...
Solving equation #2 for (y)...

                                                                a1*((z*((a5*a0) - (a3*a2))) + (a3*b1) - (b2*a0))
                                                            a6*(------------------------------------------------ + (a2*z) - b1)
         a7*((z*((a5*a0) - (a3*a2))) + (a3*b1) - (b2*a0))                     ((a3*a1) - (a4*a0))
#3: b3 = ------------------------------------------------ - ------------------------------------------------------------------- + (a8*z)
                       ((a3*a1) - (a4*a0))                                                  a0

3-> z

        ((b3*((a3*a1) - (a0*a4))) + (a7*((b2*a0) - (a3*b1))) + (a6*((a4*b1) - (a1*b2))))
#3: z = --------------------------------------------------------------------------------
        ((a7*((a5*a0) - (a3*a2))) + (a6*((a4*a2) - (a1*a5))) + (a8*((a3*a1) - (a0*a4))))

3-> z = ((((a0*a4)-(a1*a3))*b3)+(a6*((-1.0*a4*b1)+(a1*b2)))+(a7*((a3*b1)-(a0*b2))))/((a6*((-1.0*a4*a2)+(a1*a5)))+(a8*((a0*a4)-(a1*a3)))+(a7*((a3*a2)-(a0*a5))))

        ((((a0*a4) - (a1*a3))*b3) + (a6*((a1*b2) - (a4*b1))) + (a7*((a3*b1) - (a0*b2))))
#4: z = --------------------------------------------------------------------------------
        ((a6*((a1*a5) - (a4*a2))) + (a8*((a0*a4) - (a1*a3))) + (a7*((a3*a2) - (a0*a5))))

4-> compare 3 with 4
Comparing #3 with #4...
Equations are identical.
4-> #3

        ((b3*((a3*a1) - (a0*a4))) + (a7*((b2*a0) - (a3*b1))) + (a6*((a4*b1) - (a1*b2))))
#3: z = --------------------------------------------------------------------------------
        ((a7*((a5*a0) - (a3*a2))) + (a6*((a4*a2) - (a1*a5))) + (a8*((a3*a1) - (a0*a4))))

3-> b1

         ((z*((a7*((a5*a0) - (a3*a2))) + (a6*((a4*a2) - (a1*a5))) + (a8*((a3*a1) - (a0*a4))))) - (b3*((a3*a1) - (a0*a4))) + (b2*((a6*a1) - (a7*a0))))
#3: b1 = --------------------------------------------------------------------------------------------------------------------------------------------
                                                                     ((a6*a4) - (a7*a3))

3-> b2

         ((b1*((a6*a4) - (a7*a3))) - (z*((a7*((a5*a0) - (a3*a2))) + (a6*((a4*a2) - (a1*a5))) + (a8*((a3*a1) - (a0*a4))))) + (b3*((a3*a1) - (a0*a4))))
#3: b2 = --------------------------------------------------------------------------------------------------------------------------------------------
                                                                     ((a6*a1) - (a7*a0))

3-> b3

         ((b2*((a6*a1) - (a7*a0))) - (b1*((a6*a4) - (a7*a3))) + (z*((a7*((a5*a0) - (a3*a2))) + (a6*((a4*a2) - (a1*a5))) + (a8*((a3*a1) - (a0*a4))))))
#3: b3 = --------------------------------------------------------------------------------------------------------------------------------------------
                                                                     ((a3*a1) - (a0*a4))

3-> a0

         ((a3*((a1*(b3 - (z*a8))) - (a7*(b1 - (z*a2))))) - (a6*((a1*(b2 - (z*a5))) + (a4*((z*a2) - b1)))))
#3: a0 = -------------------------------------------------------------------------------------------------
                                     ((a7*((z*a5) - b2)) + (a4*(b3 - (z*a8))))

3-> a1

         ((a0*((a7*((z*a5) - b2)) + (a4*(b3 - (z*a8))))) + ((b1 - (z*a2))*((a3*a7) - (a6*a4))))
#3: a1 = --------------------------------------------------------------------------------------
                               ((a3*(b3 - (z*a8))) + (a6*((z*a5) - b2)))

3-> a2

         -1*((a1*((a3*(b3 - (z*a8))) + (a6*((z*a5) - b2)))) - (a0*((a7*((z*a5) - b2)) + (a4*(b3 - (z*a8))))) - (b1*((a3*a7) - (a6*a4))))
#3: a2 = -------------------------------------------------------------------------------------------------------------------------------
                                                             (((a3*a7) - (a6*a4))*z)

3-> a3

         ((a6*((a4*((a2*z) - b1)) - (a1*((z*a5) - b2)))) - (a0*((a7*(b2 - (z*a5))) + (a4*((z*a8) - b3)))))
#3: a3 = -------------------------------------------------------------------------------------------------
                                     ((a1*(b3 - (z*a8))) + (a7*((a2*z) - b1)))

3-> a4

         ((a3*((a1*(b3 - (z*a8))) + (a7*((a2*z) - b1)))) + (((z*a5) - b2)*((a6*a1) - (a0*a7))))
#3: a4 = --------------------------------------------------------------------------------------
                               ((a6*((a2*z) - b1)) + (a0*(b3 - (z*a8))))

3-> a5

         ((a4*((a6*((a2*z) - b1)) + (a0*(b3 - (z*a8))))) - (a3*((a1*(b3 - (z*a8))) + (a7*((a2*z) - b1)))) + (b2*((a6*a1) - (a0*a7))))
#3: a5 = ----------------------------------------------------------------------------------------------------------------------------
                                                           (((a6*a1) - (a0*a7))*z)

3-> a6

         -1*((a0*((a7*((a5*z) - b2)) + (a4*(b3 - (z*a8))))) + (a3*((a1*((z*a8) - b3)) + (a7*(b1 - (a2*z))))))
#3: a6 = ----------------------------------------------------------------------------------------------------
                                      ((a4*((a2*z) - b1)) + (a1*(b2 - (a5*z))))

3-> a7

         ((((z*a8) - b3)*((a0*a4) - (a3*a1))) - (a6*((a4*((a2*z) - b1)) + (a1*(b2 - (a5*z))))))
#3: a7 = --------------------------------------------------------------------------------------
                               ((a0*((a5*z) - b2)) + (a3*(b1 - (a2*z))))

3-> a8

         ((a7*((a0*((a5*z) - b2)) + (a3*(b1 - (a2*z))))) + (a6*((a4*((a2*z) - b1)) + (a1*(b2 - (a5*z))))) + (b3*((a0*a4) - (a3*a1))))
#3: a8 = ----------------------------------------------------------------------------------------------------------------------------
                                                           (((a0*a4) - (a3*a1))*z)

3-> z

        ((a7*((a3*b1) - (a0*b2))) + (a6*((a1*b2) - (a4*b1))) + (b3*((a0*a4) - (a3*a1))))
#3: z = --------------------------------------------------------------------------------
        ((a8*((a0*a4) - (a3*a1))) + (a7*((a3*a2) - (a0*a5))) + (a6*((a1*a5) - (a4*a2))))

3-> compare 3 with 4
Comparing #3 with #4...
Equations are identical.
3-> read simplify.in
3-> ; Some simplification tests Mathomatic has always been able to do.
3-> 
3-> clear all
1-> 2*(x^2 - y^2)^6 - (x^2 - y^2)^5*(2 x^2 - 3)

#1: (2*(((x^2) - (y^2))^6)) - ((((x^2) - (y^2))^5)*((2*(x^2)) - 3))

1-> simplify

#1: (((y^2) - (x^2))^5)*((2*(y^2)) - 3)

1-> a^3/((a-b)*(a-c)) + b^3/((b-c)*(b-a)) + c^3/((c-a)*(c-b))

          (a^3)               (b^3)               (c^3)
#2: ----------------- + ----------------- + -----------------
    ((a - b)*(a - c))   ((b - c)*(b - a))   ((c - a)*(c - b))

2-> simplify
Found polynomial Greatest Common Divisor.  Division simplified.

#2: a + b + c

2-> (x^6+a^6)*(x+1)/((x^6+a^6)*(x^2-a^2)+a^2*x^2*(x^4-a^4))+a^2*x^2*(x+1)/(x^6-a^6-a^2*x^2*(x^2-a^2))

                          ((x^6) + (a^6))*(x + 1)                                       (a^2)*(x^2)*(x + 1)
#3: ------------------------------------------------------------------- + -----------------------------------------------
    ((((x^6) + (a^6))*((x^2) - (a^2))) + ((a^2)*(x^2)*((x^4) - (a^4))))   ((x^6) - (a^6) - ((a^2)*(x^2)*((x^2) - (a^2))))

3-> simplify
Found polynomial Greatest Common Divisor.  Division simplified.
Found polynomial Greatest Common Divisor.  Division simplified.

        (x + 1)
#3: ---------------
    ((x^2) - (a^2))

3-> ((a*n + b*m)^2 + (a*m - b*n)^2) / ((a*p + b*q)^2 + (a*q - b*p)^2)

    ((((a*n) + (b*m))^2) + (((a*m) - (b*n))^2))
#4: -------------------------------------------
    ((((a*p) + (b*q))^2) + (((a*q) - (b*p))^2))

4-> simplify

    ((n^2) + (m^2))
#4: ---------------
    ((p^2) + (q^2))

4-> ((p*x^2+(k-s)*x+r)^2-(p*x^2+(k+s)*x+r)^2)/((p*x^2+(k+t)*x+r)^2-(p*x^2+(k-t)*x+r)^2)

    ((((p*(x^2)) + ((k - s)*x) + r)^2) - (((p*(x^2)) + ((k + s)*x) + r)^2))
#5: -----------------------------------------------------------------------
    ((((p*(x^2)) + ((k + t)*x) + r)^2) - (((p*(x^2)) + ((k - t)*x) + r)^2))

5-> simplify
Found polynomial Greatest Common Divisor.  Division simplified.

    -1*s
#5: ----
     t

5-> (1 - (1-(y+1)/(x+y+1)) / (1-x/(x+y+1))) / ((y+1)^2 - x / (1+x/(y-x+1))*(x*(y+1)/(y-x+1) - x))

                      (y + 1)
               (1 - -----------)
                    (x + y + 1)
          (1 - -----------------)
                         x
               (1 - -----------)
                    (x + y + 1)
#6: -----------------------------------
                       x*(y + 1)
                   x*(----------- - x)
                      (y - x + 1)
    (((y + 1)^2) - -------------------)
                              x
                    (1 + -----------)
                         (y - x + 1)

6-> simplify
Found polynomial Greatest Common Divisor.  Division simplified.

                        1
#6: -----------------------------------------
    (1 + (y^2) + (2*y) + (x*(y + 1)) + (x^2))

6-> ((2*((x*(x + (((x^2) - 1)^(1/2)))) - 1)) + 1)/((2*x*((x^2) - 1)) + ((((x^2) - 1)^(1/2))*((2*(x^2)) - 1)))

                                     1
           ((2*((x*(x + (((x^2) - 1)^-))) - 1)) + 1)
                                     2
#7: -------------------------------------------------------
                                       1
    ((2*x*((x^2) - 1)) + ((((x^2) - 1)^-)*((2*(x^2)) - 1)))
                                       2

7-> simplify ; A good simplification resulting from trying to rationalize the denominator.

           1
#7: ---------------
                 1
    (((x^2) - 1)^-)
                 2

7-> read radius.in
7-> clear all
1-> ; Some more fun formulas.  These are very similar to Heron's formula
1-> ; for the area of a triangle (see "heron.in").
1-> 
1-> s=.5*(a+b+c)

        (a + b + c)
#1: s = -----------
             2

1-> ; radius of a circle inscribed in a triangle with sides of length (a, b, c):
1-> r=(s*(s-a)*(s-b)*(s-c))^.5/s

                                     1
        ((s*(s - a)*(s - b)*(s - c))^-)
                                     2
#2: r = -------------------------------
                       s

2-> elim s using 1
Solving equation #1 for (s)...

                        (a + b + c)       (a + b + c)       (a + b + c)
           (a + b + c)*(----------- - a)*(----------- - b)*(----------- - c)
                             2                 2                 2           1
        2*(-----------------------------------------------------------------^-)
                                           2                                 2
#2: r = -----------------------------------------------------------------------
                                      (a + b + c)

2-> unfactor

            (a^2)*(b^2)   (a^4)   (a^2)*(c^2)   (b^4)   (b^2)*(c^2)   (c^4)  1
        2*((----------- - ----- + ----------- - ----- + ----------- - -----)^-)
                 8         16          8         16          8         16    2
#2: r = -----------------------------------------------------------------------
                                      (a + b + c)

2-> simp

                                                                             1
        (((2*(((a^2)*((b^2) + (c^2))) + ((b*c)^2))) - (a^4) - (b^4) - (c^4))^-)
                                                                             2
#2: r = -----------------------------------------------------------------------
                                    (2*(a + b + c))

2-> ; radius of a circle circumscribing a triangle with sides of length (a, b, c):
2-> r=a*b*c/(4*(s*(s-a)*(s-b)*(s-c))^.5)

                       a*b*c
#3: r = -----------------------------------
                                        1
        (4*((s*(s - a)*(s - b)*(s - c))^-))
                                        2

3-> elim s using 1
Solving equation #1 for (s)...

                                          a*b*c
#3: r = -------------------------------------------------------------------------
                         (a + b + c)       (a + b + c)       (a + b + c)
            (a + b + c)*(----------- - a)*(----------- - b)*(----------- - c)
                              2                 2                 2           1
        (4*(-----------------------------------------------------------------^-))
                                            2                                 2

3-> simp

                                         a*b*c
#3: r = -----------------------------------------------------------------------
                                                                             1
        (((2*(((a^2)*((b^2) + (c^2))) + ((b*c)^2))) - (a^4) - (b^4) - (c^4))^-)
                                                                             2

3-> clear all
1-> read pyth3d.in
1-> ; This input to Mathomatic arrives at the distance between two points
1-> ; in 3D space from the Pythagorean theorem (distance between two points
1-> ; in 2D space).
1-> 
1-> l^2=(x1-x2)^2+(y1-y2)^2 ; Distance formula for 2D space.

#1: l^2 = ((x1 - x2)^2) + ((y1 - y2)^2)

1-> d^2=l^2+(z1-z2)^2 ; Add another leg.

#2: d^2 = (l^2) + ((z1 - z2)^2)

2-> eliminate l ; Combine the two equations.
Solving equation #1 for (l)...

#2: d^2 = ((x1 - x2)^2) + ((y1 - y2)^2) + ((z1 - z2)^2)

2-> d ; Solve to get the distance formula for 3D space.

                                                         1
#2: d = ((((x1 - x2)^2) + ((y1 - y2)^2) + ((z1 - z2)^2))^-)*sign2
                                                         2

2-> ; The coordinate of point 1 is (x1, y1, z1) and point 2 is (x2, y2, z2).
2-> clear all
1-> read ellipse.in
1-> ; This is a general equation for an ellipse that was
1-> ; created using the rule that the sum of the distances (k)
1-> ; from any point on the perimeter (x, y) to the two foci,
1-> ; (x1, y1) and (x2, y2), is a constant.
1-> 
1-> k = ((((x1-x)^2)+((y1-y)^2))^0.5)+((((x2-x)^2)+((y2-y)^2))^0.5)

                                       1                                   1
#1: k = ((((x1 - x)^2) + ((y1 - y)^2))^-) + ((((x2 - x)^2) + ((y2 - y)^2))^-)
                                       2                                   2

1-> 
1-> ; The equation for an ellipse centered at the origin:
1-> 
1-> 1=x^2/radius1^2+y^2/radius2^2

           (x^2)         (y^2)
#2: 1 = ----------- + -----------
        (radius1^2)   (radius2^2)

2-> y

                  x             1
#2: y = ((-1*((-------^2) - 1))^-)*sign1*radius2
               radius1          2

2-> simp

                  x        1
#2: y = ((1 - (-------^2))^-)*sign1*radius2
               radius1     2

2-> 1

                                       1                                   1
#1: k = ((((x1 - x)^2) + ((y1 - y)^2))^-) + ((((x2 - x)^2) + ((y2 - y)^2))^-)
                                       2                                   2

1-> y
Raising both sides to the power of 2 and unfactoring...
Raising both sides to the power of 2 and unfactoring...
Equation was quadratic.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                   1
         ((16*(k^2)*((y2*((y2*((y2*(y2 - (4*y1))) + (4*x*(x - x2 - x1)) + (6*(y1^2)) + (2*((x2^2) + (x1^2) - (k^2))))) + (4*y1*((k^2) + (2*x*(x1 - x + x2)) - (x2^2) - (x1^2) - (y1^2))))) + (4*x*(((y1^2)*(x - x1 - x2)) - ((k^2)*x) + (x1*((x1*(x - x1)) + (k^2))) + (x2*((x2*(x - x2 + x1)) + (x1^2) + (k^2))))) + (2*(((y1^2)*((x1^2) + (x2^2) - (k^2))) - ((x2^2)*((x1^2) + (k^2))) - ((k*x1)^2))) + (y1^4) + (x2*((x2^3) - (8*(x^2)*x1))) + (x1^4) + (k^4)))^-)*sign2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   2
        (------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ + (4*x*(y2 - y1)*(x1 - x2)) + (2*((y2*((y2*(y2 - y1)) + (x2^2) - (x1^2) - (y1^2) - (k^2))) + (y1*((x1^2) - (x2^2) + (y1^2) - (k^2))))))
                                                                                                                                                                                                                                         2
#1: y
                                                                                                                                                                                                                                                                                         (4*((y1*(y1 - (2*y2))) - (k^2) + (y2^2)))

1-> simp symbolic

                                                                                                                                                                                                       1
                   ((k*((((y1^2) + (2*((x1*(x2 - (2*x))) - (y1*y2))) - (k^2) + (x1^2) + (4*((x^2) - (x*x2))) + (x2^2) + (y2^2))*((y1^2) - (2*((y1*y2) + (x1*x2))) + (y2^2) + (x1^2) - (k^2) + (x2^2)))^-)*sign2) + ((y2 - y1)*((2*x) - x1 - x2)*(x1 - x2)))
                                                                                                                                                                                                       2
        (y1 + y2 + ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------)
                                                                                                                    ((y1^2) - (k^2) + (y2^2) - (2*y1*y2))
#1: y = ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                 2

1-> quit

