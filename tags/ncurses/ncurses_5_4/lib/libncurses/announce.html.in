<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.0//EN">
<!--
  $Id$
-->
<HTML>
<HEAD>
<TITLE>Announcing ncurses @VERSION@</TITLE>
<link rev=made href="mailto:bug-ncurses@gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</HEAD>
<BODY>

<H1>Announcing ncurses @VERSION@</H1>

The ncurses (new curses) library is a free software emulation of
curses in System V Release 4.0, and more.  It uses terminfo format,
supports pads and color
and multiple highlights and forms characters and function-key mapping,
and has all the other SYSV-curses enhancements over BSD curses.<P>

In mid-June 1995, the maintainer of 4.4BSD curses declared that he
considered 4.4BSD curses obsolete, and encouraged the keepers of
Unix releases such as BSD/OS, FreeBSD and NetBSD to switch over to
ncurses.<P>

The ncurses code was developed under GNU/Linux.
It has been in use for some time with OpenBSD as the system curses library,
and on FreeBSD and NetBSD as an external package.
It should port easily to any ANSI/POSIX-conforming UNIX.
It has even been ported to OS/2 Warp!<P>

The distribution includes the library and support utilities, including a
terminfo compiler tic(1), a decompiler infocmp(1), clear(1), tput(1), tset(1),
and a termcap conversion tool captoinfo(1).  Full manual pages are provided for
the library and tools.<P>

The ncurses distribution is available via anonymous FTP at
the GNU distribution site
<A HREF="ftp://ftp.gnu.org/gnu/ncurses/">ftp://ftp.gnu.org/gnu/ncurses/</A>&nbsp;.
<br>It is also available at
<A HREF="ftp://invisible-island.net/ncurses/">ftp://invisible-island.net/ncurses/</A>&nbsp;.

<H1>Release Notes</H1>

This release is designed to be upward compatible from ncurses 5.0 through 5.4;
very few applications will require recompilation, depending on the platform.
These are the highlights from the change-log since ncurses 5.4 release.
<p>
Interface changes:
<ul>
        <li>terminfo installs "xterm-new" as "xterm" entry rather than
            "xterm-old" (aka xterm-r6).

        <li>terminfo data is installed using the tic -x option (few systems
            still use ncurses 4.2).

        <li>modify C++ binding to work with newer C++ compilers by providing
            initializers and using modern casts.  Old-style header names are
            still used in this release to allow compiling with not-so-old
            compilers.

        <li>modify parameter type in c++ binding for insch() and mvwinsch() to
            be consistent with underlying ncurses library (was char, is chtype).

        <li>change NCursesWindow::err_handler() to a virtual function.

        <li>form and menu libraries now work with wide-character data.
            Applications which bypassed the form library and manipulated the
            FIELD.buf data directly will not work properly with libformw,
            since that no longer points to an array of char.  The
            set_field_buffer() and field_buffer() functions translate to/from
            the actual field data.


        <li>add symbol to curses.h which can be used to suppress include of
          stdbool.h, e.g.,
          <pre>
                #define NCURSES_ENABLE_STDBOOL_H 0
                #include &lt;curses.h&gt;
          </pre>

        <li>change SP->_current_attr to a pointer, adjust ifdef's to ensure
            that libtinfo.so and libtinfow.so have the same ABI.  The reason
            for this is that the corresponding data which belongs to the
            upper-level ncurses library has a different size in each model.

        <li>winnstr() now returns multibyte character strings for the
            wide-character configuration.

        <li>assume_default_colors() no longer requires that
            use_default_colors() be called first.

        <li>data_ahead() now works with wide-characters.

        <li>slk_set() and slk_wset() now accept and store multibyte or
            multicolumn characters.

        <li>start_color() now returns OK if colors have
            already been started.
            start_color() also returns ERR if it cannot allocate memory.

        <li>pair_content() now returns -1 for consistency with init_pair()
            if it corresponds to the default-color.

        <li>unctrl() now returns null if its parameter does not correspond
            to an unsigned char.

</ul>
New features and improvements:
<ul>
        <li>library
          <ul>
            <li>environment variable NCURSES_NO_UTF8_ACS supports
                miscellaneous terminal emulators which ignore alternate
                character set escape sequences when in UTF-8 mode.

            <li>modify initialization of key lookup table so that if an extended
                capability (tic -x) string is defined, and its name begins with 'k',
                ncurses will automatically treat it as a key.

            <li>change GPM initialization, using dl library to load it
                dynamically at runtime.

            <li>form, menu and panel libraries support debug-tracing.

          </ul>

        <li>add NCURSES-Programming-HOWTO.html by Pradeep Padala
            (see http://tldp.org/HOWTO/NCURSES-Programming-HOWTO/).

        <li>programs:

          <li>infocmp:
            <ul>
            <li>The -i option now matches 8-bit controls against its table
                entries, e.g., so it can analyze the xterm-8bit entry.

            <li>add "-x" option to infocmp like tic's "-x", for use in "-F"
                comparisons.  This modifies infocmp to only report extended
                capabilities if the -x option is given, making this more
                consistent with tic.  Some scripts may break, since infocmp
                previous gave this information without an option.

            </ul>

          <li>tic:

            <ul>

            <li>modify termcap-parsing to retain 2-character aliases at the
                beginning of an entry if the "-x" option is used in tic.

            <li>filter out long extended names when translating to termcap
                format.  Only two characters are permissible for termcap
                capability names.

            <li>correct translation of "%%" in terminfo format to termcap,
                e.g., using "tic -C".

            <li>modify the "-c -v" options to ignore delays when comparing
                strings.  Also modify it to ignore a canceled sgr string,
                e.g., for terminals which cannot properly combine attributes
                in one control sequence.

            <li>add a check for improperly ended strings, i.e., where a
                following line begins in column 1.

            <li>add a check in tic for terminfo entries having an sgr0 but no
                sgr string.  This confuses Tru64 and HPUX curses when combined
                with color, e.g., making them leave line-drawing characters in
                odd places.

            <li>add check (with debug configuration) that provides about the
                runtime changes that would be made to sgr0 for termcap
                applications.

            </ul>

          <li>tset:

            <ul>

            <li>add -c and -w options to allow user to suppress ncurses'
                resizing of the terminal emulator window in the special case
                where it is not able to detect the true size.

            </ul>

</ul>
Major bug fixes:
<ul>

        <li>improve logic in tgetent() which adjusts the termcap "me" string
            to work with ISO-2022 string used in xterm-new.
            This is a feature that was incompletely implemented in ncurses 5.3.
            ncurses attempts to provide termcap clients with the portion of
            the sgr0 (termcap "me") string that does not reset line-drawing.

        <li>cells in the WINDOW which are continuations of a multicolumn
            character are encoded differently, making repainting more
            reliable.

        <li>amend change to setupterm() in ncurses 5.4 (20030405) which would
            reuse the value of cur_term if the same output was selected.  This
            now reuses it only when setupterm() is called from tgetent(),
            which has no notion of separate SCREENs.  Note that tgetent() must
            be called after initscr() or newterm() to use this feature.

        <li>make setcchar() now works when its wchar_t* parameter is
            pointing to a string which contains more data than can be converted.

        <li>win_wchnstr() now works for more than one cell.

        <li>resizeterm() now processes all levels of window hierarchy.

        <li>disable GPM mouse support when $TERM happens to be prefixed with
            "xterm". Gpm_Open() would otherwise assert that it can deal with
            mouse events in this case.

        <li>add SP-&gt;_screen_acs_map[], used to ensure that mapping of missing
          line-drawing characters is handled properly.  For example, ACS_DARROW
          is absent from xterm-new, and it was coincidentally displayed the
          same as ACS_BTEE.

</ul>

Portability:
<ul>
        <li>configure script:
          <ul>
          <li>new options:
            <dl>
            <dt>--enable-largefile
            <dd>set compiler and linker flags to use largefile support.

            <dt>--enable-ext-colors
            <dd>Allow encoding of 256 foreground
                and background colors, e.g., with the xterm-256color or
                xterm-88color terminfo entries.
                This requires ABI 6 because it changes the size of cchar_t.

            <dt>--enable-ext-mouse
            <dd>This defines NCURSES_MOUSE_VERSION 2, and modifies the encoding of
                mouse events to support wheel mice, which may transmit buttons
                4 and 5.  This works with xterm and similar terminal
                emulators.
                This requires ABI 6 because it changes the encoding of
                mouse events.

            <dt>--with-chtype
            <dd>overriding of the non-LP64 model's use of chtype

            <dt>--with-mmask-t
            <dd>overriding of the non-LP64 model's use of mmask_t

            <dt>--without-xterm-new
            <dd>Installs "xterm-old" as the "xterm" entry of the terminfo
                database.

            </dl>

          <li>The --with-termlib option now accepts a value which sets
              the name of the terminfo library. This would allow a packager to
              build libtinfow.so renamed to coincide with libtinfo.so

          <li>fixes/improvements for cross-compiling:

            <ul>
            <li>suppress $suffix in misc/run_tic.sh when cross-compiling.
                This allows cross-compiles to use the host's tic program to
                handle the "make install.data" step.

            <li>correct BUILD_CPPFLAGS substitution in ncurses/Makefile.in, to allow
                cross-compiling from a separate directory tree.

            </ul>

          </ul>

        <li>library:
          <ul>

            <li>add ifdef's for _LP64 in curses.h to avoid using wasteful
                64-bits for chtype and mmask_t, but add configure option
                --disable-lp64 in case anyone used that configuration.

            <li>modify C++ binding to use some C internal functions to make it
                compile properly on Solaris (and other platforms).

            <li>remove check in newwin() that prevents allocating windows that
                extend beyond the screen (Solaris does this).

            <li>check for nl_langinfo(CODESET), use it if available.

            <li>use setlocale() to query the program's current locale rather
                than using getenv().  This supports applications which rely
                upon legacy treatment of 8-bit characters when the locale is
                not initialized.

          </ul>
</ul>

<H1>Features of Ncurses</H1>

The ncurses package is fully compatible with SVr4 (System V Release 4) curses:

<UL>
<LI>All 257 of the SVr4 calls have been implemented (and are documented).
<LI>Full support for SVr4 curses features including keyboard mapping, color,
forms-drawing with ACS characters, and automatic recognition of keypad
and function keys.
<LI>An emulation of the SVr4 panels library, supporting
a stack of windows with backing store, is included.
<LI>An emulation of the SVr4 menus library, supporting
a uniform but flexible interface for menu programming, is included.
<LI>An emulation of the SVr4 form library, supporting
data collection through on-screen forms, is included.
<LI>Binary terminfo entries generated by the ncurses tic(1) implementation
are bit-for-bit-compatible with the entry format SVr4 curses uses.
<LI>The utilities have options to allow you to filter terminfo
entries for use with less capable <STRONG>curses</STRONG>/<STRONG>terminfo</STRONG>
versions such as the HP/UX and AIX ports.</UL>

The ncurses package also has many useful extensions over SVr4:

<UL>
<LI>The API is 8-bit clean and base-level conformant with the X/OPEN curses
specification, XSI curses (that is, it implements all BASE level features,
but not all EXTENDED features).  Most EXTENDED-level features not directly
concerned with wide-character support are implemented, including many
function calls not supported under SVr4 curses (but portability of all
calls is documented so you can use the SVr4 subset only).
<LI>Unlike SVr3 curses, ncurses can write to the rightmost-bottommost corner
of the screen if your terminal has an insert-character capability.
<LI>Ada95 and C++ bindings.
<LI>Support for mouse event reporting with X Window xterm and OS/2 console windows.
<LI>Extended mouse support via Alessandro Rubini's gpm package.
<LI>The function <CODE>wresize()</CODE> allows you to resize windows, preserving
their data.
<LI>The function <CODE>use_default_colors()</CODE> allows you to
use the terminal's default colors for the default color pair,
achieving the effect of transparent colors.
<LI>The functions <CODE>keyok()</CODE>
and <CODE>define_key()</CODE> allow
you to better control the use of function keys,
e.g., disabling the ncurses KEY_MOUSE,
or by defining more than one control sequence to map to a given key code.
<LI>Support for 16-color terminals, such as aixterm and XFree86 xterm.
<LI>Better cursor-movement optimization.  The package now features a
cursor-local-movement computation more efficient than either BSD's
or System V's.
<LI>Super hardware scrolling support.  The screen-update code incorporates
a novel, simple, and cheap algorithm that enables it to make optimal
use of hardware scrolling, line-insertion, and line-deletion
for screen-line movements.  This algorithm is more powerful than
the 4.4BSD curses quickch() routine.
<LI>Real support for terminals with the magic-cookie glitch.  The
screen-update code will refrain from drawing a highlight if the magic-
cookie unattributed spaces required just before the beginning and
after the end would step on a non-space character.  It will
automatically shift highlight boundaries when doing so would make it
possible to draw the highlight without changing the visual appearance
of the screen.
<LI>It is possible to generate the library with a list of pre-loaded
fallback entries linked to it so that it can serve those terminal types even
when no terminfo tree or termcap file is accessible (this may be useful
for support of screen-oriented programs that must run in single-user mode).
<LI>The tic(1)/captoinfo utility provided with ncurses has the
ability to translate many termcaps from the XENIX, IBM and
AT&amp;T extension sets.
<LI>A BSD-like tset(1) utility is provided.
<LI>The ncurses library and utilities will automatically read terminfo
entries from $HOME/.terminfo if it exists, and compile to that directory
if it exists and the user has no write access to the system directory.
This feature makes it easier for users to have personal terminfo entries
without giving up access to the system terminfo directory.
<LI>You may specify a path of directories to search for compiled
descriptions with the environment variable TERMINFO_DIRS (this
generalizes the feature provided by TERMINFO under stock System V.)
<LI>In terminfo source files, use capabilities may refer not just to
other entries in the same source file (as in System V) but also to
compiled entries in either the system terminfo directory or the user's
$HOME/.terminfo directory.
<LI>A script (<STRONG>capconvert</STRONG>) is provided to help BSD users
transition from termcap to terminfo.  It gathers the information in a
TERMCAP environment variable and/or a ~/.termcap local entries file
and converts it to an equivalent local terminfo tree under $HOME/.terminfo.
<LI>Automatic fallback to the /etc/termcap file can be compiled in
when it is not possible to build a terminfo tree.  This feature is neither
fast nor cheap, you don't want to use it unless you have to,
but it's there.
<LI>The table-of-entries utility <STRONG>toe</STRONG> makes it easy for users to
see exactly what terminal types are available on the system.
<LI>The library meets the XSI requirement that every macro entry
point have a corresponding function which may be linked (and will be
prototype-checked) if the macro definition is disabled with
<CODE>#undef</CODE>.
<LI>An HTML "Introduction to Programming with NCURSES" document provides
a narrative introduction to the curses programming interface.
</UL>

<H1>State of the Package</H1>

Numerous bugs present in earlier versions have been fixed; the
library is far more reliable than it used to be.  Bounds checking in many
`dangerous' entry points has been improved.  The code is now type-safe
according to gcc -Wall.  The library has been checked for malloc leaks and
arena corruption by the Purify memory-allocation tester.<P>

The ncurses code has been tested with a wide variety of applications
including (versions starting with those noted):
<DL>
<DT> cdk
<DD> Curses Development Kit
<br>
<A HREF="http://invisible-island.net/cdk/">http://invisible-island.net/cdk/</A>
<br>
<A HREF="http://www.vexus.ca/products/CDK/">http://www.vexus.ca/products/CDK/</a>
<DT> ded
<DD> directory-editor
<br>
<A HREF="http://invisible-island.net/ded/">http://invisible-island.net/ded/</A>
<DT> dialog
<DD> the underlying application used in Slackware's setup, and the basis
for similar applications on GNU/Linux.
<br>
<A HREF="http://invisible-island.net/dialog/">http://invisible-island.net/dialog/</A>
<DT> lynx
<DD> the character-screen WWW browser
<br>
<A HREF="http://lynx.isc.org/release/">http://lynx.isc.org/release/</A>
<DT> Midnight Commander
<DD> file manager
<br>
<A HREF="http://www.ibiblio.org/mc/">http://www.ibiblio.org/mc/</A>
<DT> mutt
<DD> mail utility
<br>
<A HREF="http://www.mutt.org/">http://www.mutt.org/</A>
<DT> ncftp
<DD> file-transfer utility
<br>
<A HREF="http://www.ncftp.com/">http://www.ncftp.com/</A>
<DT> nvi
<DD> New vi versions 1.50 are able to use ncurses versions 1.9.7 and later.
<br>
<A HREF="http://www.bostic.com/vi/">http://www.bostic.com/vi/</A>
<br>
<DT> pinfo
<DD> Lynx-like info browser.
<A HREF="http://dione.ids.pl/~pborys/software/pinfo/">http://dione.ids.pl/~pborys/software/pinfo/</A>
<DT> tin
<DD> newsreader, supporting color, MIME
<A HREF="http://www.tin.org/">http://www.tin.org/</A>
<DT> vh-1.6
<DD> Volks-Hypertext browser for the Jargon File
<br>
<A HREF="http://www.debian.org/Packages/unstable/text/vh.html">http://www.debian.org/Packages/unstable/text/vh.html</A>
</DL>
as well as some that use ncurses for the terminfo support alone:
<DL>
<DT> minicom
<DD> terminal emulator
<br>
<A HREF="http://www.netsonic.fi/~walker/minicom.html">http://www.netsonic.fi/~walker/minicom.html</A>
<DT> vile
<DD> vi-like-emacs
<br>
<A HREF="http://invisible-island.net/vile/">http://invisible-island.net/vile/</A>
</DL>
<P>

The ncurses distribution includes a selection of test programs (including
a few games).

<H2>Who's Who and What's What</H2>

Zeyd Ben-Halim
started it from a previous package pcurses, written by Pavel Curtis.
Eric S. Raymond
continued development.
J&uuml;rgen Pfeifer wrote most of the form and menu libraries.
Ongoing work is being done by
<A HREF="mailto:dickey@invisible-island.net">Thomas Dickey</A>.
Thomas Dickey
acts as the maintainer for the Free Software Foundation,
which holds the copyright on ncurses.
Contact the current maintainers at
<A HREF="mailto:bug-ncurses@gnu.org">bug-ncurses@gnu.org</A>.
<P>

To join the ncurses mailing list, please write email to
<CODE>bug-ncurses-request@gnu.org</CODE> containing the line:
<PRE>
             subscribe &lt;name&gt;@&lt;host.domain&gt;
</PRE>

This list is open to anyone interested in helping with the development and
testing of this package.<P>

Beta versions of ncurses and patches to the current release are made available at
<A HREF="ftp://invisible-island.net/ncurses/">ftp://invisible-island.net/ncurses/</A>&nbsp;.

<H2>Future Plans</H2>
<UL>
<LI>Extended-level XPG4 conformance, with internationalization support.
<LI>Ports to more systems, including DOS and Windows.
</UL>
We need people to help with these projects.  If you are interested in working
on them, please join the ncurses list.

<H2>Other Related Resources</H2>

The distribution provides a newer version of the terminfo-format
terminal description file maintained by
<A HREF="http://www.catb.org/~esr/terminfo/">Eric Raymond</A>&nbsp;.
Unlike the older version, the termcap and terminfo data are provided
in the same file.<P>

You can find lots of information on terminal-related topics
not covered in the terminfo file at
<A HREF="http://www.cs.utk.edu/~shuford/terminal_index.html">Richard Shuford's
archive</A>&nbsp;.
</BODY>
</HTML>
<!--
# The following sets edit modes for GNU EMACS
# Local Variables:
# mode:html
# case-fold-search:nil
# fill-column:70
# End:
-->
