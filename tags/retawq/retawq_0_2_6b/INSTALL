retawq/INSTALL - installation instructions
This file is part of retawq (<http://retawq.sourceforge.net/>), a network
client created by Arne Thomassen; retawq is basically released under certain
versions of the GNU General Public License and WITHOUT ANY WARRANTY.
Read the file COPYING for license details, README for program information.
Copyright (C) 2001-2005 Arne Thomassen <arne@arne-thomassen.de>

Short instructions: run "./configure && make && make install", as usual.

Long instructions:

To install retawq, do the following:

- Uncompress the compressed retawq archive file, for example with one of the
  following commands:

  either:  tar -xz <retawq-0.2.6b.tar.gz
  or:      gzip -d retawq-0.2.6b.tar.gz && tar -xf retawq-0.2.6b.tar

  This will create a new directory named "retawq-0.2.6b" in the same
  directory which contains the compressed file.

- Change into the newly created directory:

  cd retawq-0.2.6b

- Configure retawq for compilation; retawq supports both the "classical"
  Makefiles and the more modern configure scripts; just choose what you like.
  The compile-time configuration options are explained in the documentation
  file retawq/docu/ctconfig.html.

  1. classical Makefile

  You might want to change some of the compile-time configuration options, e.g.
  the C compiler (default: gcc) or the text/graphics mode (default: ncurses).
  To do this, open the file "Makefile" in a text editor (emacs, vi, ...) and
  change the options as described there. If you use the classical Makefile and
  the compilation of the program fails on your computer, this probably means
  that your computer requires a more flexible adaption, so you should use the
  configure script.

  OR

  2. configure script

  Run the configure script ("./configure"), specifying the configuration
  options as command-line arguments for this script. You might especially want
  to change the text/graphics mode if the default library (ncurses) is not
  available on your computer. If you don't use the GNU C compiler gcc, set the
  environment variable CC to your C compiler like so:
  "CC=cc; export CC; ./configure" or simply "./configure CC=cc".

  Note that the script has not been generated by GNU autoconf, but by a
  different tool, so it has different options; try "./configure --help".

  The script analyzes certain programs and libraries on your computer which are
  needed for retawq itself or for building the program. - If this style doesn't
  work for you for whatever reason, you can easily go back to the classical
  Makefile because that is saved as "Makefile-classical". You just have to say
  "mv Makefile-classical Makefile" and go to point 1.

- Build an executable binary file ("the program") from the source code files:

  make

- Now you can start the program:

  ./retawq

- You might want to have the program installed "properly" on your computer; but
  note that you probably have to be logged in as user "root" to do this:

  make install

  This will copy the program itself to /usr/local/bin by default; you can
  choose a different directory: 1. If you use the classical Makefile, change
  PATH_INSTALL_BIN in retawq/Makefile. 2. If you run the configure script, you
  can use the command-line options "--path-prefix=..." and "--path-bin=...".

  This will also copy the HTML documentation files to /usr/local/doc/retawq by
  default; you can choose a different directory: 1. If you use the classical
  Makefile, change PATH_INSTALL_DOC in retawq/Makefile. 2. If you run the
  configure script, you can use the command-line options "--path-prefix=..."
  and "--path-doc=...".

  If you have enabled the compile-time configuration option for i18n
  (internationalization; see retawq/docu/ctconfig.html), this will also copy
  the language-dependent .mo files to the appropriate directories; make sure
  that you've set the option PATH_INSTALL_LOCALE (resp. "--path-locale=...")
  correctly before installing.

That's it. Have fun!
