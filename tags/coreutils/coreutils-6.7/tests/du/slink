#!/bin/sh
# Ensure that the size of a long-named-symlink is > 0.

# Copyright (C) 2002, 2003, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  du --version
fi

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

# Determine if `.' is on a local (would non-NFS be sufficient?) file system.
# On at least some NFS implementations, symlinks never take up space,
df --local . | tail -n +2 > tmp
# So if this is a non-local file system, skip the test.
if test -s tmp; then
  : # Ok.
else
  echo "$0: skipping this test, since \`.' is on a non-local file system" 1>&2
  (exit 77); exit 77
fi

df --type=xfs . | tail -n +2 > tmp
if test -s tmp; then
  # At least on Irix-6.5.19, when using an xfs file system,
  # each created symlink (name lengths up to 255) would have a size of `0'.
  echo "$0: skipping this test, since \`.' is on an XFS file system" 1>&2
  (exit 77); exit 77
fi

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0
symlink_name_lengths='1 15 16 31 32 59 60 63 64 127 128 255 256 511 512 1024'
for len in $symlink_name_lengths; do
  name=`seq 1 $len|tr -c x y |head -c$len`
  # Record the names of symlinks that are successfully created.
  ln -fs $name $len > /dev/null 2>&1 \
    && symlinks="$symlinks $len"
done

du -a $symlinks > out || fail=1

# Require that at least one of these symlinks has a non-zero size.
grep '^[1-9]' out > /dev/null || fail=1

(exit $fail); exit $fail
