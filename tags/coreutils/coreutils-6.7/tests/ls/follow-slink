#!/bin/sh
# make sure ls -L always follows symlinks

# Copyright (C) 2000, 2002, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  ls --version
fi

pwd=`pwd`
tmp=follow-sl.$$
trap 'status=$?; cd "$pwd" && rm -rf $tmp && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1

# Isolate output files from directory being listed
mkdir dir || framework_failure=1
cd dir || framework_failure=1
ln -s link link || framework_failure=1

# Make sure the symlink was created.
# `ln -s link link' succeeds, but creates no file on
# systems running some DJGPP-2.03 libc.
ls -F link > /dev/null || framework_failure=1

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  (exit 1); exit 1
fi

fail=0

# When explicitly listing a broken link, the command must fail.
ls -L link 2> /dev/null && fail=1

# When encountering a broken link implicitly, Solaris 9 and OpenBSD 3.4
# list the link, provided no further information about the link needed
# to be printed.  Since POSIX does not specify one way or the other, we
# opt for compatibility (this was broken in 5.3.0 through 5.94).
ls -L > ../out || fail=1

cd .. || fail=1

cat <<\EOF > exp
link
EOF

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
