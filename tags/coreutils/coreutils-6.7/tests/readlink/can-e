#!/bin/sh
# tests for canonicalize-existing mode (readlink -e).

# Copyright (C) 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  readlink --version
fi

pwd=`pwd`
t0=`echo "$0" |sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap 'status=$?; (exit $status); exit $status' 1 2 13 15

fail=1
while :; do
  bindir=`cd ../../src && pwd`|| break
  my_pwd=`"$bindir/pwd"` || break

  mkdir -p $tmp || break
  cd $tmp || break

  mkdir subdir removed || break
  touch regfile || break

  ln -s regfile link1 || break
  ln -s subdir link2 || break
  ln -s missing link3 || break
  ln -s subdir/missing link4 || break

  fail=0
  break
done

if test $fail = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=1
while :; do
  cd "$pwd/$tmp/removed" || break

  # Skip this test if the system doesn't let you remove the working directory.
  if rmdir ../removed 2>/dev/null; then
    v=`readlink -e .` && break
    test -z "$v" || break
  fi

  cd "$pwd/$tmp" || break

  fail=0
  break
done

if test $fail = 1; then
  (exit $fail); exit $fail
fi

for p in "" "$pwd/$tmp/"; do
  fail=1

  v=`readlink -e "${p}"regfile` || break
  test "$v" = "$my_pwd/$tmp/regfile" || break

  v=`readlink -e "${p}"./regfile/` && break
  test -z "$v" || break

  v=`readlink -e "${p}"subdir` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -e "${p}"./subdir/` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -e "${p}"missing` && break
  test -z "$v" || break

  v=`readlink -e "${p}"./missing/` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link1` || break
  test "$v" = "$my_pwd/$tmp/regfile" || break

  v=`readlink -e "${p}"./link1/` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link1/more` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link2` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -e "${p}"./link2/` || break
  test "$v" = "$my_pwd/$tmp/subdir" || break

  v=`readlink -e "${p}"link2/more` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link3` && break
  test -z "$v" || break

  v=`readlink -e "${p}"./link3/` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link3/more` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link4` && break
  test -z "$v" || break

  v=`readlink -e "${p}"./link4/` && break
  test -z "$v" || break

  v=`readlink -e "${p}"link4/more` && break
  test -z "$v" || break

  fail=0
done

(exit $fail); exit $fail
