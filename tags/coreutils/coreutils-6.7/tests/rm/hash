#!/bin/sh
# Exercise a bug that was fixed in 4.0s.
# Before then, rm would fail occasionally, sometimes via
# a failed assertion, others with a seg fault.

# Copyright (C) 2000, 2002, 2003, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

. $srcdir/../expensive

if test "$VERBOSE" = yes; then
  set -x
  rm --version
fi

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp;tmp=$t0/$$
trap 'status=$?; cd "$pwd" && rm -rf $t0 || exit $?; exit $status' 0
trap 'exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp

# Create a hierarchy with 3*26 leaf directories, each at depth 153.
echo "$0: creating 78 trees, each of depth 153; this will take a while..." >&2
y=`seq 1 150|tr -sc '\n' y|tr '\n' /`
for i in 1 2 3; do
  for j in a b c d e f g h i j k l m n o p q r s t u v w x y z; do
    mkdir -p t/$i/$j/$y || framework_failure=1
  done
done

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  exit 1
fi

fail=0

rm -r t || fail=1

(exit $fail); exit $fail
