#!/bin/sh
# exercise another small part of remove.c

# Copyright (C) 2002, 2003, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  rm --version
fi

. $srcdir/../envvar-check
. $srcdir/../lang-default
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir -p z || framework_failure=1
cd z || framework_failure=1
touch empty empty-u || framework_failure=1
echo not-empty > fu
ln -s empty-f slink
ln -s . slinkdot
mkdir d du || framework_failure=1
chmod u-w fu du empty-u || framework_failure=1
cd ..

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

cat <<EOF > in
y
y
y
y
y
y
y
y
y
EOF

# Both of these should fail.
rm -ir z < in > out 2>&1 || fail=1

# Given input like `rm: ...? rm: ...? ' (no trailing newline),
# the `head...' part of the pipeline below removes the trailing space, so
# that sed doesn't have to deal with a line lacking a terminating newline.
# This avoids a bug whereby some vendor-provided (Tru64) versions of sed
# would mistakenly tack a newline onto the end of the output.
tr '?' '\n' < out | head --bytes=-1 | sed 's/^ //' |sort > o2
mv o2 out

sort <<EOF > exp || fail=1
rm: descend into directory \`z'
rm: remove regular empty file \`z/empty'
rm: remove write-protected regular file \`z/fu'
rm: remove write-protected regular empty file \`z/empty-u'
rm: remove symbolic link \`z/slink'
rm: remove symbolic link \`z/slinkdot'
rm: remove directory \`z/d'
rm: remove write-protected directory \`z/du'
rm: remove directory \`z'
EOF

cmp out exp || fail=1
test $fail = 1 && diff -u out exp 2> /dev/null

test -d z && fail=1

(exit $fail); exit $fail
