context default
    keyword whole forever brightmagenta
    keyword whole foreach brightmagenta
    keyword whole using brightmagenta
    keyword whole orelse brightmagenta
    keyword whole andelse brightmagenta
    keyword whole loop brightmagenta
    keyword whole variable brightmagenta
    keyword whole define brightmagenta
    keyword whole break brightmagenta
    keyword whole case brightmagenta
    keyword whole continue brightmagenta
    keyword whole do brightmagenta
    keyword whole else brightmagenta
    keyword whole for brightmagenta
    keyword whole goto brightmagenta
    keyword whole if brightmagenta
    keyword whole !if brightmagenta
    keyword whole return brightmagenta
    keyword whole sizeof brightmagenta
    keyword whole static brightmagenta
    keyword whole struct brightmagenta
    keyword whole switch brightmagenta
    keyword whole typedef brightmagenta
    keyword whole while brightmagenta
    keyword whole typecast brightmagenta
    keyword whole delete brightmagenta
    keyword whole private brightmagenta
    keyword whole protected brightmagenta
    keyword whole public brightmagenta
    keyword whole namespace brightmagenta
    keyword whole implements brightmagenta

    keyword whole EXIT_BLOCK brightmagenta
    keyword whole ERROR_BLOCK brightmagenta
    keyword whole EXECUTE_ERROR_BLOCK brightmagenta

    keyword whole and brightmagenta
    keyword whole or brightmagenta
    keyword whole xor brightmagenta


    keyword whole Char_Type yellow
    keyword whole UChar_Type yellow
    keyword whole Short_Type yellow
    keyword whole UShort_Type yellow
    keyword whole Integer_Type yellow
    keyword whole UInteger_Type yellow
    keyword whole Long_Type yellow
    keyword whole ULong_Type yellow
    keyword whole Float_Type yellow
    keyword whole Double_Type yellow
    keyword whole Complex_Type yellow
    keyword whole String_Type yellow
    keyword whole BString_Type yellow
    keyword whole Struct_Type yellow
    keyword whole Ref_Type yellow
    keyword whole Null_Type yellow
    keyword whole Array_Type yellow
    keyword whole DataType_Type yellow
    keyword whole Assoc_Type yellow

    keyword '\\\{"abtnvfr\}' brightgreen
    keyword '\\\{0123\}\{01234567\}\{01234567\}' brightgreen
    keyword '\\'' brightgreen
    keyword '\\\\' brightgreen
    keyword '\\0' brightgreen
    keyword '\{\s!"#$%&()\*\+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\}' brightgreen

    keyword > brightmagenta
    keyword < brightmagenta
    keyword \+ brightmagenta
    keyword - brightmagenta
    keyword \* brightmagenta
    keyword / brightmagenta
    keyword = brightmagenta
    keyword != brightmagenta
    keyword == brightmagenta
    keyword ; brightmagenta
    keyword { white
    keyword } white
    keyword ( white
    keyword ) white
    keyword [ white
    keyword ] white
    keyword , white
    keyword : white
context % \n brown
    spellcheck
context linestart # \n brightred
    keyword \\\n yellow
    keyword /\**\*/ brown
    keyword "+" red
    keyword <+> red
context " " green
    spellcheck
    keyword \\" brightgreen
    keyword \\\n brightgreen
    keyword %% brightgreen
    keyword %\[#0\s-\+,\]\[0123456789\]\[.\]\[0123456789\]\[L\]\{eEfgGoxX\} brightgreen
    keyword %\[0\s-\+,\]\[0123456789\]\[.\]\[0123456789\]\[hl\]\{diu\} brightgreen
    keyword %\[hl\]n brightgreen
    keyword %\[.\]\[0123456789\]s brightgreen
    keyword %[*] brightgreen
    keyword %c brightgreen
    keyword \\\{0123\}\{01234567\}\{01234567\} brightgreen
    keyword \\\\ brightgreen
    keyword \\' brightgreen
    keyword \\\{abtnvfr\} brightgreen
