&begin_parameters
     cpu       option(-processor)name,allow(mc68020,i80860,pa7100,pa8000),=mc68020
     recompile switch(-recompile),=1
     rebind    switch(-rebind),=1
     tgt_mod   option(-target_module)module_name,='(current_module)'
     version   option(-version)name,allow(alpha,ga),=ga
&end_parameters
&echo command_lines
&
& This is a VOS command macro to build Perl 5 for the Stratus VOS
& operating system. You need to have the VOS POSIX.1 support
& loaded on your system. Change the following statement, if
& necessary, to assign the correct pathname of the directory that
& contains VOS POSIX.1 support.
&
&if &version& = alpha
&then &set_string POSIX >vos_ftp_site>pub>vos>alpha>posix
&else &set_string POSIX >system>posix_object_library
&
& See if the site has VOS POSIX.1 support loaded. If not, quit now.
&
&if ^ (exists &POSIX& -directory)
&then &do
      &display_line build: VOS POSIX.1 support not found. &POSIX&
      &return 1
      &end
&
&if &cpu& = mc68020 & &version& = ga | &cpu& = i80860 & &version& = ga
&then &do
      &display_line build: "-version ga" is incompatible with "-processor mc68020 or i80860"
      &return 1
      &end
&
& Set up the appropriate directory suffix for each architecture.
&
&if &cpu& = mc68020
&then &set_string obj ''
&if &cpu& = i80860
&then &set_string obj .860
&if &cpu& = pa7100
&then &set_string obj .7100
&if &cpu& = pa8000
&then &set_string obj .8000
&
&if &cpu& = mc68020
&then &set_string obj2 .68k
&else &set_string obj2 &obj&
&
&set_string cpu -processor &cpu&
&
& If requested, compile the source code.
&
&if &recompile& = 0
&then &goto CHECK_REBIND
&
&if &version& = alpha
&then !set_library_paths include << < &POSIX&>incl &+
     (master_disk)>system>include_library
&else !set_library_paths include << < &+
     (master_disk)>system>stcp>include_library &+
     (master_disk)>system>include_library
&
&if (exists *.obj -link)
&then !unlink *.obj -no_ask -brief
&
& Suppress several harmless compiler warning and advice messages.
& Use -list -show_include all -show_macros both_ways when debugging.
&
&set_string cflags '-u -O4 -D_POSIX_C_SOURCE=199506L -DPERL_CORE'
&
& The following is a work-around for stcp-1437,8,9
&
&if &version& = ga
&then &set_string cflags &cflags& -D_BSD_SOURCE
&
!cc <<av.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<deb.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<doio.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<doop.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<dump.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<ebcdic.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<globals.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<gv.c -suppress_diag 2006 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<hv.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
&   !cc <<malloc.c -suppress_diag 2006 &cpu& &cflags&
&   &if (command_status) ^= 0 &then &return
!cc <<mg.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<miniperlmain.c -suppress_diag 2006 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<op.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
&
& We are essentially building miniperl for now. Until we
& get a POSIX shell on VOS we won't add any of the extensions.
&
& !link <<op.c opmini.c -delete
& &if (command_status) ^= 0 &then &return
& !cc opmini.c -suppress_diag 2006 2064 2065 &cpu& &cflags& -DPERL_EXTERNAL_GLOB
& &if (command_status) ^= 0 &then &return
& !unlink opmini.c
& &if (command_status) ^= 0 &then &return
&
!cc <<perl.c -suppress_diag 2006 2053 2065 &cpu& &cflags& &+
     -DARCHLIB="/system/ported/perl/lib/5.6&obj2&" &+
     -DARCHLIB_EXP="/system/ported/perl/lib/5.6&obj2&" &+
     -DSITEARCH="/system/ported/perl/lib/site/5.6&obj2&" &+
     -DSITEARCH_EXP="/system/ported/perl/lib/site/5.6&obj2&"
&if (command_status) ^= 0 &then &return
!cc <<perlapi.c &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<perlio.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<perly.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
& compiling pp.c for the PA-RISC hits compiler bug pcg-98; avoid it.
& The bug is fixed in VOS 14.1.0 and all later releases.
&if (index (string &cpu&) pa) > 0 & (module_info os_release) < 'VOS Release 14.1.0'
&then !cc <<pp.c -suppress_diag 2006 2064 2065 &cpu& &cflags& -no_schedule
&else !cc <<pp.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<pp_ctl.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<pp_hot.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<pp_sys.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<regcomp.c -suppress_diag 2006 2064 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<regexec.c -suppress_diag 2006 2064 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<run.c -suppress_diag 2006 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<scope.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<sv.c -suppress_diag 2006 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<taint.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<toke.c -suppress_diag 2006 2064 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<universal.c -suppress_diag 2006 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<utf8.c -suppress_diag 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<util.c -suppress_diag 2006 2065 &cpu& &cflags&
&if (command_status) ^= 0 &then &return
!cc <<xsutils.c &cpu& &cflags&
&if (command_status) ^= 0 &then &return
&if &version& = alpha
&then &do
!cc <vos_dummies.c &cpu& -O4
&if (command_status) ^= 0 &then &return
&end
&
& If requested, bind the executable program module.
&
&label CHECK_REBIND
&if &rebind& = 0
&then &return
&
&if (exists -directory (master_disk)>system>tcp_os>object_library&obj2&)
&then &set_string tcp_objlib (master_disk)>system>tcp_os>object_library&obj2&
&else &set_string tcp_objlib (master_disk)>system>tcp_os>object_library
&
&if (exists -directory (master_disk)>system>stcp>object_library&obj2&)
&then &set_string stcp_objlib (master_disk)>system>stcp>object_library&obj2&
&else &set_string stcp_objlib (master_disk)>system>stcp>object_library
&
&if (exists -directory (master_disk)>system>object_library&obj2&)
&then &set_string objlib (master_disk)>system>object_library&obj2&
&else &set_string objlib (master_disk)>system>object_library
&
&if (exists -directory (master_disk)>system>c_object_library&obj2&)
&then &set_string c_objlib (master_disk)>system>c_object_library&obj2&
&else &set_string c_objlib (master_disk)>system>c_object_library
&
&if (exists -directory (master_disk)>system>posix_object_library&obj2&)
&then &set_string posix_objlib (master_disk)>system>posix_object_library&obj2&
&else &set_string posix_objlib (master_disk)>system>posix_object_library
&
&if &version& = alpha
&then !set_library_paths object . &tcp_objlib& &+
     &POSIX&>c>sysv_runtime>obj&obj& &+
     &POSIX&>c>runtime>obj&obj& &+
     &c_objlib& &objlib&
&else !set_library_paths object . &stcp_objlib& &+
     &stcp_objlib&>common &+
     &stcp_objlib&>net &+
     &stcp_objlib&>sbsd &+
     &stcp_objlib&>socket &+
     &posix_objlib&>bsd &+
     &posix_objlib& &+
     &c_objlib& &objlib&
&if &version& = alpha
&then !bind -control <perl.bind vos_dummies &+
     &tcp_objlib&>tcp_runtime &tcp_objlib&>tcp_gethost &+
     &cpu& -target_module &tgt_mod& -map
&else !bind -control <perl.bind &cpu& -target_module &tgt_mod& -map
&if (command_status) ^= 0 &then &return
!delete_file *.obj -no_ask -brief
!unlink *.obj -no_ask -brief
