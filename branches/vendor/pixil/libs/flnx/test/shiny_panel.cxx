// generated by Fast Light User Interface Designer (fluid) version 1.00

#include "shiny_panel.h"

Fl_Box *test_box[3]={(Fl_Box *)0};

Fl_Value_Slider *color_slider[4]={(Fl_Value_Slider *)0};

Fl_Slider *thickness_slider=(Fl_Slider *)0;

Fl_Window* make_panels() {
  Fl_Window* w;
  { Fl_Window* o = new Fl_Window(452, 320);
    w = o;
    { Fl_Box* o = test_box[0] = new Fl_Box(130, 80, 180, 30, "label");
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = test_box[1] = new Fl_Box(130, 120, 180, 30, "label");
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = test_box[2] = new Fl_Box(130, 150, 180, 70, "label");
      o->box(FL_UP_BOX);
      Fl_Group::current()->resizable(o);
    }
    { Fl_Group* o = new Fl_Group(10, 70, 80, 80);
      { Fl_Button* o = new Fl_Button(10, 70, 40, 40, "@7->");
        o->type(102);
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)which_cb, (void*)(3));
      }
      { Fl_Button* o = new Fl_Button(50, 70, 40, 40, "@9->");
        o->type(102);
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)which_cb, (void*)(2));
      }
      { Fl_Button* o = new Fl_Button(10, 110, 40, 40, "@1->");
        o->type(102);
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)which_cb, (void*)(0));
        o->set();
      }
      { Fl_Button* o = new Fl_Button(50, 110, 40, 40, "@3->");
        o->type(102);
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)which_cb, (void*)(1));
      }
      o->end();
    }
    { Fl_Button* o = new Fl_Button(10, 150, 80, 40, "INSIDE");
      o->type(1);
      o->callback((Fl_Callback*)inside_cb);
    }
    { Fl_Value_Slider* o = color_slider[0] = new Fl_Value_Slider(320, 0, 30, 320);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->color(7);
      o->selection_color(47);
      o->callback((Fl_Callback*)color_slider_cb, (void*)(0));
      o->minimum(255); o->maximum(0);;
      o->precision(0);
    }
    { Fl_Value_Slider* o = color_slider[1] = new Fl_Value_Slider(350, 0, 30, 320);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->color(9);
      o->selection_color(47);
      o->callback((Fl_Callback*)color_slider_cb, (void*)(1));
      o->minimum(255); o->maximum(0);;
      o->precision(0);
    }
    { Fl_Value_Slider* o = color_slider[2] = new Fl_Value_Slider(380, 0, 30, 320);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->color(10);
      o->selection_color(47);
      o->callback((Fl_Callback*)color_slider_cb, (void*)(2));
      o->minimum(255); o->maximum(0);;
      o->precision(0);
    }
    { Fl_Value_Slider* o = color_slider[3] = new Fl_Value_Slider(410, 0, 30, 320);
      o->type(4);
      o->box(FL_FLAT_BOX);
      o->color(12);
      o->selection_color(47);
      o->callback((Fl_Callback*)color_slider_cb, (void*)(3));
      o->minimum(255); o->maximum(0);;
      o->precision(0);
    }
    { Fl_Slider* o = thickness_slider = new Fl_Slider(130, 240, 180, 30, "thickness");
      o->type(5);
      o->box(FL_FLAT_BOX);
      o->callback((Fl_Callback*)thickness_cb);
      o->minimum(1);
      o->maximum(10);
      o->step(1);
    }
    { Fl_Button* o = new Fl_Button(10, 230, 80, 30, "dump");
      o->callback((Fl_Callback*)dump_cb);
    }
    o->end();
  }
  return w;
}
