# Scott Billings

context default

	keyword whole with	yellow
	keyword whole use	yellow
	keyword whole loop	yellow
	keyword whole is	yellow
	keyword whole of	yellow
	keyword whole range	yellow
	keyword whole abs	yellow
	keyword whole delta	yellow
	keyword whole return	yellow

# prevents - keyword from interfering with comment
	keyword --	brown

	keyword :=	brightgreen
	keyword .	brightgreen
	keyword ;	brightgreen
	keyword ..	brightgreen
	keyword :	brightgreen
	keyword (	brightgreen
	keyword )	brightgreen
	keyword \+	brightgreen
	keyword -	brightgreen
	keyword /	brightgreen
	keyword \*	brightgreen
	keyword \*\*	brightgreen
	keyword #	brightgreen
	keyword =>	brightgreen
	keyword ,	brightgreen
	keyword '	brightgreen
	keyword =	brightgreen
	keyword /=	brightgreen

	keyword whole begin	brightred
	keyword whole end	brightred
	keyword whole exit	brightred
	keyword whole for	brightred
	keyword whole while	brightred
	keyword whole if	brightred
	keyword whole then	brightred
	keyword whole else	brightred
	keyword whole case	brightred
	keyword whole when	brightred
	keyword whole elsif	brightred

	keyword whole integer	cyan
	keyword whole float	cyan
	keyword whole character	cyan
	keyword whole string	cyan
	keyword whole boolean	cyan
	keyword whole fixed	cyan
	keyword whole array	cyan

	keyword whole type	white
	keyword whole subtype	white
	keyword whole new_line	white
	keyword whole goto	white

	keyword whole new	magenta
	keyword whole package	magenta
	keyword whole procedure	magenta
	keyword whole function	magenta

context exclusive -- \n	brown
context " "	green/green

