#!/bin/sh
# Ensure that moving hard-linked arguments onto existing destinations works.
# Likewise when using cp --preserve=link.

# Copyright (C) 2003, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  mv --version
  cp --version
fi

. $srcdir/../envvar-check
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir dst || framework_failure=1
(cd dst && touch a b c) || framework_failure=1
touch a || framework_failure=1
ln a b || framework_failure=1
ln a c || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

# ======================================
cp --preserve=link a b c dst || fail=1
# The source files must remain.
test -f a || fail=1
test -f b || fail=1
test -f c || fail=1
cd dst

# Three destination files must exist.
test -f a || fail=1
test -f b || fail=1
test -f c || fail=1

# The three i-node numbers must be the same.
ia=`ls -i a|sed 's/ a//'`
ib=`ls -i b|sed 's/ b//'`
ic=`ls -i c|sed 's/ c//'`
test $ia = $ib || fail=1
test $ia = $ic || fail=1

cd ..
rm -f dst/[abc]
(cd dst && touch a b c)

# ======================================
mv a b c dst || fail=1

# The source files must be gone.
test -f a && fail=1
test -f b && fail=1
test -f c && fail=1
cd dst

# Three destination files must exist.
test -f a || fail=1
test -f b || fail=1
test -f c || fail=1

# The three i-node numbers must be the same.
ia=`ls -i a|sed 's/ a//'`
ib=`ls -i b|sed 's/ b//'`
ic=`ls -i c|sed 's/ c//'`
test $ia = $ib || fail=1
test $ia = $ic || fail=1

(exit $fail); exit $fail
