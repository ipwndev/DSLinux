#!/bin/sh
# -*- perl -*-
# Basic tests for "fmt".

# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software
# Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

: ${PERL=perl}
: ${srcdir=.}

$PERL -e 1 > /dev/null 2>&1 || {
  echo 1>&2 "$0: configure didn't find a usable version of Perl," \
    "so can't run this test"
  exit 77
}

# Export this to avoid hassles when run in a UTF-8 locale,
# since we use 8-bit characters below, and those values are
# interpolated into strings (to perform substitution) in Coreutils.pm.
LC_ALL=C
export LC_ALL

exec $PERL -w -I$srcdir/.. -MCoreutils -- - <<\EOF
require 5.003;
use strict;

(my $program_name = $0) =~ s|.*/||;

my @Tests =
    (
     ['8-bit-pfx', qw (-p 'ç'),
      {IN=> "ça\nçb\n"},
      {OUT=>"ça b\n"}],
     ['wide-1', '-w 32768',
      {ERR => "fmt: invalid width: `32768'\n"}, {EXIT => 1}],
     ['wide-2', '-w 2147483647',
      {ERR => "fmt: invalid width: `2147483647'\n"}, {EXIT => 1}],
     ['bad-suffix', '-72x',	{IN=> ''},
      {ERR => "fmt: invalid width: `72x'\n"}, {EXIT => 1}],
     ['no-file', 'no-such-file',
      {ERR => "fmt: cannot open `no-such-file' for reading:"
       . " No such file or directory\n"}, {EXIT => 1}],
     ['obs-1', '-c -72',
      {ERR => "fmt: invalid option -- 7; -WIDTH is recognized only when it"
       . " is the first\noption; use -w N instead\n"
       . "Try `fmt --help' for more information.\n" }, {EXIT => 1}],

     # With --prefix=P, Do not remove leading on lines without the prefix.
     ['pfx-1', qw (-p '>'),
      {IN=>  " 1\n  2\n\t3\n\t\t4\n> quoted\n> text\n"},
      # This is the buggy output (leading white space removed),
      # from coreutils-5.93.
      {OUT=> "1\n2\n3\n4\n> quoted text\n"}],
      # FIXME: this is the desired output
      # {OUT=> " 1\n  2\n\t3\n\t\t4\n> quoted text\n"}],

     # Like the above, but when two adjacent, non-prefixed lines have
     # the same indentation, ensure that they are formatted.
     ['pfx-2', qw (-p '>'),
      {IN=>  " 1\n 2\n\t3\n\t4\n"},
      {OUT=> "1\n2\n3\n4\n"}],
      # FIXME: this is the desired output
      # {OUT=> " 1 2\n\t3 4\n"}],
    );

my $save_temps = $ENV{DEBUG};
my $verbose = $ENV{VERBOSE};

my $prog = $ENV{PROG} || die "$0: \$PROG not specified in environment\n";
my $fail = run_tests ($program_name, $prog, \@Tests, $save_temps, $verbose);
exit $fail;
EOF
