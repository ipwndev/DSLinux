#!/bin/sh
# make sure ls and `ls -R' do the right thing when invoked with no arguments.

# Copyright (C) 2001, 2003, 2004, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  ls --version
fi

pwd=`pwd`
tmp=no-args.$$
trap 'status=$?; cd "$pwd" && rm -rf $tmp && exit $status' 0
trap '(exit $?); exit' 1 2 13 15

framework_failure=0
mkdir $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir -p dir/subdir || framework_failure=1
touch dir/subdir/file2 || framework_failure=1
ln -s f symlink || framework_failure=1

cat > exp <<\EOF || framework_failure=1
dir
exp
out
symlink
EOF

if test $framework_failure = 1; then
  echo 'failure in testing framework'
  (exit 1); exit 1
fi

fail=0

ls -1 > out || fail=1

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

cat > exp <<\EOF
.:
dir
exp
out
symlink

./dir:
subdir

./dir/subdir:
file2
EOF

ls -R1 > out || fail=1

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
